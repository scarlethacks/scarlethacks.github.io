{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Object","defineProperty","value","firebase","createFirebaseNamespace","default","./app/firebase_app","./utils/shims","2","patchCapture","captureFake","result","captureStackTrace","ERROR_NAME","FirebaseError","message","this","ErrorFactory","prototype","create","err_1","apply","arguments","name","get","stack","constructor","service","serviceName","errors","pattern","data","undefined","template","fullCode","replace","match","key","toString","err","prop","hasOwnProperty","slice","3","app","DEFAULT_ENTRY_NAME","contains","apps_","error","getApps","keys","map","callAppHooks","eventName","factories","forEach","factoryName","useAsService","appHooks","useService","options","namespace","__esModule","initializeApp","FirebaseAppImpl","apps","Promise","_promise","PromiseImpl","SDK_VERSION","INTERNAL","registerService","createService","serviceProperties","appHook","allowMultipleInstances","serviceNamespace","appArg","_deep_copy","deepExtend","args","_i","_getService","bind","extendNamespace","props","createSubscribe","_subscribe","_errors","removeApp","patchProperty","appErrors","obj","tokenListeners","firebase_","isDeleted_","services_","name_","options_","deepCopy","getUid","getToken","resolve","addAuthTokenListener","callback","push","setTimeout","removeAuthTokenListener","filter","listener","checkDestroyed_","enumerable","configurable","delete","_this","then","services","serviceKey","instanceKey","all","instanceIdentifier","instanceSpecifier","extendApp","console","log","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","../utils/deep_copy","../utils/promise","./errors","./subscribe","4","implementsAnyMethods","methods","_typeof","methods_1","method","noop","Symbol","iterator","executor","onNoObservers","proxy","ObserverProxy","subscribe","async","fn","onError","catch","observers","unsubscribes","observerCount","task","finalized","next","forEachObserver","observer","close","complete","nextOrObserver","unsub","unsubscribeOne","finalError","sendOne","5","global","h","aa","k","ba","m","ca","da","ea","fa","b","Array","c","splice","propertyIsEnumerable","ha","ia","ja","p","q","ka","la","d","unshift","Function","indexOf","ma","na","Date","now","Sc","Cg","String","oa","split","shift","join","pa","trim","xa","qa","test","ra","sa","ta","ua","va","wa","v","ya","za","Aa","w","Ba","Ca","Da","Ea","Ga","Rc","$e","Fa","mb","kb","Ha","Ia","Ka","Kc","af","Ja","cb","La","Na","Ma","Oa","Pa","JSON","stringify","encodeURIComponent","Qa","Math","max","x","Ra","Sa","g","Ta","some","Va","Ua","charAt","Wa","Ya","Xa","Za","$a","concat","ab","bb","db","navigator","eb","userAgent","y","fb","gb","hb","ib","jb","lb","nb","ob","yb","qb","pb","rb","z","sb","tb","ub","toLowerCase","vb","xb","document","documentMode","zb","Ab","exec","Bb","parseFloat","Db","Cb","A","parseInt","Eb","compatMode","Lb","Fb","Gb","Ib","Hb","fromCharCode","Jb","Nb","oc","Uint8Array","Vc","Sf","we","tg","Int32Array","Mb","reset","Ob","Pb","Qb","Rb","C","wb","ec","mi","update","charCodeAt","digest","Tb","Sb","Ub","Hc","isDisposed","Vb","Number","Wb","Xb","addEventListener","removeEventListener","B","type","currentTarget","target","defaultPrevented","Je","stopPropagation","preventDefault","Yb","relatedTarget","button","screenY","screenX","clientY","clientX","offsetY","offsetX","charCode","keyCode","metaKey","shiftKey","altKey","ctrlKey","state","init","changedTouches","srcElement","nodeName","fromElement","toElement","layerX","layerY","pageX","pageY","cancelBubble","returnValue","wf","Zb","random","$b","ac","Lc","src","capture","uc","nc","bc","cc","J","hc","add","dc","remove","fc","od","hasListener","gc","ic","kc","once","jc","lc","listen","mc","attachEvent","pc","qc","rc","sc","tc","detachEvent","vc","parentNode","wc","handleEvent","xc","zc","Ze","yc","Ac","Bc","Dc","Cc","Gc","Ec","Fc","Mc","Boolean","valueOf","isFinite","isNaN","Ic","\"","\\","/","\b","\f","\n","\r","\t","\u000b","Jc","substr","be","wd","Nc","Oc","ActiveXObject","XMLHttpRequest","ve","Pc","XDomainRequest","Qc","readyState","onreadystatechange","responseText","status","statusText","responseXML","onload","zf","onerror","qe","onprogress","Af","ontimeout","Bf","open","send","abort","setRequestHeader","getResponseHeader","contentType","getAllResponseHeaders","Of","kf","cg","put","Uc","Tc","MessageChannel","window","postMessage","createElement","style","display","documentElement","appendChild","contentWindow","write","location","protocol","host","origin","port1","onmessage","port2","fe","removeChild","Wc","$c","Yc","Xc","set","scope","nd","Zc","cd","ad","bd","dd","setImmediate","Window","ed","displayName","fd","ownerDocument","defaultView","parentWindow","gd","id","Ye","hd","jd","If","kd","HTMLScriptElement","Element","ld","getElementById","cssText","className","htmlFor","md","setAttribute","lastIndexOf","cellpadding","cellspacing","colspan","frameborder","height","maxlength","nonce","role","rowspan","usemap","valign","width","pd","createTextNode","nodeType","qd","item","rd","$goog_Thenable","sd","D","Z","td","ud","vd","context","child","xd","E","F","zd","yd","Ad","Bd","uf","reason","Cd","Ed","Dd","cancel","Fd","Gd","Hd","Id","qg","rg","TypeError","Jd","Kd","qf","Ld","Md","Nd","De","je","Ud","$d","Od","Pd","he","Qd","Rd","Td","Sd","Wd","Vd","Xd","Yd","clearTimeout","Zd","pg","$","de","Ke","timeout","ae","Dg","attributes","charset","ce","getElementsByTagName","tagName","ee","le","Rf","Me","ge","Be","re","ie","ke","getName","getParent","me","timeStamp","msWriteProfilerMark","info","config","ne","oe","pe","G","cf","dispatchEvent","se","StopIteration","te","bf","H","ue","addAll","ga","clear","clone","xe","ye","ze","Ae","Ce","substring","decodeURIComponent","I","headers","Yf","Xe","Ee","Fe","O","Ge","He","toUpperCase","upload","Ie","FormData","responseType","withCredentials","Le","Ne","Uf","Oe","Pe","self","Qe","lengthComputable","loaded","total","Re","getResponse","response","mozResponseArrayBuffer","Se","Mf","Te","Ue","Ve","We","df","pop","ef","K","ff","removeParameter","gf","hf","decodeURI","encodeURI","jf","T","mf","lf","extend","nf","L","of","href","pf","sf","rf","tf","vf","floor","screen","availHeight","availWidth","top","left","resizable","statusbar","toolbar","scrollbars","standalone","HTMLAnchorElement","Location","noreferrer","createEvent","initMouseEvent","opener","focus","closed","xf","yf","Cf","Df","Ef","Ff","M","Hf","localStorage","Gf","setItem","removeItem","indexedDB","Jf","Kf","Lf","Nf","parse","Pf","___jsl","CP","Qf","onLine","connection","lg","Vf","visibilityState","Tf","Wf","abcd","N","Xf","Zf","$f","ag","bg","dg","wg","providerId","xg","yg","Bg","eg","fg","toJSON","gg","argument-error","app-not-authorized","app-not-installed","captcha-check-failed","code-expired","cordova-not-ready","cors-unsupported","credential-already-in-use","custom-token-mismatch","requires-recent-login","dynamic-link-not-activated","email-already-in-use","expired-action-code","cancelled-popup-request","internal-error","invalid-app-credential","invalid-app-id","invalid-user-token","invalid-auth-event","invalid-verification-code","invalid-continue-uri","invalid-cordova-configuration","invalid-custom-token","invalid-email","invalid-api-key","invalid-credential","invalid-persistence-type","invalid-message-payload","invalid-oauth-provider","unauthorized-domain","invalid-action-code","wrong-password","invalid-phone-number","invalid-recipient-email","invalid-sender","invalid-verification-id","missing-android-pkg-name","auth-domain-config-required","missing-app-credential","missing-verification-code","missing-continue-uri","missing-iframe-start","missing-ios-bundle-id","missing-phone-number","missing-verification-id","account-exists-with-different-credential","network-request-failed","no-auth-event","no-such-provider","operation-not-allowed","operation-not-supported-in-this-environment","popup-blocked","popup-closed-by-user","provider-already-linked","quota-exceeded","redirect-cancelled-by-user","redirect-operation-pending","user-token-expired","too-many-requests","unauthorized-continue-uri","unsupported-persistence-type","user-cancelled","user-not-found","user-disabled","user-mismatch","user-signed-out","weak-password","web-storage-unsupported","hg","U","getError","eventId","urlResponse","sessionId","ig","jg","kg","sub","email","provider_id","is_anonymous","getEmail","isAnonymous","idToken","iss","aud","exp","mg","accessToken","oauthToken","oauthTokenSecret","Kb","ng","og","id_token","access_token","secret","oauth_token_secret","postBody","requestUri","oauthIdToken","oauthAccessToken","isOAuthProvider","setCustomParameters","P","addScope","credential","sg","ug","vg","zg","Ag","Q","password","PROVIDER_ID","Eg","verificationId","phoneNumber","verifyPhoneNumber","Fg","Gg","operation","Hg","verificationCode","temporaryProof","sessionInfo","Ig","auth","verify","Jg","recaptchaToken","Kg","Lg","Mg","Ng","Og","Pg","Ug","R","node","secureTokenEndpoint","secureTokenTimeout","Qg","secureTokenHeaders","Rg","firebaseEndpoint","firebaseTimeout","Sg","firebaseHeaders","Tg","Content-Type","Vg","firebase_locale","Xg","Wg","Yg","Zg","gapi","client","request","setApiKey","setToken","path","body","authType","ah","grant_type","refresh_token","$g","bh","ch","dh","fh","eh","identifier","continueUri","allProviders","hh","gh","authorizedDomains","ih","jh","signInAnonymously","kh","updateEmail","lh","updatePassword","mh","photoUrl","updateProfile","deleteAttribute","sendPasswordResetEmail","requestType","nh","sendEmailVerification","oh","ph","rh","qh","deleteProvider","sh","th","needConfirmation","errorMessage","returnIdpCredential","uh","vh","autoCreate","wh","xh","oobCode","confirmPasswordReset","yh","newPassword","checkActionCode","zh","applyActionCode","Ah","endpoint","Y","Bh","Ch","Dh","Eh","recaptchaSiteKey","Fh","token","USER_NOT_FOUND","returnSecureToken","keyInvalid","ipRefererBlocked","INVALID_CUSTOM_TOKEN","CREDENTIAL_MISMATCH","MISSING_CUSTOM_TOKEN","INVALID_IDENTIFIER","MISSING_CONTINUE_URI","INVALID_EMAIL","INVALID_PASSWORD","USER_DISABLED","MISSING_PASSWORD","EMAIL_EXISTS","PASSWORD_LOGIN_DISABLED","INVALID_IDP_RESPONSE","FEDERATED_USER_ID_ALREADY_LINKED","INVALID_MESSAGE_PAYLOAD","INVALID_RECIPIENT_EMAIL","INVALID_SENDER","EMAIL_NOT_FOUND","EXPIRED_OOB_CODE","INVALID_OOB_CODE","MISSING_OOB_CODE","CREDENTIAL_TOO_OLD_LOGIN_AGAIN","INVALID_ID_TOKEN","TOKEN_EXPIRED","CORS_UNSUPPORTED","DYNAMIC_LINK_NOT_ACTIVATED","INVALID_APP_ID","TOO_MANY_ATTEMPTS_TRY_LATER","WEAK_PASSWORD","OPERATION_NOT_ALLOWED","USER_CANCELLED","CAPTCHA_CHECK_FAILED","INVALID_APP_CREDENTIAL","INVALID_CODE","INVALID_PHONE_NUMBER","INVALID_SESSION_INFO","INVALID_TEMPORARY_PROOF","MISSING_APP_CREDENTIAL","MISSING_CODE","MISSING_PHONE_NUMBER","MISSING_SESSION_INFO","QUOTA_EXCEEDED","SESSION_EXPIRED","INVALID_CONTINUE_URI","MISSING_ANDROID_PACKAGE_NAME","MISSING_IOS_BUNDLE_ID","UNAUTHORIZED_DOMAIN","Gh","getStyle","Hh","getUrl","url","getId","getContext","Jh","Ih","Kh","where","messageHandlersFilter","position","dontclear","Lh","restyle","setHideOnLeave","Mh","ping","sendMessage","Nh","register","Oh","Ph","Qh","Rh","Sh","Th","Uh","RegExp","Vh","Wh","Xh","authEvent","webStorageSupport","Yh","theme","sitekey","size","hasChildNodes","apiKey","Zh","$h","ai","render","bi","grecaptcha","execute","firstChild","ci","di","Infinity","hl","ei","fi","reactNative","AsyncStorage","getItem","gi","ii","hi","ji","li","ki","sessionStorage","oi","ni","W","pi","errorCode","onupgradeneeded","createObjectStore","keyPath","onsuccess","qi","ri","objectStore","si","transaction","ti","getAll","openCursor","yi","xi","Browser","ui","Node","vi","ReactNative","wi","zi","android","packageName","installApp","minimumVersion","iOS","bundleId","handleCodeInApp","Ai","continueUrl","canHandleCodeInApp","androidPackageName","androidMinimumVersion","androidInstallApp","iOSBundleId","Bi","confirm","Ci","Di","newEmail","fromEmail","Ei","start","Fi","Gi","stop","Mi","Hi","Ii","Ji","Ki","Li","rawUserInfo","profile","login","screenName","Qi","Ni","NONE","Oi","Pi","V","Ri","Si","addListener","removeListener","Ti","Ui","setInterval","oldValue","newValue","clearInterval","Vi","j","Wi","Xi","Yi","Zi","$i","aj","bj","cj","dj","ej","fj","ibi","apn","appDisplayName","gj","handleOpenURL","hj","ij","jj","kj","lj","pj","mj","nj","unknown","signInViaRedirect","linkViaRedirect","reauthViaRedirect","signInViaPopup","linkViaPopup","reauthViaPopup","X","oj","sj","qj","rj","unsubscribe","tj","uj","getRedirectResult","vj","wj","xj","yj","zj","user","Aj","Bj","refreshToken","expirationTime","Dj","Cj","expiresIn","Ej","expires_in","Fj","uid","photoURL","Gj","S","appName","authDomain","Hj","Ij","Jj","Kj","Lj","getIdToken","Mj","Nj","Oj","Pj","Qj","emailVerified","providerData","Rj","Sj","Tj","Vj","Uj","Wj","copy","reload","Xj","Yj","warn","Zj","users","localId","ak","passwordHash","providerUserInfo","rawId","reauthenticateAndRetrieveDataWithCredential","bk","reauthenticateWithCredential","ck","linkAndRetrieveDataWithCredential","dk","linkWithCredential","linkWithPhoneNumber","reauthenticateWithPhoneNumber","additionalUserInfo","operationType","updatePhoneNumber","unlink","linkWithPopup","ek","reauthenticateWithPopup","fk","linkWithRedirect","gk","reauthenticateWithRedirect","hk","ik","jk","stsTokenManager","redirectEventId","kk","lk","mk","nk","pk","ok","qk","rk","sk","tk","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","currentUser","Dk","Ek","signInWithPopup","signInWithRedirect","signOut","Fk","Gk","Hk","onIdTokenChanged","onAuthStateChanged","signInWithCustomToken","signInWithEmailAndPassword","createUserWithEmailAndPassword","signInWithCredential","signInAndRetrieveDataWithCredential","Ik","_lat","fetchProvidersForEmail","verifyPasswordResetCode","signInWithPhoneNumber","Jk","optional","Kk","Lk","Mk","Nk","Ok","Pk","App","Qk","Rk","Sk","Tk","Uk","Persistence","LOCAL","SESSION","Auth","User","./app","6","_interopRequireWildcard","newObj","registerDatabase","instance","_RepoManager","RepoManager","getInstance","databaseFromApp","Reference","_Reference","Query","_Query","Database","_Database","enableLogging","_util","ServerValue","TEST_ACCESS","_environment","isNodeSdk","_app2","_interopRequireDefault","./database/api/Database","./database/api/Query","./database/api/Reference","./database/api/internal","./database/api/test_access","./database/core/RepoManager","./database/core/util/util","./utils/environment","7","DataSnapshot","_validation","_validation2","_Path","_PriorityIndex","node_","ref_","index_","val","validateArgCount","exportVal","exists","isEmpty","childPathString","validatePathString","childPath","Path","childRef","getChild","PRIORITY_INDEX","hasChild","getPriority","action","validateCallback","isLeafNode","forEachChild","hasChildren","getKey","numChildren","getRef","../../utils/validation","../core/snap/indexes/PriorityIndex","../core/util/Path","../core/util/validation","8","DatabaseInternals","_parser","_Repo","repo_","Repo","fatal","root_","Empty","ref","pathString","checkDeleted_","refFromURL","apiName","parsedURL","parseRepoInfo","validateUrl","repoInfo","repoInfo_","goOffline","interrupt","goOnline","resume","TIMESTAMP",".sv","database","deleteRepo","../../utils/promise","../core/Repo","../core/RepoManager","../core/util/libs/parser","../core/util/util","./Reference","9","__referenceConstructor","_assert","_KeyIndex","_ValueIndex","_PathIndex","_EventRegistration","repo","queryParams_","orderByCalled_","assert","validateQueryEndpoints_","params","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","getIndex","KEY_INDEX","tooManyArgsError","wrongArgTypeError","getIndexStartName","MIN_NAME","getIndexEndName","MAX_NAME","isValidPriority","PathIndex","VALUE_INDEX","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","fnName","getQueryParams","on","eventType","cancelCallbackOrContext","validateEventType","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","ValueEventRegistration","addEventCallbackForQuery","ChildEventRegistration","off","validateContextObject","valueCallback","removeEventCallbackForQuery","userCallback","cancelOrContext","firstCall","deferred","Deferred","attachDummyErrorHandler","promise","onceCallback","snapshot","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","index","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","validateFirebaseDataArg","validateKey","endAt","equalTo","toUrlEncodedString","queryObject","getQueryObject","queryIdentifier","ObjectToUniqueKey","isEqual","other","sameRepo","samePath","equals","sameQueryIdentifier","errorPrefix","../../utils/assert","../core/snap/indexes/KeyIndex","../core/snap/indexes/PathIndex","../core/snap/indexes/ValueIndex","../core/view/EventRegistration","10","_onDisconnect","_TransactionResult","_NextPushId","_QueryParams","_SyncPoint","__extends","extendStatics","setPrototypeOf","__proto__","__","_super","QueryParams","DEFAULT","getBack","getFront","validateRootPathString","parentPath","parent","getRoot","databaseProp","newVal","onComplete","validateWritablePath","setWithPriority","wrapCallback","objectToMerge","isArray","newObjectToMerge","validateFirebaseMergeDataArg","newPriority","validatePriority","transactionUpdate","applyLocally","validateBoolean","startTransaction","committed","TransactionResult","setPriority","priority","serverTime","nextPushId","thennablePushRef","pushRef","onDisconnect","OnDisconnect","SyncPoint","../core/SyncPoint","../core/util/NextPushId","../core/view/QueryParams","./Query","./TransactionResult","./onDisconnect","11","12","interceptServerData","dataUpdateCount","statsIncrementCounter","stats","setSecurityDebugCallback","isWebSocketsAvailable","forceWebSockets","forceLongPolling","_WebSocketConnection","_BrowserPollConnection","WebSocketConnection","forceDisallow","BrowserPollConnection","forceAllow","persistentConnection_","securityDebugCallback_","showDelta","metric","interceptServerData_","../realtime/BrowserPollConnection","../realtime/WebSocketConnection","13","path_","onDisconnectCancel","onDisconnectSet","onDisconnectSetWithPriority","onDisconnectUpdate","14","forceRestClient","listens","ConnectionTarget","hijackHash","RealTimeConnection","DataConnection","_RepoInfo","_PersistentConnection","_Connection","PersistentConnection","simpleListen","sendRequest","echo","onEcho","Connection","newHash","oldPut","opt_onComplete","opt_hash","RepoInfo","query","firebaseRef","listens_","_forceRestClient","../core/PersistentConnection","../core/RepoInfo","../realtime/Connection","15","AuthTokenProvider","app_","forceRefresh","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","./util/util","16","CompoundWrite","_ImmutableTree","_obj","_Node","writeTree_","addWrite","ImmutableTree","rootmost","findRootMostValueAndPath","rootMostPath","relativePath","updateChild","subtree","setTree","addWrites","updates","newWrite","childKey","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","children","childName","childNode","NamedNode","inorderTraversal","childTree","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","../../utils/obj","./snap/Node","./snap/indexes/PriorityIndex","./util/ImmutableTree","./util/Path","17","_json","_VisibilityMonitor","_OnlineMonitor","_jwt","_constants","_ServerActions","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","log_","logWrapper","interruptReasons_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","lastSessionId","establishConnectionTimer_","visible_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","VisibilityMonitor","onVisible_","OnlineMonitor","onOnline_","onResponse","curReqNum","msg","currentHashFn","tag","queryId","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","payload","warnOnListenWarnings_","removeListen_","warnings","safeGet","indexSpec","indexPath","refreshAuthToken","tryAuth","reduceReconnectDelayIfAdminCredential_","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","onDisconnectPut","sendOnDisconnect_","onDisconnectMerge","hash","putInternal","merge","sendPut_","queued","reportStats","errorReason","onDataMessage_","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","onReady_","timestamp","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","visible","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","min","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","self_1","lastSessionId_1","canceled_1","connection_1","closeFn_1","CONSTANTS","NODE_ADMIN","delta","serverTimeOffset","normalizedPathString","getCount","statusCode","explanation","queries","clientName","NODE_CLIENT","isMobileCordova","isReactNative","currentlyOnline","ServerActions","../../app","../../utils/constants","../../utils/environment","../../utils/json","../../utils/jwt","./ServerActions","./util/OnlineMonitor","./util/VisibilityMonitor","18","ReadonlyRestClient","_util2","getListenId_","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","queryStringParameters","authTokenData","authToken","secure","querystring","xhr","jsonEval","../../utils/util","19","_ServerValues","_nodeFromJSON","_SparseSnapshotTree","_SyncTree","_SnapshotHolder","_AuthTokenProvider","_StatsManager","_StatsReporter","_StatsListener","_EventQueue","_ReadonlyRestClient","statsListener_","eventQueue_","EventQueue","nextWriteId_","interceptServerDataCallback_","onDisconnect_","SparseSnapshotTree","authTokenProvider","stats_","StatsManager","getCollection","beingCrawled","server_","authOverride","statsReporter_","getOrCreateReporter","StatsReporter","transactions_init_","infoData_","SnapshotHolder","infoSyncTree_","SyncTree","startListening","infoEvents","getNode","applyServerOverwrite","stopListening","updateInfo_","serverSyncTree_","events","raiseEventsForChangedPath","offset","generateServerValues","generateWithValues","isMerge","taggedChildren","raw","nodeFromJSON","applyTaggedQueryMerge","taggedSnap","applyTaggedQueryOverwrite","changedChildren","applyServerMerge","snap","affectedPath","rerunTransactions_","connectStatus","runOnDisconnectEvents_","each","newNode","updateSnapshot","getNextWriteId_","serverValues","newNodeUnresolved","resolveDeferredValueSnapshot","writeId","applyUserOverwrite","queueEvents","success","clearEvents","ackUserWrite","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","applyUserMerge","changedPath","resolveDeferredValueTree","forEachTree","forget","remember","newChildNode","eventRegistration","addEventRegistration","raiseEventsAtPath","removeEventRegistration","StatsListener","longestName","reduce","previousValue","currentValue","stat","incrementCounter","includeStat","var_args","prefix","exceptionGuard","__database","../api/Database","./AuthTokenProvider","./PersistentConnection","./ReadonlyRestClient","./SnapshotHolder","./SparseSnapshotTree","./SyncTree","./snap/nodeFromJSON","./stats/StatsListener","./stats/StatsManager","./stats/StatsReporter","./util/ServerValues","./view/EventQueue","20","_storage","_Constants","webSocketOnly","persistenceKey","domain","internalHost","PersistentStorage","needsQueryParam","isCacheableHost","isDemoHost","isCustomHost","updateHost","newHost","connectionURL","connURL","WEBSOCKET","LONG_POLLING","pairs","str","toURLString","../realtime/Constants","./storage/storage","21","_staticInstance","repos_","useRestClient_","dbUrl","parsedUrl","createRepo","./Repo","./Repo_transaction","./util/libs/parser","./util/validation","22","TransactionStatus","_DataSnapshot","_Tree","_ChildrenNode","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","Tree","watchRef","order","LUIDGenerator","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","validateFirebaseData","RUN","queueNode","subTree","nodeQueue","getValue","setValue","priorityForNode","calcCompleteEventCache","ChildrenNode","EMPTY_NODE","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","every","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newData","newDataNode","updatePriority","oldWriteId","newNodeResolved","lastInput","front","transactionNode","popFront","transactionQueue","aggregateTransactionQueuesForNode_","sort","to","from","forEachAncestor","abortTransactionsOnNode_","forEachDescendant","lastSent","../api/DataSnapshot","../api/Reference","./snap/ChildrenNode","./util/Tree","23","24","rootNode_","newSnapshotNode","25","_CountedSet","value_","children_","find","CountedSet","tree","prefixPath","func","./util/CountedSet","26","_CacheNode","_ViewCache","_View","views_","applyOperation","writesCache","optCompleteServerCache","source","view","events_1","serverCache","serverCacheComplete","eventCache","eventCacheComplete","calcCompleteEventChildren","viewCache","ViewCache","CacheNode","View","getInitialEvents","cancelError","removed","cancelEvents","hadCompleteView","hasCompleteView","viewQueryId","getQuery","getQueryViews","getCompleteServerCache","viewForQuery","getCompleteView","viewExistsForQuery","findValue","./view/CacheNode","./view/View","./view/ViewCache","27","_AckUserWrite","_ListenComplete","_Merge","_Operation","_Overwrite","_WriteTree","listenProvider_","syncPointTree_","pendingWriteTree_","WriteTree","tagToQueryMap_","queryToTagMap_","addOverwrite","applyOperationToSyncPoints_","Overwrite","OperationSource","addMerge","changeTree","fromObject","Merge","revert","getWrite","affectedTree_1","AckUserWrite","Server","applyListenComplete","ListenComplete","queryKey","queryKeyForTag_","parseQueryKey_","queryPath","op","forServerTaggedQuery","applyTaggedOperation_","applyTaggedListenComplete","foundAncestorDefaultView","foreachOnPath","pathToSyncPoint","sp","syncPoint","foreachChild","childSyncPoint","completeCache","updateImmediateChild","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","childWrites","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","findIndex","covered","findOnPath","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","createListenerForView_","queryForListening_","tagForQuery_","queryToRemove","tagToRemove","removeTags_","writeIdsToExclude","pathSoFar","fold","maybeChildSyncPoint","childMap","views_1","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","queries_1","childQueries","queryToStop","getServerCache","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","operationForChild","childServerCache","getImmediateChild","childWritesCache","./SyncPoint","./WriteTree","./operation/AckUserWrite","./operation/ListenComplete","./operation/Merge","./operation/Operation","./operation/Overwrite","28","WriteTreeRef","_CompoundWrite","visibleWrites_","allWrites_","lastWriteId_","record","idx","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","completeServerCache","includeHiddenWrites","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","completeChildren","topLevelSet","childSnap","merge_1","namedNode","calcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","calcCompleteChild","isCompleteForChild","shadowingWrite","calcIndexedSlice","completeServerData","startPost","count","reverse","toIterate","withIndex","nodes","cmp","getCompare","iter","getReverseIteratorFrom","getIteratorFrom","getNext","writeRecord","findKey","DefaultFilter_","writes","treeRoot","compoundWrite","writePath","assertionError","deepNode","treePath_","existingServerCache","./CompoundWrite","29","affectedTree","OperationType","ACK_USER_WRITE","../../../utils/assert","../util/Path","./Operation","30","LISTEN_COMPLETE","31","MERGE","./Overwrite","32","fromUser","fromServer","tagged","33","OVERWRITE","34","MAX_NODE","MaxNode","_SortedMap","_snap","_IndexMap","_LeafNode","_comparators","priorityNode_","indexMap_","lazyHash_","validatePriorityNode","SortedMap","NAME_COMPARATOR","IndexMap","Default","newPriorityNode","newChildren","newIndexMap","removeFromIndexes","insert","addToIndexes","getLength","newImmediateChild","exportFormat","numKeys","maxKey","allIntegerKeys","INTEGER_REGEXP_","array","toHash_1","priorityHashText","childHash","sha1","getPredecessorChildName","resolveIndex_","predecessor","getPredecessorKey","getFirstChildName","indexDefinition","minKey","getFirstChild","getLastChildName","getLastChild","wrappedNode","getIterator","minPost","Wrap","peek","compare","getReverseIterator","maxPost","endPost","compareTo","hasIndex","addIndex","isIndexed","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","defineProperties","MIN","MAX","KeyIndex","__EMPTY_NODE","LeafNode","__childrenNodeConstructor","setMaxNode","../util/SortedMap","../util/util","./IndexMap","./LeafNode","./Node","./comparators","./indexes/KeyIndex","./indexes/PriorityIndex","./snap","35","_defaultIndexMap","_childSet","fallbackObject","indexes_","indexSet_",".priority","indexKey","sortedMap","existingChildren","childList","sawIndexedValue","isDefinedOn","newIndex","buildChildSet","indexName","newIndexSet","newIndexes","indexedChildren","existingSnap","../../../utils/obj","./childSet","36",".value","toHash","doubleToIEEE754String","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","37","38","LOG_2","Base12Num","num","logBase2","current_","mask","bits","bitMask","bits_","nextBitIsOne","keyFn","mapSortFn","buildBalancedTree","low","high","LLRBNode","BLACK","middle","right","root","base12","buildPennant","chunkSize","color","attachPennant","pennant","isOne","pow","RED","buildFrom12Array","39","NAME_ONLY_COMPARATOR","nameCompare","40","Index","indexedValueChanged","oldNode","oldWrapped","newWrapped","../../util/util","../Node","41","_Index","makePost","indexValue","../../../../utils/assert","./Index","42","indexPath_","extractChild","aChild","bChild","indexCmp","valueNode","../ChildrenNode","../nodeFromJSON","43","PriorityIndex","setNodeFromJSON","aPriority","bPriority","priorityNode","../LeafNode","44","ValueIndex","45","json","jsonLeaf","USE_HINZE","node_1","jsonObj_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj_1","childSet","sortedChildSet","./ChildrenNode","46","47","StatsCollection","counters_","amount","../../../utils/deep_copy","48","collection_","last_","newStats","49","_StatsCollection","hashString","collections_","creatorFunction","reporters_","./StatsCollection","50","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","collection","statsToReport_","setTimeoutNonBlocking","reportStats_","reportedStats","haveStatsToReport","./StatsListener","51","DOMStorageWrapper","domStorage_","prefix_","prefixedName_","storedVal","../../../utils/json","52","MemoryStorage","cache_","isInMemoryStorage","53","SessionStorage","_DOMStorageWrapper","_MemoryStorage","createStoragefor","domStorageName","domStorage","./DOMStorageWrapper","./MemoryStorage","54","55","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","eventData","getInitialEvent","et","56","emptyChildrenSingleton","EmptyChildren","stringCompare","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","toSet","newChild","newTree","fold_","accum","findOnPath_","pathToFollow","nextChild","foreachOnPath_","currentRelativePath","foreach","foreach_","./Path","./SortedMap","./util","57","PUSH_CHARS","lastPushTime","lastRandChars","duplicateTime","timeStampChars","58","_EventEmitter","online_","../../../utils/environment","./EventEmitter","59","ValidationPath","_utf","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","begin","pieces","childPathObj","childPieces","outerPath","innerPath","outer","inner","comparePaths","leftKeys","rightKeys","errorPrefix_","parts_","byteLength_","stringLength","checkValid_","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","../../../utils/utf8","60","resolveDeferredValue","values","resolvedTree","rawPri","leafNode","childrenNode","../SparseSnapshotTree","../snap/LeafNode","../snap/indexes/PriorityIndex","../snap/nodeFromJSON","61","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","hasNext","reverseTraversal","min_","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","LLRBEmptyNode","comparator_","rightParent","resultGenerator","62","TreeNode","childCount","parent_","pathObj","updateParents_","includeSelf","childrenFirst","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","63","hidden","visibilityChange","64","decodePath","pathStringDecoded","piece","parseURL","dataURL","subdomain","warnIfPageIsSecure","scheme","port","colonInd","slashInd","parts","../../RepoInfo","../Path","../util","65","exportPropGetter","callUserCallback","tryParseInt","isWindowsStoreApp","isChromeExtensionContentScript","bindCallback","splitStringBySize","requireKey","executeWhenDOMReady","isInvalidJSONNumber","warnAboutUnsupportedMethod","logger","base64Decode","base64Encode","setBufferImpl","impl","BufferImpl","_crypt","_Sha","buildLogMessage_","utf8Bytes","stringToByteArray","base64","encodeByteArray","decodeString","Sha1","sha1Bytes","firstLog_","logger_","persistent","methodName","POSITIVE_INFINITY","NEGATIVE_INFINITY","called_1","wrappedFn_1","aAsInt","bAsInt","segsize","len","dataSegs","ln","abs","LN2","round","hexByteString","hexByte","Windows","UI","intVal","search","object","fnGet","time","../../../utils/Sha1","../../../utils/crypt","../storage/storage","66","validateObjectContainsKey","validateObject","validateString","validateCredential","validateFirebaseMergePaths","isValidRootPathString","isValidPathString","isValidKey","MAX_LEAF_SIZE_","INVALID_PATH_REGEX_","INVALID_KEY_REGEX_","argumentNumber","hasDotValue_1","hasActualChild_1","mergePaths","curPath","prevPath","bool","string","opt_type","../../../utils/validation","67","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","68","Change","snapshotNode","oldSnap","prevName","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","69","ChildChangeAccumulator","_Change","changeMap_","trackChildChange","change","oldChange","oldType","getChanges","getValues","./Change","70","WriteTreeCompleteChildSource","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","writes_","viewCache_","optCompleteServerCache_","getEventCache","serverNode","getCompleteServerSnap","./CacheNode","71","CancelEvent","DataEvent","getPath","getEventType","getEventRunner","72","EventGenerator","query_","generateEventsForChanges","changes","eventRegistrations","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","respondsTo","aWrapped","bWrapped","../snap/Node","73","EventList","eventLists_","recursionDepth_","eventDataList","currList","eventPath","raiseQueuedEventsMatchingPredicate_","sentAll","eventList","raise","events_","eventFn","74","_Event","callback_","cancelCallback_","context_","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","otherKey","getAnyKey","thisKey","../../api/DataSnapshot","./Event","75","_IndexedFilter","_LimitedFilter","_RangedFilter","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","limit_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","isViewFromLeft","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","getLimit","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","getNodeFilter","IndexedFilter","LimitedFilter","RangedFilter","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","../snap/indexes/KeyIndex","../snap/indexes/PathIndex","../snap/indexes/ValueIndex","./filter/IndexedFilter","./filter/LimitedFilter","./filter/RangedFilter","76","_ViewProcessor","_EventGenerator","initialViewCache","eventRegistrations_","indexFilter","processor_","ViewProcessor","initialServerCache","initialEventCache","serverSnap","updateFullNode","eventSnap","newServerCache","filtersNodes","newEventCache","eventGenerator_","cache","path_1","maybeEvent","remaining","existing","getCompleteEventSnap","oldViewCache","assertIndexed","generateEventsForChanges_","initialChanges","../operation/Operation","../snap/ChildrenNode","./EventGenerator","./ViewCache","./ViewProcessor","77","eventCache_","serverCache_","updateEventSnap","filtered","updateServerSnap","78","ProcessorResult","_ChildChangeAccumulator","_CompleteChildSource","filter_","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","applyUserMerge_","applyServerMerge_","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","serverFilter","getIndexedFilter","newServerNode","oldChild","newEventSnap","cacheHasChild_","curViewCache","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","oldEventCache","serverChildren","../util/ImmutableTree","./ChildChangeAccumulator","./CompleteChildSource","79","optChangeAccumulator","newSnap","../../snap/ChildrenNode","../../snap/indexes/PriorityIndex","../Change","80","rangedFilter_","reverse_","fullLimitUpdateChild_","getEndPost","getStartPost","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","../../snap/Node","./RangedFilter","81","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","startName","endName","../../../core/snap/Node","./IndexedFilter","82","FirebaseIFrameScriptHolder","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_START_PARAM","_PacketReceiver","connId","transportSessionId","bytesSent","bytesReceived","everConnected_","urlFn","onMessage","curSegmentNum","myPacketOrderer","PacketReceiver","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","command","arg1","arg2","incrementIncomingBytes_","sendNewPolls","closeAfter","pN","handleResponse","urlParams","uniqueCallbackIdentifier","VERSION_PARAM","PROTOCOL_VERSION","TRANSPORT_SESSION_PARAM","LAST_SESSION_PARAM","FORGE_DOMAIN","REFERER_PARAM","FORGE_REF","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow_","forceDisallow_","isAvailable","markConnectionHealthy","shutdown_","myDisconnFrame","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentDocument","alive","innerHTML","myID","myPW","theURL","nodeRestRequest","newRequest_","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","rstate","../core/stats/StatsManager","../core/util/CountedSet","./Constants","./polling/PacketReceiver","83","_TransportManager","onMessage_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","TransportManager","start_","conn","initialTransport","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onPrimaryResponse_","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","version","onConnectionEstablished_","tryStartUpgrade_","upgradeTransport","startUpgrade_","closeConnections_","../core/storage/storage","./TransportManager","84","85","initTransports_","isSkipPollConnection","previouslyFailed","transports_","transports_1","ALL_TRANSPORTS","transport","./BrowserPollConnection","./WebSocketConnection","86","process","setWebSocketImpl","WebSocketImpl","MozWebSocket","WebSocket","keepaliveTimer","frames","totalFrames","connectionURL_","device","User-Agent","platform","env","mySock","onopen","onclose","handleIncomingFrame","isOldAndroid","oldAndroidRegex","oldAndroidMatch","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","responsesRequiredToBeHealthy","healthyTimeout","_process","87","pendingResponses","currentResponseNum","closeAfterResponse","onClose","responseNum","requestNum","this_1","toProcess","_loop_2","_loop_1","../../core/util/util","88","./auth","./database","./messaging","./storage","89","registerMessaging","namespaceExports","Messaging","_windowController2","_swController2","./messaging/controllers/sw-controller","./messaging/controllers/window-controller","90","_errors3","_tokenManager2","_notificationPermission2","SENDER_ID_OPTION_NAME","ControllerInterface","errorFactory_","codes","BAD_SENDER_ID","messagingSenderId_","tokenManager_","currentPermission","getNotificationPermission_","granted","denied","NOTIFICATIONS_BLOCKED","getSWRegistration_","getSavedToken","createToken","deleteToken","pushManager","getSubscription","subscription","SHOULD_BE_INHERITED","requestPermission","AVAILABLE_IN_WINDOW","useServiceWorker","optError","optCompleted","onTokenRefresh","setBackgroundMessageHandler","AVAILABLE_IN_SW","closeDatabase","Notification","permission","getTokenManager","../../app/errors","../models/errors","../models/notification-permission","../models/token-manager","91","_controllerInterface2","_errors2","_workerPageMessage2","_fcmDetails2","SWController","onPush_","onSubChange_","onNotificationClick_","bgMessageHandler_","event","msgPayload","handleMsgPromise","hasVisibleClients_","hasVisibleClients","notification","sendMessageToWindowClients_","notificationDetails","getNotificationData_","notificationTitle","title","showNotification","waitUntil","promiseChain","NO_FCM_TOKEN_FOR_RESUBSCRIBE","tokenDetails","tokenManager","getTokenDetailsFromToken","details","INVALID_SAVED_TOKEN","SUBSCRIPTION_OPTIONS","newSubscription","subscribeToFCM","fcmSenderId","fcmPushSet","fcmToken","UNABLE_TO_RESUBSCRIBE","stopImmediatePropagation","clickAction","getWindowClient_","windowClient","clients","openWindow","internalMsg","createNewMsg","TYPES_OF_MSG","NOTIFICATION_CLICKED","attemptToMessageClient_","notificationInformation","assign","_a","BG_HANDLER_FUNCTION_EXPECTED","URL","matchAll","includeUncontrolled","clientList","suitableClient","NO_WINDOW_CLIENT_TO_MSG","PUSH_MSG_RECEIVED","../models/fcm-details","../models/worker-page-message","./controller-interface","92","_defaultSw2","WindowController","registrationToUse_","manifestCheckPromise_","messageObserver_","tokenRefreshObserver_","onTokenRefresh_","setupSWMessageListener_","isSupported_","manifestCheck_","UNSUPPORTED_BROWSER","manifestTag","querySelector","fetch","manifestContent","INCORRECT_GCM_SENDER_ID","managePermissionResult","PERMISSION_BLOCKED","PERMISSION_DEFAULT","permissionPromise","ServiceWorkerRegistration","SW_REGISTRATION_EXPECTED","USE_SW_BEFORE_GET_TOKEN","waitForRegistrationToActivate_","serviceWorker","installing","waiting","active","stateChangeListener","SW_REG_REDUNDANT","NO_SW_IN_REG","FAILED_DEFAULT_REGISTRATION","browserErrorMessage","PARAMS","TYPE_OF_MSG","workerPageMessage","pushMessage","DATA","PushSubscription","../../app/subscribe","../models/default-sw","93","toBase64","arrayBuffer","uint8Version","btoa","94","95","CODES","GET_SUBSCRIPTION_FAILED","TOKEN_SUBSCRIBE_FAILED","TOKEN_SUBSCRIBE_NO_TOKEN","TOKEN_SUBSCRIBE_NO_PUSH_SET","INVALID_DELETE_TOKEN","DELETE_TOKEN_NOT_FOUND","DELETE_SCOPE_NOT_FOUND","FAILED_TO_DELETE_TOKEN","BAD_SCOPE","BAD_VAPID_KEY","BAD_SUBSCRIPTION","BAD_TOKEN","BAD_PUSH_SET","FAILED_DELETE_VAPID_KEY","ERROR_MAP","96","FCM_APPLICATION_SERVER_KEY","SUBSCRIPTION_DETAILS","userVisibleOnly","applicationServerKey","ENDPOINT","APPLICATION_SERVER_KEY","97","98","_arrayBufferToBase2","FCM_TOKEN_OBJ_STORE","TokenManager","openDbPromise_","openDatabase_","createIndex","unique","getTokenDetailsFromSWScope_","swScope","scopeRequest","getAllTokenDetailsForSenderId_","senderId","senderIdTokens","cursorRequest","cursor","continue","pushSet","p256dh","fcmSubscribeBody","Headers","append","subscribeOptions","fcmTokenResponse","isSameSubscription_","masterTokenDetails","saveTokenDetails_","swRegistration","allTokenDetails","fcmTokenDetails","../helpers/array-buffer-to-base64","./fcm-details","99","msgType","msgData","100","thisArg","_state","_handled","_value","_deferreds","doResolve","handle","_immediateFn","onFulfilled","onRejected","finale","_unhandledRejectionFn","Handler","done","ex","setTimeoutFunc","prom","arr","race","_setImmediateFn","_setUnhandledRejectionFn","101","factory","unused","opt_url","_service","Service","_xhriopool","XhrIoPool","registerStorage","TaskState","_taskenums","TaskEvent","StringFormat","_string","Storage","_reference","STORAGE_TYPE","./storage/implementation/string","./storage/implementation/taskenums","./storage/implementation/xhriopool","./storage/reference","./storage/service","102","and_","v1","v2","ArgSpec","validate","specs","passed","minArgs","maxArgs","errorsExports","invalidArgumentCount","validator","invalidArgument","stringSpec","opt_validator","opt_optional","stringValidator","isString","uploadDataSpec","ArrayBuffer","isNativeBlobDefined","Blob","metadataSpec","MetadataUtils","metadataValidator","nonNegativeNumberSpec","isNumber","looseObjectSpec","isDef","nullFunctionSpec","isFunction","isJustDef","./error","./metadata","./type","103","elem","arraylike","104","argsToForward","promiseimpl","./promise_external","105","AuthWrapper","constants","_failrequest","_location","_requestmap","maker","requestMaker","pool","bucket_","deleted_","extractBucket_","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","defaultMaxOperationRetryTime","maxUploadRetryTime_","defaultMaxUploadRetryTime","requestMap_","RequestMap","bucketString","configOption","makeFromBucketSpec","bucket","getAuthToken","_error","appDeleted","makeStorageReference","loc","makeRequest","requestInfo","FailRequest","addRequest","deleteApp","maxUploadRetryTime","setMaxUploadRetryTime","maxOperationRetryTime","setMaxOperationRetryTime","./constants","./failrequest","./location","./requestmap","106","canceled","cancelState","triggerCallback","triggeredCallback","callWithDelay","millis","timeoutId","handler","hitTimeout","waitSeconds","waitMillis","wasTimeout","stopped","107","FbsBlob","fs","opt_elideCopy","blobType","isNativeBlob","data_","byteLength","size_","type_","startByte","endByte","realBlob","sliced","sliceBlob","buffer","getBlob","blobby","uint8Arrays","dataFromString","RAW","finalLength_1","merged_1","index_1","uploadData","./fs","./string","108","setDomainBase","domainBase","downloadBase","apiBaseUrl","apiUploadBaseUrl","shortMaxOperationRetryTime","minSafeInteger","109","prependCode","Code","FirebaseStorageError","UNKNOWN","objectNotFound","OBJECT_NOT_FOUND","bucketNotFound","BUCKET_NOT_FOUND","projectNotFound","project","PROJECT_NOT_FOUND","quotaExceeded","unauthenticated","UNAUTHENTICATED","unauthorized","UNAUTHORIZED","retryLimitExceeded","RETRY_LIMIT_EXCEEDED","invalidChecksum","checksum","calculated","INVALID_CHECKSUM","CANCELED","invalidEventName","INVALID_EVENT_NAME","invalidUrl","INVALID_URL","invalidDefaultBucket","INVALID_DEFAULT_BUCKET","noDefaultBucket","NO_DEFAULT_BUCKET","cannotSliceBlob","CANNOT_SLICE_BLOB","serverFileWrongSize","SERVER_FILE_WRONG_SIZE","noDownloadURL","NO_DOWNLOAD_URL","INVALID_ARGUMENT","argMin","argMax","real","countPart","plural","INVALID_ARGUMENT_COUNT","APP_DELETED","invalidRootOperation","INVALID_ROOT_OPERATION","invalidFormat","format","INVALID_FORMAT","internalError","INTERNAL_ERROR","code_","message_","serverResponse_","codeProp","codeEquals","serverResponseProp","setServerResponseProp","serverResponse","110","promise_","getPromise","appDelete","111","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","blob","end","webkitSlice","mozSlice","112","jsonObjectOrNull","isNonArrayObject","113","fullServerUrl","encode","bucketOnlyServerUrl","bucketLocation","makeFromUrl","groups","regex","indices","postModify","group","captures","bucketValue","pathValue","114","noXform_","metadata","xformPath","fullPath","lastComponent","addRef","authWrapper","fromResource","resource","mappings","mapping","local","xform","server","Mapping","getMappings","mappings_","nameMapping","sizeMapping","tokens","urlPart","UrlUtils","makeDownloadUrl","makeQueryString","alt","fromResourceString","resourceString","toResourceString","writable","isObject","isNonNullObject","opt_local","opt_writable","opt_xform","./json","./path","./url","115","116","Observer","opt_error","opt_complete","117","canonicalChildPath","component","118","make","resolver","119","addAuthHeader_","addVersionHeader_","number","RequestEndStatus","queryPart","NetworkRequest","successCodes","additionalRetryCodes","errorHandler","progressCallback","backoff","XhrIoExports","errorCallback","pendingXhr_","backoffId_","resolve_","reject_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","errorCallback_","progressCallback_","timeout_","backoffDone","requestWentThrough","wasSuccessCode","getResponseText","backoffCallback","progressListener","progressEvent","createXhrIo","addUploadProgressListener","removeUploadProgressListener","hitServer","getErrorCode","ErrorCode","NO_ERROR","getStatus","isRetryStatusCode_","successCode","wasCanceled","ABORT","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","opt_canceled","./array","./backoff","./object","./xhrio","120","RequestInfo","121","map_","id_","unmap","122","handlerCheck","cndn","metadataHandler","text","sharedErrorHandler","newErr","objectErrorHandler","shared","determineContentType_","metadataForUpload_","opt_metadata","checkResumeHeader_","opt_allowed","allowed","resumableUploadChunkSize","ResumableUploadStatus","getMetadata","makeNormalUrl","_requestinfo","updateMetadata","deleteObject","multipartUpload","X-Goog-Upload-Protocol","boundary","genBoundary","preBlobPart","postBlobPart","_blob","makeUploadUrl","createResumableUpload","X-Goog-Upload-Command","X-Goog-Upload-Header-Content-Length","X-Goog-Upload-Header-Content-Type","getResumableUploadStatus","sizeString","continueResumableUpload","opt_status","opt_progressCallback","current","bytesLeft","bytesToUpload","X-Goog-Upload-Offset","uploadStatus","newCurrent","./blob","./requestinfo","123","utf8Bytes_","percentEncodedBytes_","decoded","DATA_URL","base64Bytes_","BASE64","hasMinus","hasUnder","invalidChar","BASE64URL","hasPlus","hasSlash","bytes","atob","dataURLBytes_","DataURLParts","rest","dataURLContentType_","endsWith","StringData","formatValidator","stringFormat","opt_contentType","124","taskStateFromInternalTaskState","InternalTaskState","RUNNING","PAUSING","CANCELING","PAUSED","SUCCESS","ERROR","STATE_CHANGED","125","126","nextPart","127","128","NetworkXhrIo","sent_","xhr_","errorCode_","sendPromise_","NETWORK_ERROR","opt_body","opt_headers","header","129","_xhrio_network","./xhrio_network","130","requests","fbsString","_task","newRef","newPath","throwIfRoot_","UploadTask","putString","getDownloadURL","./implementation/args","./implementation/blob","./implementation/error","./implementation/location","./implementation/metadata","./implementation/object","./implementation/path","./implementation/requests","./implementation/string","./implementation/type","./task","131","ServiceInternals","_authwrapper","fbsPromiseImpl","RequestExports","authWrapper_","authWrapperBucket","internals_","./implementation/authwrapper","./implementation/promise_external","./implementation/request","./reference","132","fbsTaskEnums","_observer","_tasksnapshot","fbsArgs","fbsArray","_async","fbsPromiseimpl","fbsRequests","typeUtils","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","location_","blob_","metadata_","resumable_","shouldDoResumable_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","makeProgressCallback_","sizeBefore","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","createRequest","statusRequest","uploadRequest","newStatus","increaseMultiplier_","metadataRequest","multipartRequest","transferred","old","notifyObservers_","wasPaused","externalState","UploadTaskSnapshot","completed","nextOrObserverValidator","nextValidator","observerValidator","nextOrObserverMessage","makeBinder","addObserver_","removeObserver_","_p","binderSpecs","notifyObserver_","finishPromise_","triggered","toCall","valid","pause","./implementation/array","./implementation/async","./implementation/observer","./implementation/taskenums","./tasksnapshot","133","bytesTransferred","totalBytes","urls","134","_hash","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","compress_","buf","opt_offset","opt_length","lengthMinusBlock","inbuf","totalBits","Hash","./hash","135","assertion","136","137","_globalScope","output","byteArrayToString","chunk","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","globalScope","input","opt_webSafe","init_","byteToCharMap","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","decodeStringToByteArray","charToByteMap","byte4","./globalScope","138","dateValue","139","getUA","140","141","142","143","issuedAtTime","isValidTimestamp","decode","claims","signature","validSince","validUntil","../database/core/util/util","144","objTo","objFrom","rv","opt_obj","opt_this","145","opt_nodeCallback","opt_value","../utils/globalScope","promise-polyfill","146","kValue","147","out","./assert","148","querystringDecode","querystringParams","arrayVal","./obj","149","argName","minCount","maxCount","argCount","argError","validateNamespace","150","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","nextTick","browser","argv","versions","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","151","Prometheus","country","latitude","longitude","city","ip","isValid","timezoneOffset","getTimezoneOffset","vendor","opera","appVersion","innerWidth","clientWidth","innerHeight","clientHeight","datetime","page","icon","clickFn","onclick","databaseURL","localhost","noScreenshots","trackUser","getUID","isTrackingUser","save","meta","visit","line","logon","hostname","loadFeatures","html2canvas","onrendered","toDataURL","img","img_note","access","has","can","featureID","deliver","redeem","promos","silent","Note","seen","noteid","terminate","notify","timers","Timer","started","timerID","timer","152","_0x7f9a","_0x47aa0e","_0x1598aa","_0x142aae","_0x3ee41d","_0xa7f9","_0x39bd45","_0x31c25a","projectId","storageBucket","messagingSenderId","153","ScarletHacksFirebase","prometheus","initialized","getCurrentUser","getPrometheus","saveSignupEmail","154","_config","_database","signupEmail","signupButton","postSignupEmail","isEmail","isEdu","signupWithEmail","classList","vex","dialog","alert","errMessage","which","./config","prometheusjs"],"mappings":"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","file":"../main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire('./utils/shims');\n\nvar _firebase_app = require('./app/firebase_app');\n\n// Export a single instance of firebase app\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n// Import the needed shims\nvar firebase = (0, _firebase_app.createFirebaseNamespace)();\n// Import the createFirebaseNamespace function\nexports.default = firebase;\nmodule.exports = exports['default'];\n\n\n},{\"./app/firebase_app\":3,\"./utils/shims\":146}],2:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.patchCapture = patchCapture;\nvar ERROR_NAME = 'FirebaseError';\nvar captureStackTrace = Error.captureStackTrace;\n// Export for faking in tests\nfunction patchCapture(captureFake) {\n    var result = captureStackTrace;\n    captureStackTrace = captureFake;\n    return result;\n}\nvar FirebaseError = function () {\n    function FirebaseError(code, message) {\n        this.code = code;\n        this.message = message;\n        var stack;\n        // We want the stack value, if implemented by Error\n        if (captureStackTrace) {\n            // Patches this.stack, omitted calls above ErrorFactory#create\n            captureStackTrace(this, ErrorFactory.prototype.create);\n        } else {\n            var err_1 = Error.apply(this, arguments);\n            this.name = ERROR_NAME;\n            // Make non-enumerable getter for the property.\n            Object.defineProperty(this, 'stack', {\n                get: function get() {\n                    return err_1.stack;\n                }\n            });\n        }\n    }\n    return FirebaseError;\n}();\nexports.FirebaseError = FirebaseError;\n// Back-door inheritance\n\nFirebaseError.prototype = Object.create(Error.prototype);\nFirebaseError.prototype.constructor = FirebaseError;\nFirebaseError.prototype.name = ERROR_NAME;\nvar ErrorFactory = function () {\n    function ErrorFactory(service, serviceName, errors) {\n        this.service = service;\n        this.serviceName = serviceName;\n        this.errors = errors;\n        // Matches {$name}, by default.\n        this.pattern = /\\{\\$([^}]+)}/g;\n        // empty\n    }\n    ErrorFactory.prototype.create = function (code, data) {\n        if (data === undefined) {\n            data = {};\n        }\n        var template = this.errors[code];\n        var fullCode = this.service + '/' + code;\n        var message;\n        if (template === undefined) {\n            message = 'Error';\n        } else {\n            message = template.replace(this.pattern, function (match, key) {\n                var value = data[key];\n                return value !== undefined ? value.toString() : '<' + key + '?>';\n            });\n        }\n        // Service: Error message (service/code).\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\n        var err = new FirebaseError(fullCode, message);\n        // Populate the Error object with message parts for programmatic\n        // accesses (e.g., e.file).\n        for (var prop in data) {\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\n                continue;\n            }\n            err[prop] = data[prop];\n        }\n        return err;\n    };\n    return ErrorFactory;\n}();\nexports.ErrorFactory = ErrorFactory;\n\n\n},{}],3:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createFirebaseNamespace = createFirebaseNamespace;\n\nvar _subscribe = require('./subscribe');\n\nvar _errors = require('./errors');\n\nvar _promise = require('../utils/promise');\n\nvar _deep_copy = require('../utils/deep_copy');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar contains = function contains(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n// An array to capture listeners before the true auth functions\n// exist\nvar tokenListeners = [];\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nvar FirebaseAppImpl = function () {\n    function FirebaseAppImpl(options, name, firebase_) {\n        this.firebase_ = firebase_;\n        this.isDeleted_ = false;\n        this.services_ = {};\n        this.name_ = name;\n        this.options_ = (0, _deep_copy.deepCopy)(options);\n        this.INTERNAL = {\n            getUid: function getUid() {\n                return null;\n            },\n            getToken: function getToken() {\n                return _promise.PromiseImpl.resolve(null);\n            },\n            addAuthTokenListener: function addAuthTokenListener(callback) {\n                tokenListeners.push(callback);\n                // Make sure callback is called, asynchronously, in the absence of the auth module\n                setTimeout(function () {\n                    return callback(null);\n                }, 0);\n            },\n            removeAuthTokenListener: function removeAuthTokenListener(callback) {\n                tokenListeners = tokenListeners.filter(function (listener) {\n                    return listener !== callback;\n                });\n            }\n        };\n    }\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\n        get: function get() {\n            this.checkDestroyed_();\n            return this.name_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\n        get: function get() {\n            this.checkDestroyed_();\n            return this.options_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FirebaseAppImpl.prototype.delete = function () {\n        var _this = this;\n        return new _promise.PromiseImpl(function (resolve) {\n            _this.checkDestroyed_();\n            resolve();\n        }).then(function () {\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\n            var services = [];\n            Object.keys(_this.services_).forEach(function (serviceKey) {\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\n                    services.push(_this.services_[serviceKey][instanceKey]);\n                });\n            });\n            return _promise.PromiseImpl.all(services.map(function (service) {\n                return service.INTERNAL.delete();\n            }));\n        }).then(function () {\n            _this.isDeleted_ = true;\n            _this.services_ = {};\n        });\n    };\n    /**\n     * Return a service instance associated with this app (creating it\n     * on demand), identified by the passed instanceIdentifier.\n     *\n     * NOTE: Currently storage is the only one that is leveraging this\n     * functionality. They invoke it by calling:\n     *\n     * ```javascript\n     * firebase.app().storage('STORAGE BUCKET ID')\n     * ```\n     *\n     * The service name is passed to this already\n     * @internal\n     */\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\n        if (instanceIdentifier === void 0) {\n            instanceIdentifier = DEFAULT_ENTRY_NAME;\n        }\n        this.checkDestroyed_();\n        if (!this.services_[name]) {\n            this.services_[name] = {};\n        }\n        if (!this.services_[name][instanceIdentifier]) {\n            /**\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\n             * then we will pass that instance on, otherwise we pass `null`\n             */\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME ? instanceIdentifier : undefined;\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\n            this.services_[name][instanceIdentifier] = service;\n        }\n        return this.services_[name][instanceIdentifier];\n    };\n    /**\n     * Callback function used to extend an App instance at the time\n     * of service instance creation.\n     */\n    FirebaseAppImpl.prototype.extendApp = function (props) {\n        var _this = this;\n        // Copy the object onto the FirebaseAppImpl prototype\n        (0, _deep_copy.deepExtend)(this, props);\n        /**\n         * If the app has overwritten the addAuthTokenListener stub, forward\n         * the active token listeners on to the true fxn.\n         *\n         * TODO: This function is required due to our current module\n         * structure. Once we are able to rely strictly upon a single module\n         * implementation, this code should be refactored and Auth should\n         * provide these stubs and the upgrade logic\n         */\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n            tokenListeners.forEach(function (listener) {\n                _this.INTERNAL.addAuthTokenListener(listener);\n            });\n            tokenListeners = [];\n        }\n    };\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\n        if (this.isDeleted_) {\n            error('app-deleted', { name: this.name_ });\n        }\n    };\n    return FirebaseAppImpl;\n}();\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\nFirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options || FirebaseAppImpl.prototype.delete || console.log('dc');\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nfunction createFirebaseNamespace() {\n    var apps_ = {};\n    var factories = {};\n    var appHooks = {};\n    // A namespace is a plain JavaScript Object.\n    var namespace = {\n        // Hack to prevent Babel from modifying the object returned\n        // as the firebase namespace.\n        __esModule: true,\n        initializeApp: initializeApp,\n        app: app,\n        apps: null,\n        Promise: _promise.PromiseImpl,\n        SDK_VERSION: '4.2.0',\n        INTERNAL: {\n            registerService: registerService,\n            createFirebaseNamespace: createFirebaseNamespace,\n            extendNamespace: extendNamespace,\n            createSubscribe: _subscribe.createSubscribe,\n            ErrorFactory: _errors.ErrorFactory,\n            removeApp: removeApp,\n            factories: factories,\n            useAsService: useAsService,\n            Promise: _promise.PromiseImpl,\n            deepExtend: _deep_copy.deepExtend\n        }\n    };\n    // Inject a circular default export to allow Babel users who were previously\n    // using:\n    //\n    //   import firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase').default;\n    //\n    // instead of\n    //\n    //   import * as firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase');\n    (0, _deep_copy.patchProperty)(namespace, 'default', namespace);\n    // firebase.apps is a read-only getter.\n    Object.defineProperty(namespace, 'apps', {\n        get: getApps\n    });\n    /**\n     * Called by App.delete() - but before any services associated with the App\n     * are deleted.\n     */\n    function removeApp(name) {\n        var app = apps_[name];\n        callAppHooks(app, 'delete');\n        delete apps_[name];\n    }\n    /**\n     * Get the App object for a given name (or DEFAULT).\n     */\n    function app(name) {\n        name = name || DEFAULT_ENTRY_NAME;\n        if (!contains(apps_, name)) {\n            error('no-app', { name: name });\n        }\n        return apps_[name];\n    }\n    (0, _deep_copy.patchProperty)(app, 'App', FirebaseAppImpl);\n    /**\n     * Create a new App instance (name must be unique).\n     */\n    function initializeApp(options, name) {\n        if (name === undefined) {\n            name = DEFAULT_ENTRY_NAME;\n        } else {\n            if (typeof name !== 'string' || name === '') {\n                error('bad-app-name', { name: name + '' });\n            }\n        }\n        if (contains(apps_, name)) {\n            error('duplicate-app', { name: name });\n        }\n        var app = new FirebaseAppImpl(options, name, namespace);\n        apps_[name] = app;\n        callAppHooks(app, 'create');\n        return app;\n    }\n    /*\n     * Return an array of all the non-deleted FirebaseApps.\n     */\n    function getApps() {\n        // Make a copy so caller cannot mutate the apps list.\n        return Object.keys(apps_).map(function (name) {\n            return apps_[name];\n        });\n    }\n    /*\n     * Register a Firebase Service.\n     *\n     * firebase.INTERNAL.registerService()\n     *\n     * TODO: Implement serviceProperties.\n     */\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\n        // Cannot re-register a service that already exists\n        if (factories[name]) {\n            error('duplicate-service', { name: name });\n        }\n        // Capture the service factory for later service instantiation\n        factories[name] = createService;\n        // Capture the appHook, if passed\n        if (appHook) {\n            appHooks[name] = appHook;\n            // Run the **new** app hook on all existing apps\n            getApps().forEach(function (app) {\n                appHook('create', app);\n            });\n        }\n        // The Service namespace is an accessor function ...\n        var serviceNamespace = function serviceNamespace(appArg) {\n            if (appArg === void 0) {\n                appArg = app();\n            }\n            if (typeof appArg[name] !== 'function') {\n                // Invalid argument.\n                // This happens in the following case: firebase.storage('gs:/')\n                error('invalid-app-argument', { name: name });\n            }\n            // Forward service instance lookup to the FirebaseApp.\n            return appArg[name]();\n        };\n        // ... and a container for service-level properties.\n        if (serviceProperties !== undefined) {\n            (0, _deep_copy.deepExtend)(serviceNamespace, serviceProperties);\n        }\n        // Monkey-patch the serviceNamespace onto the firebase namespace\n        namespace[name] = serviceNamespace;\n        // Patch the FirebaseAppImpl prototype\n        FirebaseAppImpl.prototype[name] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var serviceFxn = this._getService.bind(this, name);\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n        };\n        return serviceNamespace;\n    }\n    /**\n     * Patch the top-level firebase namespace with additional properties.\n     *\n     * firebase.INTERNAL.extendNamespace()\n     */\n    function extendNamespace(props) {\n        (0, _deep_copy.deepExtend)(namespace, props);\n    }\n    function callAppHooks(app, eventName) {\n        Object.keys(factories).forEach(function (serviceName) {\n            // Ignore virtual services\n            var factoryName = useAsService(app, serviceName);\n            if (factoryName === null) {\n                return;\n            }\n            if (appHooks[factoryName]) {\n                appHooks[factoryName](eventName, app);\n            }\n        });\n    }\n    // Map the requested service to a registered service name\n    // (used to map auth to serverAuth service when needed).\n    function useAsService(app, name) {\n        if (name === 'serverAuth') {\n            return null;\n        }\n        var useService = name;\n        var options = app.options;\n        return useService;\n    }\n    return namespace;\n}\nfunction error(code, args) {\n    throw appErrors.create(code, args);\n}\n// TypeScript does not support non-string indexes!\n// let errors: {[code: AppError: string} = {\nvar errors = {\n    'no-app': \"No Firebase App '{$name}' has been created - \" + 'call Firebase App.initializeApp()',\n    'bad-app-name': \"Illegal App name: '{$name}\",\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' + 'account is only allowed in a Node.js environment. On client ' + 'devices, you should instead initialize the SDK with an api key and ' + 'auth domain',\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' + 'Firebase App instance.'\n};\nvar appErrors = new _errors.ErrorFactory('app', 'Firebase', errors);\n\n\n},{\"../utils/deep_copy\":138,\"../utils/promise\":145,\"./errors\":2,\"./subscribe\":4}],4:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.createSubscribe = createSubscribe;\nexports.async = async;\n\nvar _promise = require('../utils/promise');\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nfunction createSubscribe(executor, onNoObservers) {\n    var proxy = new ObserverProxy(executor, onNoObservers);\n    return proxy.subscribe.bind(proxy);\n}\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nvar ObserverProxy = function () {\n    /**\n     * @param executor Function which can make calls to a single Observer\n     *     as a proxy.\n     * @param onNoObservers Callback when count of Observers goes to zero.\n     */\n    function ObserverProxy(executor, onNoObservers) {\n        var _this = this;\n        this.observers = [];\n        this.unsubscribes = [];\n        this.observerCount = 0;\n        // Micro-task scheduling by calling task.then().\n        this.task = _promise.PromiseImpl.resolve();\n        this.finalized = false;\n        this.onNoObservers = onNoObservers;\n        // Call the executor asynchronously so subscribers that are called\n        // synchronously after the creation of the subscribe function\n        // can still receive the very first value generated in the executor.\n        this.task.then(function () {\n            executor(_this);\n        }).catch(function (e) {\n            _this.error(e);\n        });\n    }\n    ObserverProxy.prototype.next = function (value) {\n        this.forEachObserver(function (observer) {\n            observer.next(value);\n        });\n    };\n    ObserverProxy.prototype.error = function (error) {\n        this.forEachObserver(function (observer) {\n            observer.error(error);\n        });\n        this.close(error);\n    };\n    ObserverProxy.prototype.complete = function () {\n        this.forEachObserver(function (observer) {\n            observer.complete();\n        });\n        this.close();\n    };\n    /**\n     * Subscribe function that can be used to add an Observer to the fan-out list.\n     *\n     * - We require that no event is sent to a subscriber sychronously to their\n     *   call to subscribe().\n     */\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\n        var _this = this;\n        var observer;\n        if (nextOrObserver === undefined && error === undefined && complete === undefined) {\n            throw new Error('Missing Observer.');\n        }\n        // Assemble an Observer object when passed as callback functions.\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\n            observer = nextOrObserver;\n        } else {\n            observer = {\n                next: nextOrObserver,\n                error: error,\n                complete: complete\n            };\n        }\n        if (observer.next === undefined) {\n            observer.next = noop;\n        }\n        if (observer.error === undefined) {\n            observer.error = noop;\n        }\n        if (observer.complete === undefined) {\n            observer.complete = noop;\n        }\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\n        // Attempt to subscribe to a terminated Observable - we\n        // just respond to the Observer with the final error or complete\n        // event.\n        if (this.finalized) {\n            this.task.then(function () {\n                try {\n                    if (_this.finalError) {\n                        observer.error(_this.finalError);\n                    } else {\n                        observer.complete();\n                    }\n                } catch (e) {\n                    // nothing\n                }\n                return;\n            });\n        }\n        this.observers.push(observer);\n        return unsub;\n    };\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\n    // any unsubscribed Observer.\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\n        if (this.observers === undefined || this.observers[i] === undefined) {\n            return;\n        }\n        delete this.observers[i];\n        this.observerCount -= 1;\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n            this.onNoObservers(this);\n        }\n    };\n    ObserverProxy.prototype.forEachObserver = function (fn) {\n        if (this.finalized) {\n            // Already closed by previous event....just eat the additional values.\n            return;\n        }\n        // Since sendOne calls asynchronously - there is no chance that\n        // this.observers will become undefined.\n        for (var i = 0; i < this.observers.length; i++) {\n            this.sendOne(i, fn);\n        }\n    };\n    // Call the Observer via one of it's callback function. We are careful to\n    // confirm that the observe has not been unsubscribed since this asynchronous\n    // function had been queued.\n    ObserverProxy.prototype.sendOne = function (i, fn) {\n        var _this = this;\n        // Execute the callback asynchronously\n        this.task.then(function () {\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\n                try {\n                    fn(_this.observers[i]);\n                } catch (e) {\n                    // Ignore exceptions raised in Observers or missing methods of an\n                    // Observer.\n                    // Log error to console. b/31404806\n                    if (typeof console !== 'undefined' && console.error) {\n                        console.error(e);\n                    }\n                }\n            }\n        });\n    };\n    ObserverProxy.prototype.close = function (err) {\n        var _this = this;\n        if (this.finalized) {\n            return;\n        }\n        this.finalized = true;\n        if (err !== undefined) {\n            this.finalError = err;\n        }\n        // Proxy is no longer needed - garbage collect references\n        this.task.then(function () {\n            _this.observers = undefined;\n            _this.onNoObservers = undefined;\n        });\n    };\n    return ObserverProxy;\n}();\n/** Turn synchronous function into one called asynchronously. */\nfunction async(fn, onError) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        _promise.PromiseImpl.resolve(true).then(function () {\n            fn.apply(void 0, args);\n        }).catch(function (error) {\n            if (onError) {\n                onError(error);\n            }\n        });\n    };\n}\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(obj, methods) {\n    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) {\n        return false;\n    }\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\n        var method = methods_1[_i];\n        if (method in obj && typeof obj[method] === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction noop() {\n    // do nothing\n}\n\n\n},{\"../utils/promise\":145}],5:[function(require,module,exports){\n(function (global){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\nvar firebase = require('./app');\n(function(){(function(){var h,aa=aa||{},k=this,ba=function(a){return void 0!==a},m=function(a){return\"string\"==typeof a},ca=function(a){return\"boolean\"==typeof a},da=function(a){return\"number\"==typeof a},ea=function(){},fa=function(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&\n!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";else if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b},ha=function(a){return null===a},ia=function(a){return\"array\"==fa(a)},ja=function(a){var b=fa(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length},p=function(a){return\"function\"==fa(a)},q=function(a){var b=\ntypeof a;return\"object\"==b&&null!=a||\"function\"==b},ka=function(a,b,c){return a.call.apply(a.bind,arguments)},la=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}},r=function(a,b,c){r=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?ka:la;return r.apply(null,\narguments)},ma=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}},na=Date.now||function(){return+new Date},t=function(a,b){function c(){}c.prototype=b.prototype;a.Sc=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.Cg=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};var u=function(a){if(Error.captureStackTrace)Error.captureStackTrace(this,u);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))};t(u,Error);u.prototype.name=\"CustomError\";var oa=function(a,b){for(var c=a.split(\"%s\"),d=\"\",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")},pa=String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")},xa=function(a){if(!qa.test(a))return a;-1!=a.indexOf(\"&\")&&(a=a.replace(ra,\"&amp;\"));-1!=a.indexOf(\"<\")&&(a=a.replace(sa,\"&lt;\"));-1!=a.indexOf(\">\")&&(a=a.replace(ta,\"&gt;\"));-1!=a.indexOf('\"')&&(a=a.replace(ua,\"&quot;\"));-1!=a.indexOf(\"'\")&&\n(a=a.replace(va,\"&#39;\"));-1!=a.indexOf(\"\\x00\")&&(a=a.replace(wa,\"&#0;\"));return a},ra=/&/g,sa=/</g,ta=/>/g,ua=/\"/g,va=/'/g,wa=/\\x00/g,qa=/[\\x00&<>\"']/,v=function(a,b){return-1!=a.indexOf(b)},ya=function(a,b){return a<b?-1:a>b?1:0};var za=function(a,b){b.unshift(a);u.call(this,oa.apply(null,b));b.shift()};t(za,u);za.prototype.name=\"AssertionError\";\nvar Aa=function(a,b,c,d){var e=\"Assertion failed\";if(c){e+=\": \"+c;var f=d}else a&&(e+=\": \"+a,f=b);throw new za(\"\"+e,f||[]);},w=function(a,b,c){a||Aa(\"\",null,b,Array.prototype.slice.call(arguments,2));return a},Ba=function(a,b){throw new za(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1));},Ca=function(a,b,c){da(a)||Aa(\"Expected number but got %s: %s.\",[fa(a),a],b,Array.prototype.slice.call(arguments,2));return a},Da=function(a,b,c){m(a)||Aa(\"Expected string but got %s: %s.\",[fa(a),\na],b,Array.prototype.slice.call(arguments,2))},Ea=function(a,b,c){p(a)||Aa(\"Expected function but got %s: %s.\",[fa(a),a],b,Array.prototype.slice.call(arguments,2))};var Ga=function(){this.Rc=\"\";this.$e=Fa};Ga.prototype.mb=!0;Ga.prototype.kb=function(){return this.Rc};Ga.prototype.toString=function(){return\"Const{\"+this.Rc+\"}\"};var Ha=function(a){if(a instanceof Ga&&a.constructor===Ga&&a.$e===Fa)return a.Rc;Ba(\"expected object of type Const, got '\"+a+\"'\");return\"type_error:Const\"},Fa={},Ia=function(a){var b=new Ga;b.Rc=a;return b};Ia(\"\");var Ka=function(){this.Kc=\"\";this.af=Ja};Ka.prototype.mb=!0;Ka.prototype.kb=function(){return this.Kc};Ka.prototype.toString=function(){return\"TrustedResourceUrl{\"+this.Kc+\"}\"};\nvar La=function(a){if(a instanceof Ka&&a.constructor===Ka&&a.af===Ja)return a.Kc;Ba(\"expected object of type TrustedResourceUrl, got '\"+a+\"' of type \"+fa(a));return\"type_error:TrustedResourceUrl\"},Na=function(a,b){a=Ma(a,b);b=new Ka;b.Kc=a;return b},Ma=function(a,b){var c=Ha(a);if(!Oa.test(c))throw Error(\"Invalid TrustedResourceUrl format: \"+c);return c.replace(Pa,function(a,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, \"'+e+'\", in format string, \"'+c+'\", but no valid label mapping found in args: '+\nJSON.stringify(b));a=b[e];return a instanceof Ga?Ha(a):encodeURIComponent(String(a))})},Pa=/%{(\\w+)}/g,Oa=/^(?:https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|^\\/[^\\/\\\\]|^about:blank(#|$)/i,Ja={};var Qa=Array.prototype.indexOf?function(a,b,c){w(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(m(a))return m(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},x=Array.prototype.forEach?function(a,b,c){w(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=m(a)?a.split(\"\"):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)},Ra=function(a,b){for(var c=m(a)?\na.split(\"\"):a,d=a.length-1;0<=d;--d)d in c&&b.call(void 0,c[d],d,a)},Sa=Array.prototype.map?function(a,b,c){w(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=m(a)?a.split(\"\"):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e},Ta=Array.prototype.some?function(a,b,c){w(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=m(a)?a.split(\"\"):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1},\nVa=function(a){a:{var b=Ua;for(var c=a.length,d=m(a)?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:m(a)?a.charAt(b):a[b]},Wa=function(a,b){return 0<=Qa(a,b)},Ya=function(a,b){b=Qa(a,b);var c;(c=0<=b)&&Xa(a,b);return c},Xa=function(a,b){w(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length},Za=function(a,b){var c=0;Ra(a,function(d,e){b.call(void 0,d,e,a)&&Xa(a,e)&&c++})},$a=function(a){return Array.prototype.concat.apply([],arguments)},\nab=function(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};var bb=function(a){return Sa(a,function(a){a=a.toString(16);return 1<a.length?a:\"0\"+a}).join(\"\")};var cb;a:{var db=k.navigator;if(db){var eb=db.userAgent;if(eb){cb=eb;break a}}cb=\"\"}var y=function(a){return v(cb,a)};var fb=function(a,b){for(var c in a)b.call(void 0,a[c],c,a)},gb=function(a,b){for(var c in a)if(b.call(void 0,a[c],c,a))return!0;return!1},hb=function(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b},ib=function(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b},jb=function(a){for(var b in a)return!1;return!0},kb=function(a,b){for(var c in a)if(!(c in b)||a[c]!==b[c])return!1;for(c in b)if(!(c in a))return!1;return!0},lb=function(a){var b={},c;for(c in a)b[c]=a[c];return b},mb=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \"),\nnb=function(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<mb.length;f++)c=mb[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};var ob=function(a){ob[\" \"](a);return a};ob[\" \"]=ea;var qb=function(a,b){var c=pb;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var rb=y(\"Opera\"),z=y(\"Trident\")||y(\"MSIE\"),sb=y(\"Edge\"),tb=sb||z,ub=y(\"Gecko\")&&!(v(cb.toLowerCase(),\"webkit\")&&!y(\"Edge\"))&&!(y(\"Trident\")||y(\"MSIE\"))&&!y(\"Edge\"),vb=v(cb.toLowerCase(),\"webkit\")&&!y(\"Edge\"),xb=function(){var a=k.document;return a?a.documentMode:void 0},yb;\na:{var zb=\"\",Ab=function(){var a=cb;if(ub)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(sb)return/Edge\\/([\\d\\.]+)/.exec(a);if(z)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(vb)return/WebKit\\/(\\S+)/.exec(a);if(rb)return/(?:Version)[ \\/]?(\\S+)/.exec(a)}();Ab&&(zb=Ab?Ab[1]:\"\");if(z){var Bb=xb();if(null!=Bb&&Bb>parseFloat(zb)){yb=String(Bb);break a}}yb=zb}\nvar Cb=yb,pb={},A=function(a){return qb(a,function(){for(var b=0,c=pa(String(Cb)).split(\".\"),d=pa(String(a)).split(\".\"),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var g=c[f]||\"\",l=d[f]||\"\";do{g=/(\\d*)(\\D*)(.*)/.exec(g)||[\"\",\"\",\"\",\"\"];l=/(\\d*)(\\D*)(.*)/.exec(l)||[\"\",\"\",\"\",\"\"];if(0==g[0].length&&0==l[0].length)break;b=ya(0==g[1].length?0:parseInt(g[1],10),0==l[1].length?0:parseInt(l[1],10))||ya(0==g[2].length,0==l[2].length)||ya(g[2],l[2]);g=g[3];l=l[3]}while(0==b)}return 0<=b})},Db;var Eb=k.document;\nDb=Eb&&z?xb()||(\"CSS1Compat\"==Eb.compatMode?parseInt(Cb,10):5):void 0;var Fb=null,Gb=null,Ib=function(a){var b=\"\";Hb(a,function(a){b+=String.fromCharCode(a)});return b},Hb=function(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=Gb[c];if(null!=e)return e;if(!/^[\\s\\xa0]*$/.test(c))throw Error(\"Unknown base64 encoding at char: \"+c);}return b}Jb();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),l=c(64);if(64===l&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=l&&b(g<<6&192|l))}},Jb=function(){if(!Fb){Fb={};Gb={};for(var a=0;65>a;a++)Fb[a]=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".charAt(a),\nGb[Fb[a]]=a,62<=a&&(Gb[\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\".charAt(a)]=a)}};var Kb=function(){this.Ia=-1};var Nb=function(a,b){this.Ia=64;this.oc=k.Uint8Array?new Uint8Array(this.Ia):Array(this.Ia);this.Vc=this.nb=0;this.l=[];this.Sf=a;this.we=b;this.tg=k.Int32Array?new Int32Array(64):Array(64);ba(Lb)||(Lb=k.Int32Array?new Int32Array(Mb):Mb);this.reset()},Lb;t(Nb,Kb);for(var Ob=[],Pb=0;63>Pb;Pb++)Ob[Pb]=0;var Qb=$a(128,Ob);Nb.prototype.reset=function(){this.Vc=this.nb=0;this.l=k.Int32Array?new Int32Array(this.we):ab(this.we)};\nvar Rb=function(a){var b=a.oc;w(b.length==a.Ia);for(var c=a.tg,d=0,e=0;e<b.length;)c[d++]=b[e]<<24|b[e+1]<<16|b[e+2]<<8|b[e+3],e=4*d;for(b=16;64>b;b++){d=c[b-15]|0;e=c[b-2]|0;e=(e>>>17|e<<15)^(e>>>19|e<<13)^e>>>10;var f=(c[b-16]|0)+((d>>>7|d<<25)^(d>>>18|d<<14)^d>>>3)|0;var g=(c[b-7]|0)+e|0;c[b]=f+g|0}d=a.l[0]|0;e=a.l[1]|0;var l=a.l[2]|0,n=a.l[3]|0,C=a.l[4]|0,wb=a.l[5]|0,ec=a.l[6]|0;f=a.l[7]|0;for(b=0;64>b;b++){var mi=((d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+(d&e^d&l^e&l)|0;g=C&wb^~C&ec;f=f+\n((C>>>6|C<<26)^(C>>>11|C<<21)^(C>>>25|C<<7))|0;g=g+(Lb[b]|0)|0;g=f+(g+(c[b]|0)|0)|0;f=ec;ec=wb;wb=C;C=n+g|0;n=l;l=e;e=d;d=g+mi|0}a.l[0]=a.l[0]+d|0;a.l[1]=a.l[1]+e|0;a.l[2]=a.l[2]+l|0;a.l[3]=a.l[3]+n|0;a.l[4]=a.l[4]+C|0;a.l[5]=a.l[5]+wb|0;a.l[6]=a.l[6]+ec|0;a.l[7]=a.l[7]+f|0};\nNb.prototype.update=function(a,b){ba(b)||(b=a.length);var c=0,d=this.nb;if(m(a))for(;c<b;)this.oc[d++]=a.charCodeAt(c++),d==this.Ia&&(Rb(this),d=0);else if(ja(a))for(;c<b;){var e=a[c++];if(!(\"number\"==typeof e&&0<=e&&255>=e&&e==(e|0)))throw Error(\"message must be a byte array\");this.oc[d++]=e;d==this.Ia&&(Rb(this),d=0)}else throw Error(\"message must be string or array\");this.nb=d;this.Vc+=b};\nNb.prototype.digest=function(){var a=[],b=8*this.Vc;56>this.nb?this.update(Qb,56-this.nb):this.update(Qb,this.Ia-(this.nb-56));for(var c=63;56<=c;c--)this.oc[c]=b&255,b/=256;Rb(this);for(c=b=0;c<this.Sf;c++)for(var d=24;0<=d;d-=8)a[b++]=this.l[c]>>d&255;return a};\nvar Mb=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,\n4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];var Tb=function(){Nb.call(this,8,Sb)};t(Tb,Nb);var Sb=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];var Ub=function(){this.Ka=this.Ka;this.Hc=this.Hc};Ub.prototype.Ka=!1;Ub.prototype.isDisposed=function(){return this.Ka};Ub.prototype.ib=function(){if(this.Hc)for(;this.Hc.length;)this.Hc.shift()()};var Vb=!z||9<=Number(Db),Wb=z&&!A(\"9\");!vb||A(\"528\");ub&&A(\"1.9b\")||z&&A(\"8\")||rb&&A(\"9.5\")||vb&&A(\"528\");ub&&!A(\"8\")||z&&A(\"9\");var Xb=function(){if(!k.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0}});k.addEventListener(\"test\",ea,b);k.removeEventListener(\"test\",ea,b);return a}();var B=function(a,b){this.type=a;this.currentTarget=this.target=b;this.defaultPrevented=this.Ua=!1;this.Je=!0};B.prototype.stopPropagation=function(){this.Ua=!0};B.prototype.preventDefault=function(){this.defaultPrevented=!0;this.Je=!1};var Yb=function(a,b){B.call(this,a?a.type:\"\");this.relatedTarget=this.currentTarget=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=this.offsetY=this.offsetX=0;this.key=\"\";this.charCode=this.keyCode=0;this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.fa=this.state=null;a&&this.init(a,b)};t(Yb,B);\nYb.prototype.init=function(a,b){var c=this.type=a.type,d=a.changedTouches?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.currentTarget=b;if(b=a.relatedTarget){if(ub){a:{try{ob(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else\"mouseover\"==c?b=a.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;null===d?(this.offsetX=vb||void 0!==a.offsetX?a.offsetX:a.layerX,this.offsetY=vb||void 0!==a.offsetY?a.offsetY:a.layerY,this.clientX=void 0!==a.clientX?a.clientX:a.pageX,\nthis.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0):(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0);this.button=a.button;this.keyCode=a.keyCode||0;this.key=a.key||\"\";this.charCode=a.charCode||(\"keypress\"==c?a.keyCode:0);this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=a.metaKey;this.state=a.state;this.fa=a;a.defaultPrevented&&\nthis.preventDefault()};Yb.prototype.stopPropagation=function(){Yb.Sc.stopPropagation.call(this);this.fa.stopPropagation?this.fa.stopPropagation():this.fa.cancelBubble=!0};Yb.prototype.preventDefault=function(){Yb.Sc.preventDefault.call(this);var a=this.fa;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,Wb)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};Yb.prototype.wf=function(){return this.fa};var Zb=\"closure_listenable_\"+(1E6*Math.random()|0),$b=0;var ac=function(a,b,c,d,e){this.listener=a;this.Lc=null;this.src=b;this.type=c;this.capture=!!d;this.uc=e;this.key=++$b;this.yb=this.nc=!1},bc=function(a){a.yb=!0;a.listener=null;a.Lc=null;a.src=null;a.uc=null};var cc=function(a){this.src=a;this.J={};this.hc=0};cc.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.J[f];a||(a=this.J[f]=[],this.hc++);var g=dc(a,b,d,e);-1<g?(b=a[g],c||(b.nc=!1)):(b=new ac(b,this.src,f,!!d,e),b.nc=c,a.push(b));return b};cc.prototype.remove=function(a,b,c,d){a=a.toString();if(!(a in this.J))return!1;var e=this.J[a];b=dc(e,b,c,d);return-1<b?(bc(e[b]),Xa(e,b),0==e.length&&(delete this.J[a],this.hc--),!0):!1};\nvar fc=function(a,b){var c=b.type;c in a.J&&Ya(a.J[c],b)&&(bc(b),0==a.J[c].length&&(delete a.J[c],a.hc--))};cc.prototype.od=function(a,b,c,d){a=this.J[a.toString()];var e=-1;a&&(e=dc(a,b,c,d));return-1<e?a[e]:null};cc.prototype.hasListener=function(a,b){var c=ba(a),d=c?a.toString():\"\",e=ba(b);return gb(this.J,function(a){for(var f=0;f<a.length;++f)if(!(c&&a[f].type!=d||e&&a[f].capture!=b))return!0;return!1})};\nvar dc=function(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.yb&&f.listener==b&&f.capture==!!c&&f.uc==d)return e}return-1};var gc=\"closure_lm_\"+(1E6*Math.random()|0),hc={},ic=0,kc=function(a,b,c,d,e){if(d&&d.once)jc(a,b,c,d,e);else if(ia(b))for(var f=0;f<b.length;f++)kc(a,b[f],c,d,e);else c=lc(c),a&&a[Zb]?a.listen(b,c,q(d)?!!d.capture:!!d,e):mc(a,b,c,!1,d,e)},mc=function(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var g=q(e)?!!e.capture:!!e,l=nc(a);l||(a[gc]=l=new cc(a));c=l.add(b,c,d,g,f);if(!c.Lc){d=oc();c.Lc=d;d.src=a;d.listener=c;if(a.addEventListener)Xb||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),\nd,e);else if(a.attachEvent)a.attachEvent(pc(b.toString()),d);else throw Error(\"addEventListener and attachEvent are unavailable.\");ic++}},oc=function(){var a=qc,b=Vb?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b},jc=function(a,b,c,d,e){if(ia(b))for(var f=0;f<b.length;f++)jc(a,b[f],c,d,e);else c=lc(c),a&&a[Zb]?rc(a,b,c,q(d)?!!d.capture:!!d,e):mc(a,b,c,!0,d,e)},sc=function(a,b,c,d,e){if(ia(b))for(var f=0;f<b.length;f++)sc(a,b[f],c,d,\ne);else d=q(d)?!!d.capture:!!d,c=lc(c),a&&a[Zb]?a.ea.remove(String(b),c,d,e):a&&(a=nc(a))&&(b=a.od(b,c,d,e))&&tc(b)},tc=function(a){if(!da(a)&&a&&!a.yb){var b=a.src;if(b&&b[Zb])fc(b.ea,a);else{var c=a.type,d=a.Lc;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent&&b.detachEvent(pc(c),d);ic--;(c=nc(b))?(fc(c,a),0==c.hc&&(c.src=null,b[gc]=null)):bc(a)}}},pc=function(a){return a in hc?hc[a]:hc[a]=\"on\"+a},vc=function(a,b,c,d){var e=!0;if(a=nc(a))if(b=a.J[b.toString()])for(b=b.concat(),\na=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.yb&&(f=uc(f,d),e=e&&!1!==f)}return e},uc=function(a,b){var c=a.listener,d=a.uc||a.src;a.nc&&tc(a);return c.call(d,b)},qc=function(a,b){if(a.yb)return!0;if(!Vb){if(!b)a:{b=[\"window\",\"event\"];for(var c=k,d;d=b.shift();)if(null!=c[d])c=c[d];else{b=null;break a}b=c}d=b;b=new Yb(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(g){e=!0}if(e||void 0==d.returnValue)d.returnValue=!0}d=[];for(e=\nb.currentTarget;e;e=e.parentNode)d.push(e);e=a.type;for(var f=d.length-1;!b.Ua&&0<=f;f--)b.currentTarget=d[f],a=vc(d[f],e,!0,b),c=c&&a;for(f=0;!b.Ua&&f<d.length;f++)b.currentTarget=d[f],a=vc(d[f],e,!1,b),c=c&&a}return c}return uc(a,new Yb(b,this))},nc=function(a){a=a[gc];return a instanceof cc?a:null},wc=\"__closure_events_fn_\"+(1E9*Math.random()>>>0),lc=function(a){w(a,\"Listener can not be null.\");if(p(a))return a;w(a.handleEvent,\"An object listener must have handleEvent method.\");a[wc]||(a[wc]=function(b){return a.handleEvent(b)});\nreturn a[wc]};var xc=/^[+a-zA-Z0-9_.!#$%&'*\\/=?^`{|}~-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z0-9]{2,63}$/;var zc=function(){this.wa=\"\";this.Ze=yc};zc.prototype.mb=!0;zc.prototype.kb=function(){return this.wa};zc.prototype.toString=function(){return\"SafeUrl{\"+this.wa+\"}\"};\nvar Ac=function(a){if(a instanceof zc&&a.constructor===zc&&a.Ze===yc)return a.wa;Ba(\"expected object of type SafeUrl, got '\"+a+\"' of type \"+fa(a));return\"type_error:SafeUrl\"},Bc=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i,Dc=function(a){if(a instanceof zc)return a;a=a.mb?a.kb():String(a);Bc.test(a)||(a=\"about:invalid#zClosurez\");return Cc(a)},yc={},Cc=function(a){var b=new zc;b.wa=a;return b};Cc(\"about:blank\");var Gc=function(a){var b=[];Ec(new Fc,a,b);return b.join(\"\")},Fc=function(){this.Mc=void 0},Ec=function(a,b,c){if(null==b)c.push(\"null\");else{if(\"object\"==typeof b){if(ia(b)){var d=b;b=d.length;c.push(\"[\");for(var e=\"\",f=0;f<b;f++)c.push(e),e=d[f],Ec(a,a.Mc?a.Mc.call(d,String(f),e):e,c),e=\",\";c.push(\"]\");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push(\"{\");f=\"\";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(e=b[d],\"function\"!=typeof e&&(c.push(f),\nHc(d,c),c.push(\":\"),Ec(a,a.Mc?a.Mc.call(b,d,e):e,c),f=\",\"));c.push(\"}\");return}}switch(typeof b){case \"string\":Hc(b,c);break;case \"number\":c.push(isFinite(b)&&!isNaN(b)?String(b):\"null\");break;case \"boolean\":c.push(String(b));break;case \"function\":c.push(\"null\");break;default:throw Error(\"Unknown type: \"+typeof b);}}},Ic={'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"/\":\"\\\\/\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\u000b\"},Jc=/\\uffff/.test(\"\\uffff\")?/[\\\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g:/[\\\\\\\"\\x00-\\x1f\\x7f-\\xff]/g,\nHc=function(a,b){b.push('\"',a.replace(Jc,function(a){var b=Ic[a];b||(b=\"\\\\u\"+(a.charCodeAt(0)|65536).toString(16).substr(1),Ic[a]=b);return b}),'\"')};var Kc=function(){};Kc.prototype.be=null;var Lc=function(a){return a.be||(a.be=a.wd())};var Mc,Nc=function(){};t(Nc,Kc);Nc.prototype.pc=function(){var a=Oc(this);return a?new ActiveXObject(a):new XMLHttpRequest};Nc.prototype.wd=function(){var a={};Oc(this)&&(a[0]=!0,a[1]=!0);return a};\nvar Oc=function(a){if(!a.ve&&\"undefined\"==typeof XMLHttpRequest&&\"undefined\"!=typeof ActiveXObject){for(var b=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.ve=d}catch(e){}}throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");}return a.ve};Mc=new Nc;var Pc=function(){};t(Pc,Kc);Pc.prototype.pc=function(){var a=new XMLHttpRequest;if(\"withCredentials\"in a)return a;if(\"undefined\"!=typeof XDomainRequest)return new Qc;throw Error(\"Unsupported browser\");};Pc.prototype.wd=function(){return{}};\nvar Qc=function(){this.na=new XDomainRequest;this.readyState=0;this.onreadystatechange=null;this.responseText=\"\";this.status=-1;this.statusText=this.responseXML=null;this.na.onload=r(this.zf,this);this.na.onerror=r(this.qe,this);this.na.onprogress=r(this.Af,this);this.na.ontimeout=r(this.Bf,this)};h=Qc.prototype;h.open=function(a,b,c){if(null!=c&&!c)throw Error(\"Only async requests are supported.\");this.na.open(a,b)};\nh.send=function(a){if(a)if(\"string\"==typeof a)this.na.send(a);else throw Error(\"Only string data is supported\");else this.na.send()};h.abort=function(){this.na.abort()};h.setRequestHeader=function(){};h.getResponseHeader=function(a){return\"content-type\"==a.toLowerCase()?this.na.contentType:\"\"};h.zf=function(){this.status=200;this.responseText=this.na.responseText;Rc(this,4)};h.qe=function(){this.status=500;this.responseText=\"\";Rc(this,4)};h.Bf=function(){this.qe()};\nh.Af=function(){this.status=200;Rc(this,1)};var Rc=function(a,b){a.readyState=b;if(a.onreadystatechange)a.onreadystatechange()};Qc.prototype.getAllResponseHeaders=function(){return\"content-type: \"+this.na.contentType};var Sc=function(a,b,c){this.Of=c;this.kf=a;this.cg=b;this.Gc=0;this.vc=null};Sc.prototype.get=function(){if(0<this.Gc){this.Gc--;var a=this.vc;this.vc=a.next;a.next=null}else a=this.kf();return a};Sc.prototype.put=function(a){this.cg(a);this.Gc<this.Of&&(this.Gc++,a.next=this.vc,this.vc=a)};var Tc=function(a){k.setTimeout(function(){throw a;},0)},Uc,Vc=function(){var a=k.MessageChannel;\"undefined\"===typeof a&&\"undefined\"!==typeof window&&window.postMessage&&window.addEventListener&&!y(\"Presto\")&&(a=function(){var a=document.createElement(\"IFRAME\");a.style.display=\"none\";a.src=\"\";document.documentElement.appendChild(a);var b=a.contentWindow;a=b.document;a.open();a.write(\"\");a.close();var c=\"callImmediate\"+Math.random(),d=\"file:\"==b.location.protocol?\"*\":b.location.protocol+\"//\"+b.location.host;\na=r(function(a){if((\"*\"==d||a.origin==d)&&a.data==c)this.port1.onmessage()},this);b.addEventListener(\"message\",a,!1);this.port1={};this.port2={postMessage:function(){b.postMessage(c,d)}}});if(\"undefined\"!==typeof a&&!y(\"Trident\")&&!y(\"MSIE\")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(ba(c.next)){c=c.next;var a=c.fe;c.fe=null;a()}};return function(a){d.next={fe:a};d=d.next;b.port2.postMessage(0)}}return\"undefined\"!==typeof document&&\"onreadystatechange\"in document.createElement(\"SCRIPT\")?\nfunction(a){var b=document.createElement(\"SCRIPT\");b.onreadystatechange=function(){b.onreadystatechange=null;b.parentNode.removeChild(b);b=null;a();a=null};document.documentElement.appendChild(b)}:function(a){k.setTimeout(a,0)}};var Wc=function(){this.$c=this.eb=null},Yc=new Sc(function(){return new Xc},function(a){a.reset()},100);Wc.prototype.add=function(a,b){var c=Yc.get();c.set(a,b);this.$c?this.$c.next=c:(w(!this.eb),this.eb=c);this.$c=c};Wc.prototype.remove=function(){var a=null;this.eb&&(a=this.eb,this.eb=this.eb.next,this.eb||(this.$c=null),a.next=null);return a};var Xc=function(){this.next=this.scope=this.nd=null};Xc.prototype.set=function(a,b){this.nd=a;this.scope=b;this.next=null};\nXc.prototype.reset=function(){this.next=this.scope=this.nd=null};var cd=function(a,b){Zc||$c();ad||(Zc(),ad=!0);bd.add(a,b)},Zc,$c=function(){if(-1!=String(k.Promise).indexOf(\"[native code]\")){var a=k.Promise.resolve(void 0);Zc=function(){a.then(dd)}}else Zc=function(){var a=dd;!p(k.setImmediate)||k.Window&&k.Window.prototype&&!y(\"Edge\")&&k.Window.prototype.setImmediate==k.setImmediate?(Uc||(Uc=Vc()),Uc(a)):k.setImmediate(a)}},ad=!1,bd=new Wc,dd=function(){for(var a;a=bd.remove();){try{a.nd.call(a.scope)}catch(b){Tc(b)}Yc.put(a)}ad=!1};var ed=function(a){return q(a)?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):void 0===a?\"undefined\":null===a?\"null\":typeof a},fd=function(a){return(a=a&&a.ownerDocument)&&(a.defaultView||a.parentWindow)||window};var gd=!z||9<=Number(Db);!ub&&!z||z&&9<=Number(Db)||ub&&A(\"1.9.1\");z&&A(\"9\");var id=function(){this.wa=\"\";this.Ye=hd};id.prototype.mb=!0;id.prototype.kb=function(){return this.wa};id.prototype.toString=function(){return\"SafeHtml{\"+this.wa+\"}\"};var jd=function(a){if(a instanceof id&&a.constructor===id&&a.Ye===hd)return a.wa;Ba(\"expected object of type SafeHtml, got '\"+a+\"' of type \"+fa(a));return\"type_error:SafeHtml\"},hd={};id.prototype.If=function(a){this.wa=a;return this};var kd=function(a,b){var c=fd(a);\"undefined\"!=typeof c.HTMLScriptElement&&\"undefined\"!=typeof c.Element&&w(a&&(a instanceof c.HTMLScriptElement||!(a instanceof c.Element)),\"Argument is not a HTMLScriptElement (or a non-Element mock); got: %s\",ed(a));a.src=La(b)};var ld=function(a){var b=document;return m(a)?b.getElementById(a):a},nd=function(a,b){fb(b,function(b,d){b&&b.mb&&(b=b.kb());\"style\"==d?a.style.cssText=b:\"class\"==d?a.className=b:\"for\"==d?a.htmlFor=b:md.hasOwnProperty(d)?a.setAttribute(md[d],b):0==d.lastIndexOf(\"aria-\",0)||0==d.lastIndexOf(\"data-\",0)?a.setAttribute(d,b):a[d]=b})},md={cellpadding:\"cellPadding\",cellspacing:\"cellSpacing\",colspan:\"colSpan\",frameborder:\"frameBorder\",height:\"height\",maxlength:\"maxLength\",nonce:\"nonce\",role:\"role\",rowspan:\"rowSpan\",\ntype:\"type\",usemap:\"useMap\",valign:\"vAlign\",width:\"width\"},pd=function(a,b,c){var d=arguments,e=document,f=String(d[0]),g=d[1];if(!gd&&g&&(g.name||g.type)){f=[\"<\",f];g.name&&f.push(' name=\"',xa(g.name),'\"');if(g.type){f.push(' type=\"',xa(g.type),'\"');var l={};nb(l,g);delete l.type;g=l}f.push(\">\");f=f.join(\"\")}f=e.createElement(f);g&&(m(g)?f.className=g:ia(g)?f.className=g.join(\" \"):nd(f,g));2<d.length&&od(e,f,d);return f},od=function(a,b,c){function d(c){c&&b.appendChild(m(c)?a.createTextNode(c):\nc)}for(var e=2;e<c.length;e++){var f=c[e];!ja(f)||q(f)&&0<f.nodeType?d(f):x(qd(f)?ab(f):f,d)}},qd=function(a){if(a&&\"number\"==typeof a.length){if(q(a))return\"function\"==typeof a.item||\"string\"==typeof a.item;if(p(a))return\"function\"==typeof a.item}return!1};var rd=function(a){a.prototype.then=a.prototype.then;a.prototype.$goog_Thenable=!0},sd=function(a){if(!a)return!1;try{return!!a.$goog_Thenable}catch(b){return!1}};var D=function(a,b){this.Z=0;this.ya=void 0;this.hb=this.ta=this.w=null;this.tc=this.md=!1;if(a!=ea)try{var c=this;a.call(b,function(a){td(c,2,a)},function(a){if(!(a instanceof ud))try{if(a instanceof Error)throw a;throw Error(\"Promise rejected.\");}catch(e){}td(c,3,a)})}catch(d){td(this,3,d)}},vd=function(){this.next=this.context=this.pb=this.Sa=this.child=null;this.Db=!1};vd.prototype.reset=function(){this.context=this.pb=this.Sa=this.child=null;this.Db=!1};\nvar wd=new Sc(function(){return new vd},function(a){a.reset()},100),xd=function(a,b,c){var d=wd.get();d.Sa=a;d.pb=b;d.context=c;return d},E=function(a){if(a instanceof D)return a;var b=new D(ea);td(b,2,a);return b},F=function(a){return new D(function(b,c){c(a)})},zd=function(a,b,c){yd(a,b,c,null)||cd(ma(b,a))},Ad=function(a){return new D(function(b,c){var d=a.length,e=[];if(d)for(var f=function(a,c){d--;e[a]=c;0==d&&b(e)},g=function(a){c(a)},l=0,n;l<a.length;l++)n=a[l],zd(n,ma(f,l),g);else b(e)})},\nBd=function(a){return new D(function(b){var c=a.length,d=[];if(c)for(var e=function(a,e,f){c--;d[a]=e?{uf:!0,value:f}:{uf:!1,reason:f};0==c&&b(d)},f=0,g;f<a.length;f++)g=a[f],zd(g,ma(e,f,!0),ma(e,f,!1));else b(d)})};D.prototype.then=function(a,b,c){null!=a&&Ea(a,\"opt_onFulfilled should be a function.\");null!=b&&Ea(b,\"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?\");return Cd(this,p(a)?a:null,p(b)?b:null,c)};rd(D);\nvar Ed=function(a,b){b=xd(b,b,void 0);b.Db=!0;Dd(a,b);return a};D.prototype.f=function(a,b){return Cd(this,null,a,b)};D.prototype.cancel=function(a){0==this.Z&&cd(function(){var b=new ud(a);Fd(this,b)},this)};\nvar Fd=function(a,b){if(0==a.Z)if(a.w){var c=a.w;if(c.ta){for(var d=0,e=null,f=null,g=c.ta;g&&(g.Db||(d++,g.child==a&&(e=g),!(e&&1<d)));g=g.next)e||(f=g);e&&(0==c.Z&&1==d?Fd(c,b):(f?(d=f,w(c.ta),w(null!=d),d.next==c.hb&&(c.hb=d),d.next=d.next.next):Gd(c),Hd(c,e,3,b)))}a.w=null}else td(a,3,b)},Dd=function(a,b){a.ta||2!=a.Z&&3!=a.Z||Id(a);w(null!=b.Sa);a.hb?a.hb.next=b:a.ta=b;a.hb=b},Cd=function(a,b,c,d){var e=xd(null,null,null);e.child=new D(function(a,g){e.Sa=b?function(c){try{var e=b.call(d,c);a(e)}catch(C){g(C)}}:\na;e.pb=c?function(b){try{var e=c.call(d,b);!ba(e)&&b instanceof ud?g(b):a(e)}catch(C){g(C)}}:g});e.child.w=a;Dd(a,e);return e.child};D.prototype.qg=function(a){w(1==this.Z);this.Z=0;td(this,2,a)};D.prototype.rg=function(a){w(1==this.Z);this.Z=0;td(this,3,a)};\nvar td=function(a,b,c){0==a.Z&&(a===c&&(b=3,c=new TypeError(\"Promise cannot resolve to itself\")),a.Z=1,yd(c,a.qg,a.rg,a)||(a.ya=c,a.Z=b,a.w=null,Id(a),3!=b||c instanceof ud||Jd(a,c)))},yd=function(a,b,c,d){if(a instanceof D)return null!=b&&Ea(b,\"opt_onFulfilled should be a function.\"),null!=c&&Ea(c,\"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?\"),Dd(a,xd(b||ea,c||null,d)),!0;if(sd(a))return a.then(b,c,d),!0;if(q(a))try{var e=a.then;if(p(e))return Kd(a,\ne,b,c,d),!0}catch(f){return c.call(d,f),!0}return!1},Kd=function(a,b,c,d,e){var f=!1,g=function(a){f||(f=!0,c.call(e,a))},l=function(a){f||(f=!0,d.call(e,a))};try{b.call(a,g,l)}catch(n){l(n)}},Id=function(a){a.md||(a.md=!0,cd(a.qf,a))},Gd=function(a){var b=null;a.ta&&(b=a.ta,a.ta=b.next,b.next=null);a.ta||(a.hb=null);null!=b&&w(null!=b.Sa);return b};D.prototype.qf=function(){for(var a;a=Gd(this);)Hd(this,a,this.Z,this.ya);this.md=!1};\nvar Hd=function(a,b,c,d){if(3==c&&b.pb&&!b.Db)for(;a&&a.tc;a=a.w)a.tc=!1;if(b.child)b.child.w=null,Ld(b,c,d);else try{b.Db?b.Sa.call(b.context):Ld(b,c,d)}catch(e){Md.call(null,e)}wd.put(b)},Ld=function(a,b,c){2==b?a.Sa.call(a.context,c):a.pb&&a.pb.call(a.context,c)},Jd=function(a,b){a.tc=!0;cd(function(){a.tc&&Md.call(null,b)})},Md=Tc,ud=function(a){u.call(this,a)};t(ud,u);ud.prototype.name=\"cancel\";\nvar Nd=function(a,b){this.Oc=[];this.De=a;this.je=b||null;this.Lb=this.jb=!1;this.ya=void 0;this.Ud=this.$d=this.dd=!1;this.Wc=0;this.w=null;this.ed=0};Nd.prototype.cancel=function(a){if(this.jb)this.ya instanceof Nd&&this.ya.cancel();else{if(this.w){var b=this.w;delete this.w;a?b.cancel(a):(b.ed--,0>=b.ed&&b.cancel())}this.De?this.De.call(this.je,this):this.Ud=!0;this.jb||Od(this,new Pd)}};Nd.prototype.he=function(a,b){this.dd=!1;Qd(this,a,b)};\nvar Qd=function(a,b,c){a.jb=!0;a.ya=c;a.Lb=!b;Rd(a)},Td=function(a){if(a.jb){if(!a.Ud)throw new Sd;a.Ud=!1}};Nd.prototype.callback=function(a){Td(this);Ud(a);Qd(this,!0,a)};var Od=function(a,b){Td(a);Ud(b);Qd(a,!1,b)},Ud=function(a){w(!(a instanceof Nd),\"An execution sequence may not be initiated with a blocking Deferred.\")},Wd=function(a,b){Vd(a,null,b,void 0)},Vd=function(a,b,c,d){w(!a.$d,\"Blocking Deferreds can not be re-used\");a.Oc.push([b,c,d]);a.jb&&Rd(a)};\nNd.prototype.then=function(a,b,c){var d,e,f=new D(function(a,b){d=a;e=b});Vd(this,d,function(a){a instanceof Pd?f.cancel():e(a)});return f.then(a,b,c)};rd(Nd);\nvar Xd=function(a){return Ta(a.Oc,function(a){return p(a[1])})},Rd=function(a){if(a.Wc&&a.jb&&Xd(a)){var b=a.Wc,c=Yd[b];c&&(k.clearTimeout(c.Mb),delete Yd[b]);a.Wc=0}a.w&&(a.w.ed--,delete a.w);b=a.ya;for(var d=c=!1;a.Oc.length&&!a.dd;){var e=a.Oc.shift(),f=e[0],g=e[1];e=e[2];if(f=a.Lb?g:f)try{var l=f.call(e||a.je,b);ba(l)&&(a.Lb=a.Lb&&(l==b||l instanceof Error),a.ya=b=l);if(sd(b)||\"function\"===typeof k.Promise&&b instanceof k.Promise)d=!0,a.dd=!0}catch(n){b=n,a.Lb=!0,Xd(a)||(c=!0)}}a.ya=b;d&&(l=r(a.he,\na,!0),d=r(a.he,a,!1),b instanceof Nd?(Vd(b,l,d),b.$d=!0):b.then(l,d));c&&(b=new Zd(b),Yd[b.Mb]=b,a.Wc=b.Mb)},Sd=function(){u.call(this)};t(Sd,u);Sd.prototype.message=\"Deferred has already fired\";Sd.prototype.name=\"AlreadyCalledError\";var Pd=function(){u.call(this)};t(Pd,u);Pd.prototype.message=\"Deferred was canceled\";Pd.prototype.name=\"CanceledError\";var Zd=function(a){this.Mb=k.setTimeout(r(this.pg,this),0);this.$=a};\nZd.prototype.pg=function(){w(Yd[this.Mb],\"Cannot throw an error that is not scheduled.\");delete Yd[this.Mb];throw this.$;};var Yd={};var de=function(a){var b={},c=b.document||document,d=La(a),e=document.createElement(\"SCRIPT\"),f={Ke:e,gc:void 0},g=new Nd($d,f),l=null,n=null!=b.timeout?b.timeout:5E3;0<n&&(l=window.setTimeout(function(){ae(e,!0);Od(g,new be(1,\"Timeout reached for loading script \"+d))},n),f.gc=l);e.onload=e.onreadystatechange=function(){e.readyState&&\"loaded\"!=e.readyState&&\"complete\"!=e.readyState||(ae(e,b.Dg||!1,l),g.callback(null))};e.onerror=function(){ae(e,!0,l);Od(g,new be(0,\"Error while loading script \"+d))};\nf=b.attributes||{};nb(f,{type:\"text/javascript\",charset:\"UTF-8\"});nd(e,f);kd(e,a);ce(c).appendChild(e);return g},ce=function(a){var b;return(b=(a||document).getElementsByTagName(\"HEAD\"))&&0!=b.length?b[0]:a.documentElement},$d=function(){if(this&&this.Ke){var a=this.Ke;a&&\"SCRIPT\"==a.tagName&&ae(a,!0,this.gc)}},ae=function(a,b,c){null!=c&&k.clearTimeout(c);a.onload=ea;a.onerror=ea;a.onreadystatechange=ea;b&&window.setTimeout(function(){a&&a.parentNode&&a.parentNode.removeChild(a)},0)},be=function(a,\nb){var c=\"Jsloader error (code #\"+a+\")\";b&&(c+=\": \"+b);u.call(this,c);this.code=a};t(be,u);var ee=function(a,b,c,d,e){this.reset(a,b,c,d,e)};ee.prototype.le=null;var fe=0;ee.prototype.reset=function(a,b,c,d,e){\"number\"==typeof e||fe++;d||na();this.Rb=a;this.Rf=b;delete this.le};ee.prototype.Me=function(a){this.Rb=a};var ge=function(a){this.Be=a;this.re=this.gd=this.Rb=this.w=null},he=function(a,b){this.name=a;this.value=b};he.prototype.toString=function(){return this.name};var ie=new he(\"SEVERE\",1E3),je=new he(\"INFO\",800),ke=new he(\"CONFIG\",700),le=new he(\"FINE\",500);ge.prototype.getName=function(){return this.Be};ge.prototype.getParent=function(){return this.w};ge.prototype.Me=function(a){this.Rb=a};var me=function(a){if(a.Rb)return a.Rb;if(a.w)return me(a.w);Ba(\"Root logger has no level set.\");return null};\nge.prototype.log=function(a,b,c){if(a.value>=me(this).value)for(p(b)&&(b=b()),a=new ee(a,String(b),this.Be),c&&(a.le=c),c=\"log:\"+a.Rf,(b=k.console)&&b.timeStamp&&b.timeStamp(c),(b=k.msWriteProfilerMark)&&b(c),c=this;c;){var d=c,e=a;if(d.re)for(var f=0;b=d.re[f];f++)b(e);c=c.getParent()}};ge.prototype.info=function(a,b){this.log(je,a,b)};ge.prototype.config=function(a,b){this.log(ke,a,b)};\nvar ne={},oe=null,pe=function(a){oe||(oe=new ge(\"\"),ne[\"\"]=oe,oe.Me(ke));var b;if(!(b=ne[a])){b=new ge(a);var c=a.lastIndexOf(\".\"),d=a.substr(c+1);c=pe(a.substr(0,c));c.gd||(c.gd={});c.gd[d]=b;b.w=c;ne[a]=b}return b};var G=function(){Ub.call(this);this.ea=new cc(this);this.cf=this;this.Ed=null};t(G,Ub);G.prototype[Zb]=!0;h=G.prototype;h.addEventListener=function(a,b,c,d){kc(this,a,b,c,d)};h.removeEventListener=function(a,b,c,d){sc(this,a,b,c,d)};\nh.dispatchEvent=function(a){qe(this);var b=this.Ed;if(b){var c=[];for(var d=1;b;b=b.Ed)c.push(b),w(1E3>++d,\"infinite loop\")}b=this.cf;d=a.type||a;if(m(a))a=new B(a,b);else if(a instanceof B)a.target=a.target||b;else{var e=a;a=new B(d,b);nb(a,e)}e=!0;if(c)for(var f=c.length-1;!a.Ua&&0<=f;f--){var g=a.currentTarget=c[f];e=re(g,d,!0,a)&&e}a.Ua||(g=a.currentTarget=b,e=re(g,d,!0,a)&&e,a.Ua||(e=re(g,d,!1,a)&&e));if(c)for(f=0;!a.Ua&&f<c.length;f++)g=a.currentTarget=c[f],e=re(g,d,!1,a)&&e;return e};\nh.ib=function(){G.Sc.ib.call(this);if(this.ea){var a=this.ea,b=0,c;for(c in a.J){for(var d=a.J[c],e=0;e<d.length;e++)++b,bc(d[e]);delete a.J[c];a.hc--}}this.Ed=null};h.listen=function(a,b,c,d){qe(this);return this.ea.add(String(a),b,!1,c,d)};\nvar rc=function(a,b,c,d,e){a.ea.add(String(b),c,!0,d,e)},re=function(a,b,c,d){b=a.ea.J[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var g=b[f];if(g&&!g.yb&&g.capture==c){var l=g.listener,n=g.uc||g.src;g.nc&&fc(a.ea,g);e=!1!==l.call(n,d)&&e}}return e&&0!=d.Je};G.prototype.od=function(a,b,c,d){return this.ea.od(String(a),b,c,d)};G.prototype.hasListener=function(a,b){return this.ea.hasListener(ba(a)?String(a):void 0,b)};var qe=function(a){w(a.ea,\"Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?\")};var se=\"StopIteration\"in k?k.StopIteration:{message:\"StopIteration\",stack:\"\"},te=function(){};te.prototype.next=function(){throw se;};te.prototype.bf=function(){return this};var H=function(a,b){a&&a.log(le,b,void 0)};var ue=function(a,b){this.ia={};this.A=[];this.cb=this.s=0;var c=arguments.length;if(1<c){if(c%2)throw Error(\"Uneven number of arguments\");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else a&&this.addAll(a)};h=ue.prototype;h.ga=function(){ve(this);for(var a=[],b=0;b<this.A.length;b++)a.push(this.ia[this.A[b]]);return a};h.ua=function(){ve(this);return this.A.concat()};h.Fb=function(a){return we(this.ia,a)};h.clear=function(){this.ia={};this.cb=this.s=this.A.length=0};\nh.remove=function(a){return we(this.ia,a)?(delete this.ia[a],this.s--,this.cb++,this.A.length>2*this.s&&ve(this),!0):!1};var ve=function(a){var b,c;if(a.s!=a.A.length){for(b=c=0;c<a.A.length;){var d=a.A[c];we(a.ia,d)&&(a.A[b++]=d);c++}a.A.length=b}if(a.s!=a.A.length){var e={};for(b=c=0;c<a.A.length;)d=a.A[c],we(e,d)||(a.A[b++]=d,e[d]=1),c++;a.A.length=b}};h=ue.prototype;h.get=function(a,b){return we(this.ia,a)?this.ia[a]:b};\nh.set=function(a,b){we(this.ia,a)||(this.s++,this.A.push(a),this.cb++);this.ia[a]=b};h.addAll=function(a){if(a instanceof ue){var b=a.ua();a=a.ga()}else b=ib(a),a=hb(a);for(var c=0;c<b.length;c++)this.set(b[c],a[c])};h.forEach=function(a,b){for(var c=this.ua(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};h.clone=function(){return new ue(this)};\nh.bf=function(a){ve(this);var b=0,c=this.cb,d=this,e=new te;e.next=function(){if(c!=d.cb)throw Error(\"The map has changed since the iterator was created\");if(b>=d.A.length)throw se;var e=d.A[b++];return a?e:d.ia[e]};return e};var we=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var xe=function(a){if(a.ga&&\"function\"==typeof a.ga)return a.ga();if(m(a))return a.split(\"\");if(ja(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}return hb(a)},ye=function(a){if(a.ua&&\"function\"==typeof a.ua)return a.ua();if(!a.ga||\"function\"!=typeof a.ga){if(ja(a)||m(a)){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}return ib(a)}},ze=function(a,b,c){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,c);else if(ja(a)||m(a))x(a,b,c);else for(var d=ye(a),e=xe(a),f=e.length,\ng=0;g<f;g++)b.call(c,e[g],d&&d[g],a)};var Ae=function(a,b,c){if(p(a))c&&(a=r(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=r(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:k.setTimeout(a,b||0)},Be=function(a){var b=null;return(new D(function(c,d){b=Ae(function(){c(void 0)},a);-1==b&&d(Error(\"Failed to schedule timer.\"))})).f(function(a){k.clearTimeout(b);throw a;})};var Ce=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/,De=function(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\")}}};var I=function(a){G.call(this);this.headers=new ue;this.bd=a||null;this.Aa=!1;this.ad=this.b=null;this.Qb=this.Ae=this.Dc=\"\";this.Oa=this.td=this.yc=this.ld=!1;this.zb=0;this.Tc=null;this.Nc=\"\";this.Xc=this.Yf=this.Xe=!1};t(I,G);var Ee=I.prototype,Fe=pe(\"goog.net.XhrIo\");Ee.O=Fe;var Ge=/^https?$/i,He=[\"POST\",\"PUT\"];\nI.prototype.send=function(a,b,c,d){if(this.b)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+this.Dc+\"; newUri=\"+a);b=b?b.toUpperCase():\"GET\";this.Dc=a;this.Qb=\"\";this.Ae=b;this.ld=!1;this.Aa=!0;this.b=this.bd?this.bd.pc():Mc.pc();this.ad=this.bd?Lc(this.bd):Lc(Mc);this.b.onreadystatechange=r(this.Ge,this);this.Yf&&\"onprogress\"in this.b&&(this.b.onprogress=r(function(a){this.Fe(a,!0)},this),this.b.upload&&(this.b.upload.onprogress=r(this.Fe,this)));try{H(this.O,Ie(this,\"Opening Xhr\")),\nthis.td=!0,this.b.open(b,String(a),!0),this.td=!1}catch(f){H(this.O,Ie(this,\"Error opening Xhr: \"+f.message));this.$(5,f);return}a=c||\"\";var e=this.headers.clone();d&&ze(d,function(a,b){e.set(b,a)});d=Va(e.ua());c=k.FormData&&a instanceof k.FormData;!Wa(He,b)||d||c||e.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");e.forEach(function(a,b){this.b.setRequestHeader(b,a)},this);this.Nc&&(this.b.responseType=this.Nc);\"withCredentials\"in this.b&&this.b.withCredentials!==this.Xe&&(this.b.withCredentials=\nthis.Xe);try{Je(this),0<this.zb&&(this.Xc=Ke(this.b),H(this.O,Ie(this,\"Will abort after \"+this.zb+\"ms if incomplete, xhr2 \"+this.Xc)),this.Xc?(this.b.timeout=this.zb,this.b.ontimeout=r(this.gc,this)):this.Tc=Ae(this.gc,this.zb,this)),H(this.O,Ie(this,\"Sending request\")),this.yc=!0,this.b.send(a),this.yc=!1}catch(f){H(this.O,Ie(this,\"Send error: \"+f.message)),this.$(5,f)}};var Ke=function(a){return z&&A(9)&&da(a.timeout)&&ba(a.ontimeout)},Ua=function(a){return\"content-type\"==a.toLowerCase()};\nI.prototype.gc=function(){\"undefined\"!=typeof aa&&this.b&&(this.Qb=\"Timed out after \"+this.zb+\"ms, aborting\",H(this.O,Ie(this,this.Qb)),this.dispatchEvent(\"timeout\"),this.abort(8))};I.prototype.$=function(a,b){this.Aa=!1;this.b&&(this.Oa=!0,this.b.abort(),this.Oa=!1);this.Qb=b;Le(this);Me(this)};var Le=function(a){a.ld||(a.ld=!0,a.dispatchEvent(\"complete\"),a.dispatchEvent(\"error\"))};\nI.prototype.abort=function(){this.b&&this.Aa&&(H(this.O,Ie(this,\"Aborting\")),this.Aa=!1,this.Oa=!0,this.b.abort(),this.Oa=!1,this.dispatchEvent(\"complete\"),this.dispatchEvent(\"abort\"),Me(this))};I.prototype.ib=function(){this.b&&(this.Aa&&(this.Aa=!1,this.Oa=!0,this.b.abort(),this.Oa=!1),Me(this,!0));I.Sc.ib.call(this)};I.prototype.Ge=function(){this.isDisposed()||(this.td||this.yc||this.Oa?Ne(this):this.Uf())};I.prototype.Uf=function(){Ne(this)};\nvar Ne=function(a){if(a.Aa&&\"undefined\"!=typeof aa)if(a.ad[1]&&4==Oe(a)&&2==Pe(a))H(a.O,Ie(a,\"Local request error detected and ignored\"));else if(a.yc&&4==Oe(a))Ae(a.Ge,0,a);else if(a.dispatchEvent(\"readystatechange\"),4==Oe(a)){H(a.O,Ie(a,\"Request complete\"));a.Aa=!1;try{var b=Pe(a);a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.Dc).match(Ce)[1]||null;if(!f&&k.self&&k.self.location){var g=\nk.self.location.protocol;f=g.substr(0,g.length-1)}e=!Ge.test(f?f.toLowerCase():\"\")}d=e}if(d)a.dispatchEvent(\"complete\"),a.dispatchEvent(\"success\");else{try{var l=2<Oe(a)?a.b.statusText:\"\"}catch(n){H(a.O,\"Can not get status: \"+n.message),l=\"\"}a.Qb=l+\" [\"+Pe(a)+\"]\";Le(a)}}finally{Me(a)}}};I.prototype.Fe=function(a,b){w(\"progress\"===a.type,\"goog.net.EventType.PROGRESS is of the same type as raw XHR progress.\");this.dispatchEvent(Qe(a,\"progress\"));this.dispatchEvent(Qe(a,b?\"downloadprogress\":\"uploadprogress\"))};\nvar Qe=function(a,b){return{type:b,lengthComputable:a.lengthComputable,loaded:a.loaded,total:a.total}},Me=function(a,b){if(a.b){Je(a);var c=a.b,d=a.ad[0]?ea:null;a.b=null;a.ad=null;b||a.dispatchEvent(\"ready\");try{c.onreadystatechange=d}catch(e){(a=a.O)&&a.log(ie,\"Problem encountered resetting onreadystatechange: \"+e.message,void 0)}}},Je=function(a){a.b&&a.Xc&&(a.b.ontimeout=null);da(a.Tc)&&(k.clearTimeout(a.Tc),a.Tc=null)},Oe=function(a){return a.b?a.b.readyState:0},Pe=function(a){try{return 2<Oe(a)?\na.b.status:-1}catch(b){return-1}},Re=function(a){try{return a.b?a.b.responseText:\"\"}catch(b){return H(a.O,\"Can not get responseText: \"+b.message),\"\"}};\nI.prototype.getResponse=function(){try{if(!this.b)return null;if(\"response\"in this.b)return this.b.response;switch(this.Nc){case \"\":case \"text\":return this.b.responseText;case \"arraybuffer\":if(\"mozResponseArrayBuffer\"in this.b)return this.b.mozResponseArrayBuffer}var a=this.O;a&&a.log(ie,\"Response type \"+this.Nc+\" is not supported on this browser\",void 0);return null}catch(b){return H(this.O,\"Can not get response: \"+b.message),null}};\nI.prototype.getResponseHeader=function(a){if(this.b&&4==Oe(this))return a=this.b.getResponseHeader(a),null===a?void 0:a};I.prototype.getAllResponseHeaders=function(){return this.b&&4==Oe(this)?this.b.getAllResponseHeaders():\"\"};var Ie=function(a,b){return b+\" [\"+a.Ae+\" \"+a.Dc+\" \"+Pe(a)+\"]\"};var Se=function(a,b){this.oa=this.ab=this.pa=\"\";this.rb=null;this.Na=this.Da=\"\";this.ba=this.Mf=!1;if(a instanceof Se){this.ba=ba(b)?b:a.ba;Te(this,a.pa);var c=a.ab;J(this);this.ab=c;Ue(this,a.oa);Ve(this,a.rb);We(this,a.Da);Xe(this,a.ca.clone());a=a.Na;J(this);this.Na=a}else a&&(c=String(a).match(Ce))?(this.ba=!!b,Te(this,c[1]||\"\",!0),a=c[2]||\"\",J(this),this.ab=Ye(a),Ue(this,c[3]||\"\",!0),Ve(this,c[4]),We(this,c[5]||\"\",!0),Xe(this,c[6]||\"\",!0),a=c[7]||\"\",J(this),this.Na=Ye(a)):(this.ba=!!b,this.ca=\nnew Ze(null,0,this.ba))};Se.prototype.toString=function(){var a=[],b=this.pa;b&&a.push($e(b,af,!0),\":\");var c=this.oa;if(c||\"file\"==b)a.push(\"//\"),(b=this.ab)&&a.push($e(b,af,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.rb,null!=c&&a.push(\":\",String(c));if(c=this.Da)this.oa&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push($e(c,\"/\"==c.charAt(0)?bf:cf,!0));(c=this.ca.toString())&&a.push(\"?\",c);(c=this.Na)&&a.push(\"#\",$e(c,df));return a.join(\"\")};\nSe.prototype.resolve=function(a){var b=this.clone(),c=!!a.pa;c?Te(b,a.pa):c=!!a.ab;if(c){var d=a.ab;J(b);b.ab=d}else c=!!a.oa;c?Ue(b,a.oa):c=null!=a.rb;d=a.Da;if(c)Ve(b,a.rb);else if(c=!!a.Da){if(\"/\"!=d.charAt(0))if(this.oa&&!this.Da)d=\"/\"+d;else{var e=b.Da.lastIndexOf(\"/\");-1!=e&&(d=b.Da.substr(0,e+1)+d)}e=d;if(\"..\"==e||\".\"==e)d=\"\";else if(v(e,\"./\")||v(e,\"/.\")){d=0==e.lastIndexOf(\"/\",0);e=e.split(\"/\");for(var f=[],g=0;g<e.length;){var l=e[g++];\".\"==l?d&&g==e.length&&f.push(\"\"):\"..\"==l?((1<f.length||\n1==f.length&&\"\"!=f[0])&&f.pop(),d&&g==e.length&&f.push(\"\")):(f.push(l),d=!0)}d=f.join(\"/\")}else d=e}c?We(b,d):c=\"\"!==a.ca.toString();c?Xe(b,a.ca.clone()):c=!!a.Na;c&&(a=a.Na,J(b),b.Na=a);return b};Se.prototype.clone=function(){return new Se(this)};\nvar Te=function(a,b,c){J(a);a.pa=c?Ye(b,!0):b;a.pa&&(a.pa=a.pa.replace(/:$/,\"\"))},Ue=function(a,b,c){J(a);a.oa=c?Ye(b,!0):b},Ve=function(a,b){J(a);if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.rb=b}else a.rb=null},We=function(a,b,c){J(a);a.Da=c?Ye(b,!0):b},Xe=function(a,b,c){J(a);b instanceof Ze?(a.ca=b,a.ca.Rd(a.ba)):(c||(b=$e(b,ef)),a.ca=new Ze(b,0,a.ba))},K=function(a,b,c){J(a);a.ca.set(b,c)},ff=function(a,b){return a.ca.get(b)};\nSe.prototype.removeParameter=function(a){J(this);this.ca.remove(a);return this};var J=function(a){if(a.Mf)throw Error(\"Tried to modify a read-only Uri\");};Se.prototype.Rd=function(a){this.ba=a;this.ca&&this.ca.Rd(a);return this};\nvar gf=function(a){return a instanceof Se?a.clone():new Se(a,void 0)},hf=function(a,b){var c=new Se(null,void 0);Te(c,\"https\");a&&Ue(c,a);b&&We(c,b);return c},Ye=function(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"},$e=function(a,b,c){return m(a)?(a=encodeURI(a).replace(b,jf),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null},jf=function(a){a=a.charCodeAt(0);return\"%\"+(a>>4&15).toString(16)+(a&15).toString(16)},af=/[#\\/\\?@]/g,cf=/[\\#\\?:]/g,bf=/[\\#\\?]/g,ef=/[\\#\\?@]/g,\ndf=/#/g,Ze=function(a,b,c){this.s=this.m=null;this.T=a||null;this.ba=!!c},kf=function(a){a.m||(a.m=new ue,a.s=0,a.T&&De(a.T,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c)}))},mf=function(a){var b=ye(a);if(\"undefined\"==typeof b)throw Error(\"Keys are undefined\");var c=new Ze(null,0,void 0);a=xe(a);for(var d=0;d<b.length;d++){var e=b[d],f=a[d];ia(f)?lf(c,e,f):c.add(e,f)}return c};h=Ze.prototype;\nh.add=function(a,b){kf(this);this.T=null;a=this.aa(a);var c=this.m.get(a);c||this.m.set(a,c=[]);c.push(b);this.s=Ca(this.s)+1;return this};h.remove=function(a){kf(this);a=this.aa(a);return this.m.Fb(a)?(this.T=null,this.s=Ca(this.s)-this.m.get(a).length,this.m.remove(a)):!1};h.clear=function(){this.m=this.T=null;this.s=0};h.Fb=function(a){kf(this);a=this.aa(a);return this.m.Fb(a)};h.forEach=function(a,b){kf(this);this.m.forEach(function(c,d){x(c,function(c){a.call(b,c,d,this)},this)},this)};\nh.ua=function(){kf(this);for(var a=this.m.ga(),b=this.m.ua(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};h.ga=function(a){kf(this);var b=[];if(m(a))this.Fb(a)&&(b=$a(b,this.m.get(this.aa(a))));else{a=this.m.ga();for(var c=0;c<a.length;c++)b=$a(b,a[c])}return b};h.set=function(a,b){kf(this);this.T=null;a=this.aa(a);this.Fb(a)&&(this.s=Ca(this.s)-this.m.get(a).length);this.m.set(a,[b]);this.s=Ca(this.s)+1;return this};\nh.get=function(a,b){a=a?this.ga(a):[];return 0<a.length?String(a[0]):b};var lf=function(a,b,c){a.remove(b);0<c.length&&(a.T=null,a.m.set(a.aa(b),ab(c)),a.s=Ca(a.s)+c.length)};h=Ze.prototype;h.toString=function(){if(this.T)return this.T;if(!this.m)return\"\";for(var a=[],b=this.m.ua(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.ga(d);for(var f=0;f<d.length;f++){var g=e;\"\"!==d[f]&&(g+=\"=\"+encodeURIComponent(String(d[f])));a.push(g)}}return this.T=a.join(\"&\")};\nh.clone=function(){var a=new Ze;a.T=this.T;this.m&&(a.m=this.m.clone(),a.s=this.s);return a};h.aa=function(a){a=String(a);this.ba&&(a=a.toLowerCase());return a};h.Rd=function(a){a&&!this.ba&&(kf(this),this.T=null,this.m.forEach(function(a,c){var b=c.toLowerCase();c!=b&&(this.remove(c),lf(this,b,a))},this));this.ba=a};h.extend=function(a){for(var b=0;b<arguments.length;b++)ze(arguments[b],function(a,b){this.add(b,a)},this)};var nf=function(){var a=L();return z&&!!Db&&11==Db||/Edge\\/\\d+/.test(a)},of=function(){return k.window&&k.window.location.href||\"\"},pf=function(a,b){b=b||k.window;var c=\"about:blank\";a&&(c=Ac(Dc(a)));b.location.href=c},qf=function(a,b){var c=[],d;for(d in a)d in b?typeof a[d]!=typeof b[d]?c.push(d):ia(a[d])?kb(a[d],b[d])||c.push(d):\"object\"==typeof a[d]&&null!=a[d]&&null!=b[d]?0<qf(a[d],b[d]).length&&c.push(d):a[d]!==b[d]&&c.push(d):c.push(d);for(d in b)d in a||c.push(d);return c},sf=function(){var a=\nL();a=\"Chrome\"!=rf(a)?null:(a=a.match(/\\sChrome\\/(\\d+)/i))&&2==a.length?parseInt(a[1],10):null;return a&&30>a?!1:!z||!Db||9<Db},tf=function(a){a=(a||L()).toLowerCase();return a.match(/android/)||a.match(/webos/)||a.match(/iphone|ipad|ipod/)||a.match(/blackberry/)||a.match(/windows phone/)||a.match(/iemobile/)?!0:!1},uf=function(a){a=a||k.window;try{a.close()}catch(b){}},vf=function(a,b,c){var d=Math.floor(1E9*Math.random()).toString();b=b||500;c=c||600;var e=(window.screen.availHeight-c)/2,f=(window.screen.availWidth-\nb)/2;b={width:b,height:c,top:0<e?e:0,left:0<f?f:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1};c=L().toLowerCase();d&&(b.target=d,v(c,\"crios/\")&&(b.target=\"_blank\"));\"Firefox\"==rf(L())&&(a=a||\"http://localhost\",b.scrollbars=!0);c=a||\"\";(d=b)||(d={});a=window;b=c instanceof zc?c:Dc(\"undefined\"!=typeof c.href?c.href:String(c));c=d.target||c.target;e=[];for(g in d)switch(g){case \"width\":case \"height\":case \"top\":case \"left\":e.push(g+\"=\"+d[g]);break;case \"target\":case \"noreferrer\":break;default:e.push(g+\n\"=\"+(d[g]?1:0))}var g=e.join(\",\");(y(\"iPhone\")&&!y(\"iPod\")&&!y(\"iPad\")||y(\"iPad\")||y(\"iPod\"))&&a.navigator&&a.navigator.standalone&&c&&\"_self\"!=c?(g=a.document.createElement(\"A\"),e=fd(g),\"undefined\"!=typeof e.HTMLAnchorElement&&\"undefined\"!=typeof e.Location&&\"undefined\"!=typeof e.Element&&w(g&&(g instanceof e.HTMLAnchorElement||!(g instanceof e.Location||g instanceof e.Element)),\"Argument is not a HTMLAnchorElement (or a non-Element mock); got: %s\",ed(g)),b instanceof zc||b instanceof zc||(b=b.mb?\nb.kb():String(b),w(Bc.test(b))||(b=\"about:invalid#zClosurez\"),b=Cc(b)),g.href=Ac(b),g.setAttribute(\"target\",c),d.noreferrer&&g.setAttribute(\"rel\",\"noreferrer\"),d=document.createEvent(\"MouseEvent\"),d.initMouseEvent(\"click\",!0,!0,a,1),g.dispatchEvent(d),g={}):d.noreferrer?(g=a.open(\"\",c,g),d=Ac(b),g&&(tb&&v(d,\";\")&&(d=\"'\"+d.replace(/'/g,\"%27\")+\"'\"),g.opener=null,a=Ia(\"b/12014412, meta tag with sanitized URL\"),d='<META HTTP-EQUIV=\"refresh\" content=\"0; url='+xa(d)+'\">',Da(Ha(a),\"must provide justification\"),\nw(!/^[\\s\\xa0]*$/.test(Ha(a)),\"must provide non-empty justification\"),g.document.write(jd((new id).If(d))),g.document.close())):g=a.open(Ac(b),c,g);if(g)try{g.focus()}catch(l){}return g},wf=function(a){return new D(function(b){var c=function(){Be(2E3).then(function(){if(!a||a.closed)b();else return c()})};return c()})},xf=/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/,yf=function(){var a=null;return(new D(function(b){\"complete\"==k.document.readyState?b():(a=function(){b()},jc(window,\"load\",a))})).f(function(b){sc(window,\n\"load\",a);throw b;})},Af=function(){return zf(void 0)?yf().then(function(){return new D(function(a,b){var c=k.document,d=setTimeout(function(){b(Error(\"Cordova framework is not ready.\"))},1E3);c.addEventListener(\"deviceready\",function(){clearTimeout(d);a()},!1)})}):F(Error(\"Cordova must run in an Android or iOS file scheme.\"))},zf=function(a){a=a||L();return!(\"file:\"!==Bf()||!a.toLowerCase().match(/iphone|ipad|ipod|android/))},Cf=function(){var a=k.window;try{return!(!a||a==a.top)}catch(b){return!1}},\nDf=function(){return firebase.INTERNAL.hasOwnProperty(\"reactNative\")?\"ReactNative\":firebase.INTERNAL.hasOwnProperty(\"node\")?\"Node\":\"Browser\"},Ef=function(){var a=Df();return\"ReactNative\"===a||\"Node\"===a},rf=function(a){var b=a.toLowerCase();if(v(b,\"opera/\")||v(b,\"opr/\")||v(b,\"opios/\"))return\"Opera\";if(v(b,\"iemobile\"))return\"IEMobile\";if(v(b,\"msie\")||v(b,\"trident/\"))return\"IE\";if(v(b,\"edge/\"))return\"Edge\";if(v(b,\"firefox/\"))return\"Firefox\";if(v(b,\"silk/\"))return\"Silk\";if(v(b,\"blackberry\"))return\"Blackberry\";\nif(v(b,\"webos\"))return\"Webos\";if(!v(b,\"safari/\")||v(b,\"chrome/\")||v(b,\"crios/\")||v(b,\"android\"))if(!v(b,\"chrome/\")&&!v(b,\"crios/\")||v(b,\"edge/\")){if(v(b,\"android\"))return\"Android\";if((a=a.match(/([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/))&&2==a.length)return a[1]}else return\"Chrome\";else return\"Safari\";return\"Other\"},Ff=function(a){var b=Df();return(\"Browser\"===b?rf(L()):b)+\"/JsCore/\"+a},L=function(){return k.navigator&&k.navigator.userAgent||\"\"},M=function(a,b){a=a.split(\".\");b=b||k;for(var c=0;c<a.length&&\n\"object\"==typeof b&&null!=b;c++)b=b[a[c]];c!=a.length&&(b=void 0);return b},Hf=function(){try{var a=k.localStorage,b=Gf();if(a)return a.setItem(b,\"1\"),a.removeItem(b),nf()?!!k.indexedDB:!0}catch(c){}return!1},Jf=function(){return(If()||\"chrome-extension:\"===Bf()||zf())&&!Ef()&&Hf()},If=function(){return\"http:\"===Bf()||\"https:\"===Bf()},Bf=function(){return k.location&&k.location.protocol||null},Kf=function(a){a=a||L();return tf(a)||\"Firefox\"==rf(a)?!1:!0},Lf=function(a){return\"undefined\"===typeof a?\nnull:Gc(a)},Mf=function(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&null!==a[c]&&void 0!==a[c]&&(b[c]=a[c]);return b},Nf=function(a){if(null!==a)return JSON.parse(a)},Gf=function(a){return a?a:\"\"+Math.floor(1E9*Math.random()).toString()},Of=function(a){a=a||L();return\"Safari\"==rf(a)||a.toLowerCase().match(/iphone|ipad|ipod/)?!1:!0},Pf=function(){var a=k.___jsl;if(a&&a.H)for(var b in a.H)if(a.H[b].r=a.H[b].r||[],a.H[b].L=a.H[b].L||[],a.H[b].r=a.H[b].L.concat(),a.CP)for(var c=0;c<a.CP.length;c++)a.CP[c]=\nnull},Qf=function(){var a=k.navigator;return a&&\"boolean\"===typeof a.onLine&&(If()||\"chrome-extension:\"===Bf()||\"undefined\"!==typeof a.connection)?a.onLine:!0},Rf=function(a,b,c,d){if(a>b)throw Error(\"Short delay should be less than long delay!\");this.lg=a;this.Qf=b;a=c||L();d=d||Df();this.Lf=tf(a)||\"ReactNative\"===d};Rf.prototype.get=function(){return this.Lf?this.Qf:this.lg};\nvar Sf=function(){var a=k.document;return a&&\"undefined\"!==typeof a.visibilityState?\"visible\"==a.visibilityState:!0},Tf=function(){var a=k.document,b=null;return Sf()||!a?E():(new D(function(c){b=function(){Sf()&&(a.removeEventListener(\"visibilitychange\",b,!1),c())};a.addEventListener(\"visibilitychange\",b,!1)})).f(function(c){a.removeEventListener(\"visibilitychange\",b,!1);throw c;})};var Uf={};var Vf;try{var Wf={};Object.defineProperty(Wf,\"abcd\",{configurable:!0,enumerable:!0,value:1});Object.defineProperty(Wf,\"abcd\",{configurable:!0,enumerable:!0,value:2});Vf=2==Wf.abcd}catch(a){Vf=!1}\nvar N=function(a,b,c){Vf?Object.defineProperty(a,b,{configurable:!0,enumerable:!0,value:c}):a[b]=c},Xf=function(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&N(a,c,b[c])},Yf=function(a){var b={};Xf(b,a);return b},Zf=function(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},$f=function(a,b){if(!b||!b.length)return!0;if(!a)return!1;for(var c=0;c<b.length;c++){var d=a[b[c]];if(void 0===d||null===d||\"\"===d)return!1}return!0},ag=function(a){var b=a;if(\"object\"==typeof a&&null!=a){b=\n\"length\"in a?[]:{};for(var c in a)N(b,c,ag(a[c]))}return b};var bg=\"oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version\".split(\" \"),cg=[\"client_id\",\"response_type\",\"scope\",\"redirect_uri\",\"state\"],dg={wg:{Cc:\"locale\",Vb:500,Ub:600,providerId:\"facebook.com\",Nd:cg},xg:{Cc:null,Vb:500,Ub:620,providerId:\"github.com\",Nd:cg},yg:{Cc:\"hl\",Vb:515,Ub:680,providerId:\"google.com\",Nd:cg},Bg:{Cc:\"lang\",Vb:485,Ub:705,providerId:\"twitter.com\",Nd:bg}},eg=function(a){for(var b in dg)if(dg[b].providerId==a)return dg[b];\nreturn null};var O=function(a,b){this.code=\"auth/\"+a;this.message=b||fg[a]||\"\"};t(O,Error);O.prototype.I=function(){return{code:this.code,message:this.message}};O.prototype.toJSON=function(){return this.I()};\nvar gg=function(a){var b=a&&a.code;return b?new O(b.substring(5),a.message):null},fg={\"argument-error\":\"\",\"app-not-authorized\":\"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.\",\"app-not-installed\":\"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.\",\"captcha-check-failed\":\"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.\",\n\"code-expired\":\"The SMS code has expired. Please re-send the verification code to try again.\",\"cordova-not-ready\":\"Cordova framework is not ready.\",\"cors-unsupported\":\"This browser is not supported.\",\"credential-already-in-use\":\"This credential is already associated with a different user account.\",\"custom-token-mismatch\":\"The custom token corresponds to a different audience.\",\"requires-recent-login\":\"This operation is sensitive and requires recent authentication. Log in again before retrying this request.\",\n\"dynamic-link-not-activated\":\"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.\",\"email-already-in-use\":\"The email address is already in use by another account.\",\"expired-action-code\":\"The action code has expired. \",\"cancelled-popup-request\":\"This operation has been cancelled due to another conflicting popup being opened.\",\"internal-error\":\"An internal error has occurred.\",\"invalid-app-credential\":\"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.\",\n\"invalid-app-id\":\"The mobile app identifier is not registed for the current project.\",\"invalid-user-token\":\"The user's credential is no longer valid. The user must sign in again.\",\"invalid-auth-event\":\"An internal error has occurred.\",\"invalid-verification-code\":\"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.\",\"invalid-continue-uri\":\"The continue URL provided in the request is invalid.\",\n\"invalid-cordova-configuration\":\"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.\",\"invalid-custom-token\":\"The custom token format is incorrect. Please check the documentation.\",\"invalid-email\":\"The email address is badly formatted.\",\"invalid-api-key\":\"Your API key is invalid, please check you have copied it correctly.\",\"invalid-credential\":\"The supplied auth credential is malformed or has expired.\",\n\"invalid-persistence-type\":\"The specified persistence type is invalid. It can only be local, session or none.\",\"invalid-message-payload\":\"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-oauth-provider\":\"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.\",\"unauthorized-domain\":\"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.\",\n\"invalid-action-code\":\"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.\",\"wrong-password\":\"The password is invalid or the user does not have a password.\",\"invalid-phone-number\":\"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].\",\"invalid-recipient-email\":\"The email corresponding to this action failed to send as the provided recipient email address is invalid.\",\n\"invalid-sender\":\"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-verification-id\":\"The verification ID used to create the phone auth credential is invalid.\",\"missing-android-pkg-name\":\"An Android Package Name must be provided if the Android App is required to be installed.\",\"auth-domain-config-required\":\"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.\",\n\"missing-app-credential\":\"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.\",\"missing-verification-code\":\"The phone auth credential was created with an empty SMS verification code.\",\"missing-continue-uri\":\"A continue URL must be provided in the request.\",\"missing-iframe-start\":\"An internal error has occurred.\",\"missing-ios-bundle-id\":\"An iOS Bundle ID must be provided if an App Store ID is provided.\",\"missing-phone-number\":\"To send verification codes, provide a phone number for the recipient.\",\n\"missing-verification-id\":\"The phone auth credential was created with an empty verification ID.\",\"app-deleted\":\"This instance of FirebaseApp has been deleted.\",\"account-exists-with-different-credential\":\"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.\",\"network-request-failed\":\"A network error (such as timeout, interrupted connection or unreachable host) has occurred.\",\"no-auth-event\":\"An internal error has occurred.\",\n\"no-such-provider\":\"User was not linked to an account with the given provider.\",\"operation-not-allowed\":\"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.\",\"operation-not-supported-in-this-environment\":'This operation is not supported in the environment this application is running on. \"location.protocol\" must be http, https or chrome-extension and web storage must be enabled.',\"popup-blocked\":\"Unable to establish a connection with the popup. It may have been blocked by the browser.\",\n\"popup-closed-by-user\":\"The popup has been closed by the user before finalizing the operation.\",\"provider-already-linked\":\"User can only be linked to one identity for the given provider.\",\"quota-exceeded\":\"The SMS quota for this project has been exceeded.\",\"redirect-cancelled-by-user\":\"The redirect operation has been cancelled by the user before finalizing.\",\"redirect-operation-pending\":\"A redirect sign-in operation is already pending.\",timeout:\"The operation has timed out.\",\"user-token-expired\":\"The user's credential is no longer valid. The user must sign in again.\",\n\"too-many-requests\":\"We have blocked all requests from this device due to unusual activity. Try again later.\",\"unauthorized-continue-uri\":\"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.\",\"unsupported-persistence-type\":\"The current environment does not support the specified persistence type.\",\"user-cancelled\":\"User did not grant your application the permissions it requested.\",\"user-not-found\":\"There is no user record corresponding to this identifier. The user may have been deleted.\",\n\"user-disabled\":\"The user account has been disabled by an administrator.\",\"user-mismatch\":\"The supplied credentials do not correspond to the previously signed in user.\",\"user-signed-out\":\"\",\"weak-password\":\"The password must be 6 characters long or more.\",\"web-storage-unsupported\":\"This browser is not supported or 3rd party cookies and data may be disabled.\"};var hg=function(a,b,c,d,e){this.la=a;this.U=b||null;this.Ab=c||null;this.Qd=d||null;this.$=e||null;if(this.Ab||this.$){if(this.Ab&&this.$)throw new O(\"invalid-auth-event\");if(this.Ab&&!this.Qd)throw new O(\"invalid-auth-event\");}else throw new O(\"invalid-auth-event\");};hg.prototype.sc=function(){return this.Qd};hg.prototype.getError=function(){return this.$};hg.prototype.I=function(){return{type:this.la,eventId:this.U,urlResponse:this.Ab,sessionId:this.Qd,error:this.$&&this.$.I()}};\nvar ig=function(a){a=a||{};return a.type?new hg(a.type,a.eventId,a.urlResponse,a.sessionId,a.error&&gg(a.error)):null};var jg=function(a){var b=\"unauthorized-domain\",c=void 0,d=gf(a);a=d.oa;d=d.pa;\"chrome-extension\"==d?c=oa(\"This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):\"http\"==d||\"https\"==d?c=oa(\"This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):b=\n\"operation-not-supported-in-this-environment\";O.call(this,b,c)};t(jg,O);var kg=function(a){this.Pf=a.sub;na();this.Ib=a.email||null;this.Zf=a.provider_id||null;this.ef=!!a.is_anonymous||\"anonymous\"==this.Zf};kg.prototype.getEmail=function(){return this.Ib};kg.prototype.isAnonymous=function(){return this.ef};var lg=function(a,b){return a.then(function(a){if(a.idToken){a:{var c=a.idToken.split(\".\");if(3==c.length){c=c[1];for(var e=(4-c.length%4)%4,f=0;f<e;f++)c+=\".\";try{var g=JSON.parse(Ib(c));if(g.sub&&g.iss&&g.aud&&g.exp){var l=new kg(g);break a}}catch(n){}}l=null}if(!l||b!=l.Pf)throw new O(\"user-mismatch\");return a}throw new O(\"user-mismatch\");}).f(function(a){throw a&&a.code&&\"auth/user-not-found\"==a.code?new O(\"user-mismatch\"):a;})},mg=function(a,b){if(b.idToken||b.accessToken)b.idToken&&N(this,\"idToken\",\nb.idToken),b.accessToken&&N(this,\"accessToken\",b.accessToken);else if(b.oauthToken&&b.oauthTokenSecret)N(this,\"accessToken\",b.oauthToken),N(this,\"secret\",b.oauthTokenSecret);else throw new O(\"internal-error\",\"failed to construct a credential\");N(this,\"providerId\",a)};mg.prototype.Kb=function(a){return ng(a,og(this))};mg.prototype.Ec=function(a,b){var c=og(this);c.idToken=b;return pg(a,c)};mg.prototype.Ad=function(a,b){var c=og(this);return lg(qg(a,c),b)};\nvar og=function(a){var b={};a.idToken&&(b.id_token=a.idToken);a.accessToken&&(b.access_token=a.accessToken);a.secret&&(b.oauth_token_secret=a.secret);b.providerId=a.providerId;return{postBody:mf(b).toString(),requestUri:\"http://localhost\"}};mg.prototype.I=function(){var a={providerId:this.providerId};this.idToken&&(a.oauthIdToken=this.idToken);this.accessToken&&(a.oauthAccessToken=this.accessToken);this.secret&&(a.oauthTokenSecret=this.secret);return a};\nvar rg=function(a,b){this.bg=b||[];Xf(this,{providerId:a,isOAuthProvider:!0});this.ie={};this.yd=(eg(a)||{}).Cc||null;this.kd=null};rg.prototype.setCustomParameters=function(a){this.ie=lb(a);return this};var P=function(a){rg.call(this,a,cg);this.Od=[]};t(P,rg);P.prototype.addScope=function(a){Wa(this.Od,a)||this.Od.push(a);return this};P.prototype.pe=function(){return ab(this.Od)};\nP.prototype.credential=function(a,b){if(!a&&!b)throw new O(\"argument-error\",\"credential failed: must provide the ID token and/or the access token.\");return new mg(this.providerId,{idToken:a||null,accessToken:b||null})};var sg=function(){P.call(this,\"facebook.com\")};t(sg,P);N(sg,\"PROVIDER_ID\",\"facebook.com\");\nvar tg=function(a){if(!a)throw new O(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new sg).credential(null,b)},ug=function(){P.call(this,\"github.com\")};t(ug,P);N(ug,\"PROVIDER_ID\",\"github.com\");var vg=function(a){if(!a)throw new O(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new ug).credential(null,b)},wg=function(){P.call(this,\"google.com\");this.addScope(\"profile\")};\nt(wg,P);N(wg,\"PROVIDER_ID\",\"google.com\");var xg=function(a,b){var c=a;q(a)&&(c=a.idToken,b=a.accessToken);return(new wg).credential(c,b)},yg=function(){rg.call(this,\"twitter.com\",bg)};t(yg,rg);N(yg,\"PROVIDER_ID\",\"twitter.com\");\nvar zg=function(a,b){var c=a;q(c)||(c={oauthToken:a,oauthTokenSecret:b});if(!c.oauthToken||!c.oauthTokenSecret)throw new O(\"argument-error\",\"credential failed: expected 2 arguments (the OAuth access token and secret).\");return new mg(\"twitter.com\",c)},Ag=function(a,b){this.Ib=a;this.Fd=b;N(this,\"providerId\",\"password\")};Ag.prototype.Kb=function(a){return Q(a,Bg,{email:this.Ib,password:this.Fd})};Ag.prototype.Ec=function(a,b){return Q(a,Cg,{idToken:b,email:this.Ib,password:this.Fd})};\nAg.prototype.Ad=function(a,b){return lg(this.Kb(a),b)};Ag.prototype.I=function(){return{email:this.Ib,password:this.Fd}};var Dg=function(){Xf(this,{providerId:\"password\",isOAuthProvider:!1})};Xf(Dg,{PROVIDER_ID:\"password\"});var Eg=function(a){if(!(a.verificationId&&a.Yc||a.fc&&a.phoneNumber))throw new O(\"internal-error\");this.P=a;N(this,\"providerId\",\"phone\")};Eg.prototype.Kb=function(a){return a.verifyPhoneNumber(Fg(this))};Eg.prototype.Ec=function(a,b){var c=Fg(this);c.idToken=b;return Q(a,Gg,c)};\nEg.prototype.Ad=function(a,b){var c=Fg(this);c.operation=\"REAUTH\";a=Q(a,Hg,c);return lg(a,b)};Eg.prototype.I=function(){var a={providerId:\"phone\"};this.P.verificationId&&(a.verificationId=this.P.verificationId);this.P.Yc&&(a.verificationCode=this.P.Yc);this.P.fc&&(a.temporaryProof=this.P.fc);this.P.phoneNumber&&(a.phoneNumber=this.P.phoneNumber);return a};\nvar Fg=function(a){return a.P.fc&&a.P.phoneNumber?{temporaryProof:a.P.fc,phoneNumber:a.P.phoneNumber}:{sessionInfo:a.P.verificationId,code:a.P.Yc}},Ig=function(a){try{this.gf=a||firebase.auth()}catch(b){throw new O(\"argument-error\",\"Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().\");}Xf(this,{providerId:\"phone\",isOAuthProvider:!1})};\nIg.prototype.verifyPhoneNumber=function(a,b){var c=this.gf.g;return E(b.verify()).then(function(d){if(!m(d))throw new O(\"argument-error\",\"An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.\");switch(b.type){case \"recaptcha\":return Q(c,Jg,{phoneNumber:a,recaptchaToken:d});default:throw new O(\"argument-error\",'Only firebase.auth.ApplicationVerifiers with type=\"recaptcha\" are currently supported.');}})};\nvar Kg=function(a,b){if(!a)throw new O(\"missing-verification-id\");if(!b)throw new O(\"missing-verification-code\");return new Eg({verificationId:a,Yc:b})};Xf(Ig,{PROVIDER_ID:\"phone\"});\nvar Lg=function(a){if(a.temporaryProof&&a.phoneNumber)return new Eg({fc:a.temporaryProof,phoneNumber:a.phoneNumber});var b=a&&a.providerId;if(!b||\"password\"===b)return null;var c=a&&a.oauthAccessToken,d=a&&a.oauthTokenSecret;a=a&&a.oauthIdToken;try{switch(b){case \"google.com\":return xg(a,c);case \"facebook.com\":return tg(c);case \"github.com\":return vg(c);case \"twitter.com\":return zg(c,d);default:return(new P(b)).credential(a,c)}}catch(e){return null}},Mg=function(a){if(!a.isOAuthProvider)throw new O(\"invalid-oauth-provider\");\n};var Ng=function(a,b,c){O.call(this,a,c);a=b||{};a.email&&N(this,\"email\",a.email);a.phoneNumber&&N(this,\"phoneNumber\",a.phoneNumber);a.credential&&N(this,\"credential\",a.credential)};t(Ng,O);Ng.prototype.I=function(){var a={code:this.code,message:this.message};this.email&&(a.email=this.email);this.phoneNumber&&(a.phoneNumber=this.phoneNumber);var b=this.credential&&this.credential.I();b&&nb(a,b);return a};Ng.prototype.toJSON=function(){return this.I()};\nvar Og=function(a){if(a.code){var b=a.code||\"\";0==b.indexOf(\"auth/\")&&(b=b.substring(5));var c={credential:Lg(a)};if(a.email)c.email=a.email;else if(a.phoneNumber)c.phoneNumber=a.phoneNumber;else return new O(b,a.message||void 0);return new Ng(b,c,a.message)}return null};var Pg=function(a){this.vg=a};t(Pg,Kc);Pg.prototype.pc=function(){return new this.vg};Pg.prototype.wd=function(){return{}};\nvar R=function(a,b,c){var d=\"Node\"==Df();d=k.XMLHttpRequest||d&&firebase.INTERNAL.node&&firebase.INTERNAL.node.XMLHttpRequest;if(!d)throw new O(\"internal-error\",\"The XMLHttpRequest compatibility library was not found.\");this.o=a;a=b||{};this.hg=a.secureTokenEndpoint||\"https://securetoken.googleapis.com/v1/token\";this.ig=a.secureTokenTimeout||Qg;this.Le=lb(a.secureTokenHeaders||Rg);this.sf=a.firebaseEndpoint||\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\";this.tf=a.firebaseTimeout||\nSg;this.qc=lb(a.firebaseHeaders||Tg);c&&(this.qc[\"X-Client-Version\"]=c,this.Le[\"X-Client-Version\"]=c);this.jf=new Pc;this.ug=new Pg(d)},Ug,Qg=new Rf(3E4,6E4),Rg={\"Content-Type\":\"application/x-www-form-urlencoded\"},Sg=new Rf(3E4,6E4),Tg={\"Content-Type\":\"application/json\"},Vg=function(a,b){b?a.qc.firebase_locale=b:delete a.qc.firebase_locale},Xg=function(a,b,c,d,e,f,g){Qf()?(sf()?a=r(a.kg,a):(Ug||(Ug=new D(function(a,b){Wg(a,b)})),a=r(a.jg,a)),a(b,c,d,e,f,g)):c&&c(null)};\nR.prototype.kg=function(a,b,c,d,e,f){var g=\"Node\"==Df(),l=Ef()?g?new I(this.ug):new I:new I(this.jf);if(f){l.zb=Math.max(0,f);var n=setTimeout(function(){l.dispatchEvent(\"timeout\")},f)}l.listen(\"complete\",function(){n&&clearTimeout(n);var a=null;try{a=JSON.parse(Re(this))||null}catch(wb){a=null}b&&b(a)});rc(l,\"ready\",function(){n&&clearTimeout(n);this.Ka||(this.Ka=!0,this.ib())});rc(l,\"timeout\",function(){n&&clearTimeout(n);this.Ka||(this.Ka=!0,this.ib());b&&b(null)});l.send(a,c,d,e)};\nvar Yg=Ia(\"https://apis.google.com/js/client.js?onload=%{onload}\"),Zg=\"__fcb\"+Math.floor(1E6*Math.random()).toString(),Wg=function(a,b){if(((window.gapi||{}).client||{}).request)a();else{k[Zg]=function(){((window.gapi||{}).client||{}).request?a():b(Error(\"CORS_UNSUPPORTED\"))};var c=Na(Yg,{onload:Zg});Wd(de(c),function(){b(Error(\"CORS_UNSUPPORTED\"))})}};\nR.prototype.jg=function(a,b,c,d,e){var f=this;Ug.then(function(){window.gapi.client.setApiKey(f.o);var g=window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({path:a,method:c,body:d,headers:e,authType:\"none\",callback:function(a){window.gapi.auth.setToken(g);b&&b(a)}})}).f(function(a){b&&b({error:{message:a&&a.message||\"CORS_UNSUPPORTED\"}})})};\nvar ah=function(a,b){return new D(function(c,d){\"refresh_token\"==b.grant_type&&b.refresh_token||\"authorization_code\"==b.grant_type&&b.code?Xg(a,a.hg+\"?key=\"+encodeURIComponent(a.o),function(a){a?a.error?d($g(a)):a.access_token&&a.refresh_token?c(a):d(new O(\"internal-error\")):d(new O(\"network-request-failed\"))},\"POST\",mf(b).toString(),a.Le,a.ig.get()):d(new O(\"internal-error\"))})},bh=function(a,b,c,d,e,f){var g=gf(a.sf+b);K(g,\"key\",a.o);f&&K(g,\"cb\",na().toString());var l=\"GET\"==c;if(l)for(var n in d)d.hasOwnProperty(n)&&\nK(g,n,d[n]);return new D(function(b,f){Xg(a,g.toString(),function(a){a?a.error?f($g(a,e||{})):b(a):f(new O(\"network-request-failed\"))},c,l?void 0:Gc(Mf(d)),a.qc,a.tf.get())})},ch=function(a){if(!xc.test(a.email))throw new O(\"invalid-email\");},dh=function(a){\"email\"in a&&ch(a)},fh=function(a,b){return Q(a,eh,{identifier:b,continueUri:If()?of():\"http://localhost\"}).then(function(a){return a.allProviders||[]})},hh=function(a){return Q(a,gh,{}).then(function(a){return a.authorizedDomains||[]})},ih=function(a){if(!a.idToken)throw new O(\"internal-error\");\n},jh=function(a){if(a.phoneNumber||a.temporaryProof){if(!a.phoneNumber||!a.temporaryProof)throw new O(\"internal-error\");}else{if(!a.sessionInfo)throw new O(\"missing-verification-id\");if(!a.code)throw new O(\"missing-verification-code\");}};R.prototype.signInAnonymously=function(){return Q(this,kh,{})};R.prototype.updateEmail=function(a,b){return Q(this,lh,{idToken:a,email:b})};R.prototype.updatePassword=function(a,b){return Q(this,Cg,{idToken:a,password:b})};var mh={displayName:\"DISPLAY_NAME\",photoUrl:\"PHOTO_URL\"};\nR.prototype.updateProfile=function(a,b){var c={idToken:a},d=[];fb(mh,function(a,f){var e=b[f];null===e?d.push(a):f in b&&(c[f]=e)});d.length&&(c.deleteAttribute=d);return Q(this,lh,c)};R.prototype.sendPasswordResetEmail=function(a,b){a={requestType:\"PASSWORD_RESET\",email:a};nb(a,b);return Q(this,nh,a)};R.prototype.sendEmailVerification=function(a,b){a={requestType:\"VERIFY_EMAIL\",idToken:a};nb(a,b);return Q(this,oh,a)};R.prototype.verifyPhoneNumber=function(a){return Q(this,ph,a)};\nvar rh=function(a,b,c){return Q(a,qh,{idToken:b,deleteProvider:c})},sh=function(a){if(!a.requestUri||!a.sessionId&&!a.postBody)throw new O(\"internal-error\");},th=function(a){var b=null;a.needConfirmation?(a.code=\"account-exists-with-different-credential\",b=Og(a)):\"FEDERATED_USER_ID_ALREADY_LINKED\"==a.errorMessage?(a.code=\"credential-already-in-use\",b=Og(a)):\"EMAIL_EXISTS\"==a.errorMessage&&(a.code=\"email-already-in-use\",b=Og(a));if(b)throw b;if(!a.idToken)throw new O(\"internal-error\");},ng=function(a,\nb){b.returnIdpCredential=!0;return Q(a,uh,b)},pg=function(a,b){b.returnIdpCredential=!0;return Q(a,vh,b)},qg=function(a,b){b.returnIdpCredential=!0;b.autoCreate=!1;return Q(a,wh,b)},xh=function(a){if(!a.oobCode)throw new O(\"invalid-action-code\");};R.prototype.confirmPasswordReset=function(a,b){return Q(this,yh,{oobCode:a,newPassword:b})};R.prototype.checkActionCode=function(a){return Q(this,zh,{oobCode:a})};R.prototype.applyActionCode=function(a){return Q(this,Ah,{oobCode:a})};\nvar Ah={endpoint:\"setAccountInfo\",F:xh,$a:\"email\"},zh={endpoint:\"resetPassword\",F:xh,Y:function(a){if(!a.email||!a.requestType)throw new O(\"internal-error\");}},Bh={endpoint:\"signupNewUser\",F:function(a){ch(a);if(!a.password)throw new O(\"weak-password\");},Y:ih,za:!0},eh={endpoint:\"createAuthUri\"},Ch={endpoint:\"deleteAccount\",Ya:[\"idToken\"]},qh={endpoint:\"setAccountInfo\",Ya:[\"idToken\",\"deleteProvider\"],F:function(a){if(!ia(a.deleteProvider))throw new O(\"internal-error\");}},Dh={endpoint:\"getAccountInfo\"},\noh={endpoint:\"getOobConfirmationCode\",Ya:[\"idToken\",\"requestType\"],F:function(a){if(\"VERIFY_EMAIL\"!=a.requestType)throw new O(\"internal-error\");},$a:\"email\"},nh={endpoint:\"getOobConfirmationCode\",Ya:[\"requestType\"],F:function(a){if(\"PASSWORD_RESET\"!=a.requestType)throw new O(\"internal-error\");ch(a)},$a:\"email\"},gh={ae:!0,endpoint:\"getProjectConfig\",ue:\"GET\"},Eh={ae:!0,endpoint:\"getRecaptchaParam\",ue:\"GET\",Y:function(a){if(!a.recaptchaSiteKey)throw new O(\"internal-error\");}},yh={endpoint:\"resetPassword\",\nF:xh,$a:\"email\"},Jg={endpoint:\"sendVerificationCode\",Ya:[\"phoneNumber\",\"recaptchaToken\"],$a:\"sessionInfo\"},lh={endpoint:\"setAccountInfo\",Ya:[\"idToken\"],F:dh,za:!0},Cg={endpoint:\"setAccountInfo\",Ya:[\"idToken\"],F:function(a){dh(a);if(!a.password)throw new O(\"weak-password\");},Y:ih,za:!0},kh={endpoint:\"signupNewUser\",Y:ih,za:!0},uh={endpoint:\"verifyAssertion\",F:sh,Y:th,za:!0},wh={endpoint:\"verifyAssertion\",F:sh,Y:function(a){if(a.errorMessage&&\"USER_NOT_FOUND\"==a.errorMessage)throw new O(\"user-not-found\");\nif(!a.idToken)throw new O(\"internal-error\");},za:!0},vh={endpoint:\"verifyAssertion\",F:function(a){sh(a);if(!a.idToken)throw new O(\"internal-error\");},Y:th,za:!0},Fh={endpoint:\"verifyCustomToken\",F:function(a){if(!a.token)throw new O(\"invalid-custom-token\");},Y:ih,za:!0},Bg={endpoint:\"verifyPassword\",F:function(a){ch(a);if(!a.password)throw new O(\"wrong-password\");},Y:ih,za:!0},ph={endpoint:\"verifyPhoneNumber\",F:jh,Y:ih},Gg={endpoint:\"verifyPhoneNumber\",F:function(a){if(!a.idToken)throw new O(\"internal-error\");\njh(a)},Y:function(a){if(a.temporaryProof)throw a.code=\"credential-already-in-use\",Og(a);ih(a)}},Hg={mf:{USER_NOT_FOUND:\"user-not-found\"},endpoint:\"verifyPhoneNumber\",F:jh,Y:ih},Q=function(a,b,c){if(!$f(c,b.Ya))return F(new O(\"internal-error\"));var d=b.ue||\"POST\",e;return E(c).then(b.F).then(function(){b.za&&(c.returnSecureToken=!0);return bh(a,b.endpoint,d,c,b.mf,b.ae||!1)}).then(function(a){return e=a}).then(b.Y).then(function(){if(!b.$a)return e;if(!(b.$a in e))throw new O(\"internal-error\");return e[b.$a]})},\n$g=function(a,b){var c=(a.error&&a.error.errors&&a.error.errors[0]||{}).reason||\"\";var d={keyInvalid:\"invalid-api-key\",ipRefererBlocked:\"app-not-authorized\"};if(c=d[c]?new O(d[c]):null)return c;c=a.error&&a.error.message||\"\";d={INVALID_CUSTOM_TOKEN:\"invalid-custom-token\",CREDENTIAL_MISMATCH:\"custom-token-mismatch\",MISSING_CUSTOM_TOKEN:\"internal-error\",INVALID_IDENTIFIER:\"invalid-email\",MISSING_CONTINUE_URI:\"internal-error\",INVALID_EMAIL:\"invalid-email\",INVALID_PASSWORD:\"wrong-password\",USER_DISABLED:\"user-disabled\",\nMISSING_PASSWORD:\"internal-error\",EMAIL_EXISTS:\"email-already-in-use\",PASSWORD_LOGIN_DISABLED:\"operation-not-allowed\",INVALID_IDP_RESPONSE:\"invalid-credential\",FEDERATED_USER_ID_ALREADY_LINKED:\"credential-already-in-use\",INVALID_MESSAGE_PAYLOAD:\"invalid-message-payload\",INVALID_RECIPIENT_EMAIL:\"invalid-recipient-email\",INVALID_SENDER:\"invalid-sender\",EMAIL_NOT_FOUND:\"user-not-found\",EXPIRED_OOB_CODE:\"expired-action-code\",INVALID_OOB_CODE:\"invalid-action-code\",MISSING_OOB_CODE:\"internal-error\",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:\"requires-recent-login\",\nINVALID_ID_TOKEN:\"invalid-user-token\",TOKEN_EXPIRED:\"user-token-expired\",USER_NOT_FOUND:\"user-token-expired\",CORS_UNSUPPORTED:\"cors-unsupported\",DYNAMIC_LINK_NOT_ACTIVATED:\"dynamic-link-not-activated\",INVALID_APP_ID:\"invalid-app-id\",TOO_MANY_ATTEMPTS_TRY_LATER:\"too-many-requests\",WEAK_PASSWORD:\"weak-password\",OPERATION_NOT_ALLOWED:\"operation-not-allowed\",USER_CANCELLED:\"user-cancelled\",CAPTCHA_CHECK_FAILED:\"captcha-check-failed\",INVALID_APP_CREDENTIAL:\"invalid-app-credential\",INVALID_CODE:\"invalid-verification-code\",\nINVALID_PHONE_NUMBER:\"invalid-phone-number\",INVALID_SESSION_INFO:\"invalid-verification-id\",INVALID_TEMPORARY_PROOF:\"invalid-credential\",MISSING_APP_CREDENTIAL:\"missing-app-credential\",MISSING_CODE:\"missing-verification-code\",MISSING_PHONE_NUMBER:\"missing-phone-number\",MISSING_SESSION_INFO:\"missing-verification-id\",QUOTA_EXCEEDED:\"quota-exceeded\",SESSION_EXPIRED:\"code-expired\",INVALID_CONTINUE_URI:\"invalid-continue-uri\",MISSING_ANDROID_PACKAGE_NAME:\"missing-android-pkg-name\",MISSING_IOS_BUNDLE_ID:\"missing-ios-bundle-id\",\nUNAUTHORIZED_DOMAIN:\"unauthorized-continue-uri\"};nb(d,b||{});b=(b=c.match(/^[^\\s]+\\s*:\\s*(.*)$/))&&1<b.length?b[1]:void 0;for(var e in d)if(0===c.indexOf(e))return new O(d[e],b);!b&&a&&(b=Lf(a));return new O(\"internal-error\",b)};var Gh=function(a){this.D=a};Gh.prototype.value=function(){return this.D};Gh.prototype.Ne=function(a){this.D.style=a;return this};Gh.prototype.getStyle=function(){return this.D.style};var Hh=function(a){this.D=a||{}};h=Hh.prototype;h.value=function(){return this.D};h.getUrl=function(){return this.D.url};h.Ne=function(a){this.D.style=a;return this};h.getStyle=function(){return this.D.style};h.getId=function(){return this.D.id};h.getContext=function(){return this.D.context};var Jh=function(a){this.sg=a;this.xc=null;this.Cd=Ih(this)},Kh=function(a){var b=new Hh;b.D.where=document.body;b.D.url=a.sg;b.D.messageHandlersFilter=M(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\");b.D.attributes=b.D.attributes||{};(new Gh(b.D.attributes)).Ne({position:\"absolute\",top:\"-100px\",width:\"1px\",height:\"1px\"});b.D.dontclear=!0;return b},Ih=function(a){return Lh().then(function(){return new D(function(b,c){M(\"gapi.iframes.getContext\")().open(Kh(a).value(),function(d){a.xc=d;a.xc.restyle({setHideOnLeave:!1});\nvar e=setTimeout(function(){c(Error(\"Network Error\"))},Mh.get()),f=function(){clearTimeout(e);b()};d.ping(f).then(f,function(){c(Error(\"Network Error\"))})})})})};Jh.prototype.sendMessage=function(a){var b=this;return this.Cd.then(function(){return new D(function(c){b.xc.send(a.type,a,c,M(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})})};\nvar Nh=function(a,b){a.Cd.then(function(){a.xc.register(\"authEvent\",b,M(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})},Oh=Ia(\"https://apis.google.com/js/api.js?onload=%{onload}\"),Ph=new Rf(3E4,6E4),Mh=new Rf(5E3,15E3),Qh=null,Lh=function(){return Qh?Qh:Qh=(new D(function(a,b){if(Qf()){var c=function(){Pf();M(\"gapi.load\")(\"gapi.iframes\",{callback:a,ontimeout:function(){Pf();b(Error(\"Network Error\"))},timeout:Ph.get()})};if(M(\"gapi.iframes.Iframe\"))a();else if(M(\"gapi.load\"))c();else{var d=\"__iframefcb\"+\nMath.floor(1E6*Math.random()).toString();k[d]=function(){M(\"gapi.load\")?c():b(Error(\"Network Error\"))};d=Na(Oh,{onload:d});E(de(d)).f(function(){b(Error(\"Network Error\"))})}}else b(Error(\"Network Error\"))})).f(function(a){Qh=null;throw a;})};var Rh=function(a,b,c){this.C=a;this.o=b;this.u=c;this.bb=null;this.ic=hf(this.C,\"/__/auth/iframe\");K(this.ic,\"apiKey\",this.o);K(this.ic,\"appName\",this.u)};Rh.prototype.Td=function(a){this.bb=a;return this};Rh.prototype.toString=function(){this.bb?K(this.ic,\"v\",this.bb):this.ic.removeParameter(\"v\");return this.ic.toString()};var Sh=function(a,b,c,d,e){this.C=a;this.o=b;this.u=c;this.ff=d;this.bb=this.U=this.Md=null;this.tb=e};Sh.prototype.Td=function(a){this.bb=a;return this};\nSh.prototype.toString=function(){var a=hf(this.C,\"/__/auth/handler\");K(a,\"apiKey\",this.o);K(a,\"appName\",this.u);K(a,\"authType\",this.ff);if(this.tb.isOAuthProvider){var b=this.tb;try{var c=firebase.app(this.u).auth().ha}catch(l){c=null}b.kd=c;K(a,\"providerId\",this.tb.providerId);b=this.tb;c=Mf(b.ie);for(var d in c)c[d]=c[d].toString();d=b.bg;c=lb(c);for(var e=0;e<d.length;e++){var f=d[e];f in c&&delete c[f]}b.yd&&b.kd&&!c[b.yd]&&(c[b.yd]=b.kd);jb(c)||K(a,\"customParameters\",Lf(c))}\"function\"===typeof this.tb.pe&&\n(b=this.tb.pe(),b.length&&K(a,\"scopes\",b.join(\",\")));this.Md?K(a,\"redirectUrl\",this.Md):a.removeParameter(\"redirectUrl\");this.U?K(a,\"eventId\",this.U):a.removeParameter(\"eventId\");this.bb?K(a,\"v\",this.bb):a.removeParameter(\"v\");if(this.kc)for(var g in this.kc)this.kc.hasOwnProperty(g)&&!ff(a,g)&&K(a,g,this.kc[g]);return a.toString()};\nvar Th=function(a,b,c,d){this.C=a;this.o=b;this.u=c;this.vf=(this.Ja=d||null)?Ff(this.Ja):null;d=this.Ja;this.Ef=(new Rh(a,b,c)).Td(d).toString();this.sa=[];this.g=new R(b,null,this.vf);this.zc=this.va=null},Uh=function(a){var b=of();return hh(a).then(function(a){a:{var c=gf(b),e=c.pa;c=c.oa;for(var f=0;f<a.length;f++){var g=a[f];var l=c;var n=e;0==g.indexOf(\"chrome-extension://\")?l=gf(g).oa==l&&\"chrome-extension\"==n:\"http\"!=n&&\"https\"!=n?l=!1:xf.test(g)?l=l==g:(g=g.split(\".\").join(\"\\\\.\"),l=(new RegExp(\"^(.+\\\\.\"+\ng+\"|\"+g+\")$\",\"i\")).test(l));if(l){a=!0;break a}}a=!1}if(!a)throw new jg(of());})};h=Th.prototype;h.Ob=function(){if(this.zc)return this.zc;var a=this;return this.zc=yf().then(function(){a.wc=new Jh(a.Ef);Vh(a)})};h.cc=function(a,b,c){var d=new O(\"popup-closed-by-user\"),e=new O(\"web-storage-unsupported\"),f=this,g=!1;return this.Pa().then(function(){Wh(f).then(function(c){c||(a&&uf(a),b(e),g=!0)})}).f(function(){}).then(function(){if(!g)return wf(a)}).then(function(){if(!g)return Be(c).then(function(){b(d)})})};\nh.Oe=function(){var a=L();return!Kf(a)&&!Of(a)};h.se=function(){return!1};h.Wb=function(a,b,c,d,e,f,g){if(!a)return F(new O(\"popup-blocked\"));if(g&&!Kf())return this.Pa().f(function(b){uf(a);e(b)}),d(),E();this.va||(this.va=Uh(this.g));var l=this;return this.va.then(function(){var b=l.Pa().f(function(b){uf(a);e(b);throw b;});d();return b}).then(function(){Mg(c);if(!g){var d=Xh(l.C,l.o,l.u,b,c,null,f,l.Ja);pf(d,a)}}).f(function(a){\"auth/network-request-failed\"==a.code&&(l.va=null);throw a;})};\nh.Xb=function(a,b,c){this.va||(this.va=Uh(this.g));var d=this;return this.va.then(function(){Mg(b);var e=Xh(d.C,d.o,d.u,a,b,of(),c,d.Ja);pf(e)}).f(function(a){\"auth/network-request-failed\"==a.code&&(d.va=null);throw a;})};h.Pa=function(){var a=this;return this.Ob().then(function(){return a.wc.Cd}).f(function(){a.va=null;throw new O(\"network-request-failed\");})};h.Se=function(){return!0};\nvar Xh=function(a,b,c,d,e,f,g,l,n){a=new Sh(a,b,c,d,e);a.Md=f;a.U=g;f=a.Td(l);f.kc=lb(n||null);return f.toString()},Vh=function(a){if(!a.wc)throw Error(\"IfcHandler must be initialized!\");Nh(a.wc,function(b){var c={};if(b&&b.authEvent){var d=!1;b=ig(b.authEvent);for(c=0;c<a.sa.length;c++)d=a.sa[c](b)||d;c={};c.status=d?\"ACK\":\"ERROR\";return E(c)}c.status=\"ERROR\";return E(c)})},Wh=function(a){var b={type:\"webStorageSupport\"};return a.Ob().then(function(){return a.wc.sendMessage(b)}).then(function(a){if(a&&\na.length&&\"undefined\"!==typeof a[0].webStorageSupport)return a[0].webStorageSupport;throw Error();})};Th.prototype.fb=function(a){this.sa.push(a)};Th.prototype.$b=function(a){Za(this.sa,function(b){return b==a})};var Yh=function(a,b,c){N(this,\"type\",\"recaptcha\");this.Zc=this.Eb=null;this.Gb=!1;this.ge=a;this.Ca=b||{theme:\"light\",type:\"image\"};this.K=[];if(this.Ca.sitekey)throw new O(\"argument-error\",\"sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.\");this.Ac=\"invisible\"===this.Ca.size;if(!ld(a)||!this.Ac&&ld(a).hasChildNodes())throw new O(\"argument-error\",\"reCAPTCHA container is either not found or already contains inner elements!\");try{this.i=c||firebase.app()}catch(g){throw new O(\"argument-error\",\n\"No firebase.app.App instance is currently initialized.\");}if(this.i.options&&this.i.options.apiKey)a=firebase.SDK_VERSION?Ff(firebase.SDK_VERSION):null,this.g=new R(this.i.options&&this.i.options.apiKey,null,a);else throw new O(\"invalid-api-key\");var d=this;this.Uc=[];var e=this.Ca.callback;this.Ca.callback=function(a){d.Hb(a);if(\"function\"===typeof e)e(a);else if(\"string\"===typeof e){var b=M(e,k);\"function\"===typeof b&&b(a)}};var f=this.Ca[\"expired-callback\"];this.Ca[\"expired-callback\"]=function(){d.Hb(null);\nif(\"function\"===typeof f)f();else if(\"string\"===typeof f){var a=M(f,k);\"function\"===typeof a&&a()}}};Yh.prototype.Hb=function(a){for(var b=0;b<this.Uc.length;b++)try{this.Uc[b](a)}catch(c){}};var Zh=function(a,b){Za(a.Uc,function(a){return a==b})};Yh.prototype.c=function(a){var b=this;this.K.push(a);Ed(a,function(){Ya(b.K,a)});return a};\nYh.prototype.Pb=function(){var a=this;return this.Eb?this.Eb:this.Eb=this.c(E().then(function(){if(If())return yf();throw new O(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.\");}).then(function(){try{var b=a.i.auth().ha}catch(c){b=null}return $h(ai(),b)}).then(function(){return Q(a.g,Eh,{})}).then(function(b){a.Ca.sitekey=b.recaptchaSiteKey}).f(function(b){a.Eb=null;throw b;}))};\nYh.prototype.render=function(){bi(this);var a=this;return this.c(this.Pb().then(function(){if(null===a.Zc){var b=a.ge;if(!a.Ac){var c=ld(b);b=pd(\"DIV\");c.appendChild(b)}a.Zc=grecaptcha.render(b,a.Ca)}return a.Zc}))};Yh.prototype.verify=function(){bi(this);var a=this;return this.c(this.render().then(function(b){return new D(function(c){var d=grecaptcha.getResponse(b);if(d)c(d);else{var e=function(b){b&&(Zh(a,e),c(b))};a.Uc.push(e);a.Ac&&grecaptcha.execute(a.Zc)}})}))};\nvar bi=function(a){if(a.Gb)throw new O(\"internal-error\",\"RecaptchaVerifier instance has been destroyed.\");};Yh.prototype.clear=function(){bi(this);this.Gb=!0;ai().hd--;for(var a=0;a<this.K.length;a++)this.K[a].cancel(\"RecaptchaVerifier instance has been destroyed.\");if(!this.Ac){a=ld(this.ge);for(var b;b=a.firstChild;)a.removeChild(b)}};\nvar ci=Ia(\"https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}\"),di=function(){this.hd=k.grecaptcha?Infinity:0;this.te=null;this.fd=\"__rcb\"+Math.floor(1E6*Math.random()).toString()},$h=function(a,b){return new D(function(c,d){if(Qf())if(!k.grecaptcha||b!==a.te&&!a.hd){k[a.fd]=function(){if(k.grecaptcha){a.te=b;var e=k.grecaptcha.render;k.grecaptcha.render=function(b,c){b=e(b,c);a.hd++;return b};c()}else d(new O(\"internal-error\"));delete k[a.fd]};var e=Na(ci,{onload:a.fd,\nhl:b||\"\"});E(de(e)).f(function(){d(new O(\"internal-error\",\"Unable to load external reCAPTCHA dependencies!\"))})}else c();else d(new O(\"network-request-failed\"))})},ei=null,ai=function(){ei||(ei=new di);return ei};var fi=function(a){this.G=a||firebase.INTERNAL.reactNative&&firebase.INTERNAL.reactNative.AsyncStorage;if(!this.G)throw new O(\"internal-error\",\"The React Native compatibility library was not found.\");};h=fi.prototype;h.get=function(a){return E(this.G.getItem(a)).then(function(a){return a&&Nf(a)})};h.set=function(a,b){return E(this.G.setItem(a,Lf(b)))};h.remove=function(a){return E(this.G.removeItem(a))};h.gb=function(){};h.Xa=function(){};var gi=function(){this.G={}};h=gi.prototype;h.get=function(a){return E(this.G[a])};h.set=function(a,b){this.G[a]=b;return E()};h.remove=function(a){delete this.G[a];return E()};h.gb=function(){};h.Xa=function(){};var ii=function(){if(!hi()){if(\"Node\"==Df())throw new O(\"internal-error\",\"The LocalStorage compatibility library was not found.\");throw new O(\"web-storage-unsupported\");}this.G=k.localStorage||firebase.INTERNAL.node.localStorage},hi=function(){var a=\"Node\"==Df();a=k.localStorage||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.localStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}};h=ii.prototype;\nh.get=function(a){var b=this;return E().then(function(){var c=b.G.getItem(a);return Nf(c)})};h.set=function(a,b){var c=this;return E().then(function(){var d=Lf(b);null===d?c.remove(a):c.G.setItem(a,d)})};h.remove=function(a){var b=this;return E().then(function(){b.G.removeItem(a)})};h.gb=function(a){k.window&&kc(k.window,\"storage\",a)};h.Xa=function(a){k.window&&sc(k.window,\"storage\",a)};var ji=function(){this.G={}};h=ji.prototype;h.get=function(){return E(null)};h.set=function(){return E()};h.remove=function(){return E()};h.gb=function(){};h.Xa=function(){};var li=function(){if(!ki()){if(\"Node\"==Df())throw new O(\"internal-error\",\"The SessionStorage compatibility library was not found.\");throw new O(\"web-storage-unsupported\");}this.G=k.sessionStorage||firebase.INTERNAL.node.sessionStorage},ki=function(){var a=\"Node\"==Df();a=k.sessionStorage||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.sessionStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}};h=li.prototype;\nh.get=function(a){var b=this;return E().then(function(){var c=b.G.getItem(a);return Nf(c)})};h.set=function(a,b){var c=this;return E().then(function(){var d=Lf(b);null===d?c.remove(a):c.G.setItem(a,d)})};h.remove=function(a){var b=this;return E().then(function(){b.G.removeItem(a)})};h.gb=function(){};h.Xa=function(){};var ni=function(a,b,c,d,e,f){if(!window.indexedDB)throw new O(\"web-storage-unsupported\");this.nf=a;this.Bd=b;this.jd=c;this.We=d;this.cb=e;this.W={};this.dc=[];this.Sb=0;this.Gf=f||k.indexedDB},oi,pi=function(a){return new D(function(b,c){var d=a.Gf.open(a.nf,a.cb);d.onerror=function(a){c(Error(a.target.errorCode))};d.onupgradeneeded=function(b){b=b.target.result;try{b.createObjectStore(a.Bd,{keyPath:a.jd})}catch(f){c(f)}};d.onsuccess=function(a){b(a.target.result)}})},qi=function(a){a.xe||(a.xe=\npi(a));return a.xe},ri=function(a,b){return b.objectStore(a.Bd)},si=function(a,b,c){return b.transaction([a.Bd],c?\"readwrite\":\"readonly\")},ti=function(a){return new D(function(b,c){a.onsuccess=function(a){a&&a.target?b(a.target.result):b()};a.onerror=function(a){c(Error(a.target.errorCode))}})};h=ni.prototype;\nh.set=function(a,b){var c=!1,d,e=this;return Ed(qi(this).then(function(b){d=b;b=ri(e,si(e,d,!0));return ti(b.get(a))}).then(function(f){var g=ri(e,si(e,d,!0));if(f)return f.value=b,ti(g.put(f));e.Sb++;c=!0;f={};f[e.jd]=a;f[e.We]=b;return ti(g.add(f))}).then(function(){e.W[a]=b}),function(){c&&e.Sb--})};h.get=function(a){var b=this;return qi(this).then(function(c){return ti(ri(b,si(b,c,!1)).get(a))}).then(function(a){return a&&a.value})};\nh.remove=function(a){var b=!1,c=this;return Ed(qi(this).then(function(d){b=!0;c.Sb++;return ti(ri(c,si(c,d,!0))[\"delete\"](a))}).then(function(){delete c.W[a]}),function(){b&&c.Sb--})};\nh.og=function(){var a=this;return qi(this).then(function(b){var c=ri(a,si(a,b,!1));return c.getAll?ti(c.getAll()):new D(function(a,b){var d=[],e=c.openCursor();e.onsuccess=function(b){(b=b.target.result)?(d.push(b.value),b[\"continue\"]()):a(d)};e.onerror=function(a){b(Error(a.target.errorCode))}})}).then(function(b){var c={},d=[];if(0==a.Sb){for(d=0;d<b.length;d++)c[b[d][a.jd]]=b[d][a.We];d=qf(a.W,c);a.W=c}return d})};h.gb=function(a){0==this.dc.length&&this.Vd();this.dc.push(a)};\nh.Xa=function(a){Za(this.dc,function(b){return b==a});0==this.dc.length&&this.Qc()};h.Vd=function(){var a=this;this.Qc();var b=function(){a.Hd=Be(800).then(r(a.og,a)).then(function(b){0<b.length&&x(a.dc,function(a){a(b)})}).then(b).f(function(a){\"STOP_EVENT\"!=a.message&&b()});return a.Hd};b()};h.Qc=function(){this.Hd&&this.Hd.cancel(\"STOP_EVENT\")};var xi=function(){this.ke={Browser:ui,Node:vi,ReactNative:wi}[Df()]},yi,ui={B:ii,Xd:li},vi={B:ii,Xd:li},wi={B:fi,Xd:ji};var zi=function(a){this.vd(a)};\nzi.prototype.vd=function(a){var b=a.url;if(\"undefined\"===typeof b)throw new O(\"missing-continue-uri\");if(\"string\"!==typeof b||\"string\"===typeof b&&!b.length)throw new O(\"invalid-continue-uri\");this.hf=b;this.Zd=this.lc=null;this.ye=!1;var c=a.android;if(c&&\"object\"===typeof c){b=c.packageName;var d=c.installApp;c=c.minimumVersion;if(\"string\"===typeof b&&b.length){this.lc=b;if(\"undefined\"!==typeof d&&\"boolean\"!==typeof d)throw new O(\"argument-error\",\"installApp property must be a boolean when specified.\");this.ye=\n!!d;if(\"undefined\"!==typeof c&&(\"string\"!==typeof c||\"string\"===typeof c&&!c.length))throw new O(\"argument-error\",\"minimumVersion property must be a non empty string when specified.\");this.Zd=c||null}else{if(\"undefined\"!==typeof b)throw new O(\"argument-error\",\"packageName property must be a non empty string when specified.\");if(\"undefined\"!==typeof d||\"undefined\"!==typeof c)throw new O(\"missing-android-pkg-name\");}}else if(\"undefined\"!==typeof c)throw new O(\"argument-error\",\"android property must be a non null object when specified.\");\nthis.sd=null;if((b=a.iOS)&&\"object\"===typeof b)if(b=b.bundleId,\"string\"===typeof b&&b.length)this.sd=b;else{if(\"undefined\"!==typeof b)throw new O(\"argument-error\",\"bundleId property must be a non empty string when specified.\");}else if(\"undefined\"!==typeof b)throw new O(\"argument-error\",\"iOS property must be a non null object when specified.\");a=a.handleCodeInApp;if(\"undefined\"!==typeof a&&\"boolean\"!==typeof a)throw new O(\"argument-error\",\"handleCodeInApp property must be a boolean when specified.\");\nif((this.ee=!!a)&&!this.sd&&!this.lc)throw new O(\"argument-error\",\"handleCodeInApp property can't be true when no mobile application is provided.\");};var Ai=function(a){var b={};b.continueUrl=a.hf;b.canHandleCodeInApp=a.ee;if(b.androidPackageName=a.lc)b.androidMinimumVersion=a.Zd,b.androidInstallApp=a.ye;b.iOSBundleId=a.sd;for(var c in b)null===b[c]&&delete b[c];return b};var Bi=function(a,b){this.lf=b;N(this,\"verificationId\",a)};Bi.prototype.confirm=function(a){a=Kg(this.verificationId,a);return this.lf(a)};var Ci=function(a,b,c,d){return(new Ig(a)).verifyPhoneNumber(b,c).then(function(a){return new Bi(a,d)})};var Di=function(a){var b={},c=a.email,d=a.newEmail;a=a.requestType;if(!c||!a)throw Error(\"Invalid provider user info!\");b.fromEmail=d||null;b.email=c;N(this,\"operation\",a);N(this,\"data\",ag(b))};var Ei=function(a,b,c,d,e,f){this.Wf=a;this.dg=b;this.yf=c;this.Fc=d;this.Yd=e;this.eg=!!f;this.qb=null;this.Qa=this.Fc;if(this.Yd<this.Fc)throw Error(\"Proactive refresh lower bound greater than upper bound!\");};Ei.prototype.start=function(){this.Qa=this.Fc;Fi(this,!0)};\nvar Gi=function(a,b){if(b)return a.Qa=a.Fc,a.yf();b=a.Qa;a.Qa*=2;a.Qa>a.Yd&&(a.Qa=a.Yd);return b},Fi=function(a,b){a.stop();a.qb=Be(Gi(a,b)).then(function(){return a.eg?E():Tf()}).then(function(){return a.Wf()}).then(function(){Fi(a,!0)}).f(function(b){a.dg(b)&&Fi(a,!1)})};Ei.prototype.stop=function(){this.qb&&(this.qb.cancel(),this.qb=null)};var Mi=function(a){var b={};b[\"facebook.com\"]=Hi;b[\"google.com\"]=Ii;b[\"github.com\"]=Ji;b[\"twitter.com\"]=Ki;var c=a&&a.providerId;return c?b[c]?new b[c](a):new Li(a):null},Li=function(a){var b=Nf(a.rawUserInfo||\"{}\");a=a.providerId;if(!a)throw Error(\"Invalid additional user info!\");N(this,\"profile\",ag(b||{}));N(this,\"providerId\",a)},Hi=function(a){Li.call(this,a);if(\"facebook.com\"!=this.providerId)throw Error(\"Invalid provider id!\");};t(Hi,Li);\nvar Ji=function(a){Li.call(this,a);if(\"github.com\"!=this.providerId)throw Error(\"Invalid provider id!\");N(this,\"username\",this.profile&&this.profile.login||null)};t(Ji,Li);var Ii=function(a){Li.call(this,a);if(\"google.com\"!=this.providerId)throw Error(\"Invalid provider id!\");};t(Ii,Li);var Ki=function(a){Li.call(this,a);if(\"twitter.com\"!=this.providerId)throw Error(\"Invalid provider id!\");N(this,\"username\",a.screenName||null)};t(Ki,Li);var Ni={zg:\"local\",NONE:\"none\",Ag:\"session\"},Oi=function(a){var b=new O(\"invalid-persistence-type\"),c=new O(\"unsupported-persistence-type\");a:{for(d in Ni)if(Ni[d]==a){var d=!0;break a}d=!1}if(!d||\"string\"!==typeof a)throw b;switch(Df()){case \"ReactNative\":if(\"session\"===a)throw c;break;case \"Node\":if(\"none\"!==a)throw c;break;default:if(!Hf()&&\"none\"!==a)throw c;}},Pi=function(a,b,c,d){this.Ce=a;this.Pd=b;this.fg=c;this.ac=d;this.V={};yi||(yi=new xi);a=yi;try{if(nf()){oi||(oi=new ni(\"firebaseLocalStorageDb\",\n\"firebaseLocalStorage\",\"fbase_key\",\"value\",1));var e=oi}else e=new a.ke.B;this.He=e}catch(f){this.He=new gi,this.ac=!0}try{this.Re=new a.ke.Xd}catch(f){this.Re=new gi}this.Ff=new gi;this.Wd=r(this.Pe,this);this.W={}},Qi,Ri=function(){Qi||(Qi=new Pi(\"firebase\",\":\",!Of(L())&&Cf()?!0:!1,Kf()));return Qi},Si=function(a,b){switch(b){case \"session\":return a.Re;case \"none\":return a.Ff;default:return a.He}};h=Pi.prototype;h.aa=function(a,b){return this.Ce+this.Pd+a.name+(b?this.Pd+b:\"\")};\nh.get=function(a,b){return Si(this,a.B).get(this.aa(a,b))};h.remove=function(a,b){b=this.aa(a,b);\"local\"!=a.B||this.ac||(this.W[b]=null);return Si(this,a.B).remove(b)};h.set=function(a,b,c){var d=this.aa(a,c),e=this,f=Si(this,a.B);return f.set(d,b).then(function(){return f.get(d)}).then(function(b){\"local\"!=a.B||this.ac||(e.W[d]=b)})};h.addListener=function(a,b,c){a=this.aa(a,b);this.ac||(this.W[a]=k.localStorage.getItem(a));jb(this.V)&&this.Vd();this.V[a]||(this.V[a]=[]);this.V[a].push(c)};\nh.removeListener=function(a,b,c){a=this.aa(a,b);this.V[a]&&(Za(this.V[a],function(a){return a==c}),0==this.V[a].length&&delete this.V[a]);jb(this.V)&&this.Qc()};h.Vd=function(){Si(this,\"local\").gb(this.Wd);this.ac||nf()||Ti(this)};var Ti=function(a){Ui(a);a.zd=setInterval(function(){for(var b in a.V){var c=k.localStorage.getItem(b),d=a.W[b];c!=d&&(a.W[b]=c,c=new Yb({type:\"storage\",key:b,target:window,oldValue:d,newValue:c,Gd:!0}),a.Pe(c))}},1E3)},Ui=function(a){a.zd&&(clearInterval(a.zd),a.zd=null)};\nPi.prototype.Qc=function(){Si(this,\"local\").Xa(this.Wd);Ui(this)};\nPi.prototype.Pe=function(a){if(a&&a.wf){var b=a.fa.key;if(0==b.indexOf(this.Ce+this.Pd)&&this.V[b]){\"undefined\"!==typeof a.fa.Gd?Si(this,\"local\").Xa(this.Wd):Ui(this);if(this.fg){var c=k.localStorage.getItem(b),d=a.fa.newValue;if(d!==c)null!==d?k.localStorage.setItem(b,d):k.localStorage.removeItem(b);else if(this.W[b]===d&&\"undefined\"===typeof a.fa.Gd)return}if(\"undefined\"!==typeof a.fa.Gd||this.W[b]!==k.localStorage.getItem(b))this.W[b]=k.localStorage.getItem(b),this.ce(b)}}else x(a,r(this.ce,this))};\nPi.prototype.ce=function(a){this.V[a]&&x(this.V[a],function(a){a()})};var Vi=function(a,b){this.j=a;this.h=b||Ri()},Wi={name:\"authEvent\",B:\"local\"},Xi=function(a){return a.h.get(Wi,a.j).then(function(a){return ig(a)})};Vi.prototype.fb=function(a){this.h.addListener(Wi,this.j,a)};Vi.prototype.$b=function(a){this.h.removeListener(Wi,this.j,a)};var Yi=function(a){this.h=a||Ri()},Zi={name:\"sessionId\",B:\"session\"};Yi.prototype.sc=function(a){return this.h.get(Zi,a)};var $i=function(a,b,c,d,e,f){this.C=a;this.o=b;this.u=c;this.Ja=d||null;this.Qe=b+\":\"+c;this.gg=new Yi;this.oe=new Vi(this.Qe);this.ud=null;this.sa=[];this.Kf=e||500;this.$f=f||2E3;this.Nb=this.Ic=null},aj=function(a){return new O(\"invalid-cordova-configuration\",a)};\n$i.prototype.Pa=function(){return this.Pb?this.Pb:this.Pb=Af().then(function(){if(\"function\"!==typeof M(\"universalLinks.subscribe\",k))throw aj(\"cordova-universal-links-plugin is not installed\");if(\"undefined\"===typeof M(\"BuildInfo.packageName\",k))throw aj(\"cordova-plugin-buildinfo is not installed\");if(\"function\"!==typeof M(\"cordova.plugins.browsertab.openUrl\",k))throw aj(\"cordova-plugin-browsertab is not installed\");if(\"function\"!==typeof M(\"cordova.InAppBrowser.open\",k))throw aj(\"cordova-plugin-inappbrowser is not installed\");\n},function(){throw new O(\"cordova-not-ready\");})};var bj=function(){for(var a=20,b=[];0<a;)b.push(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(Math.floor(62*Math.random()))),a--;return b.join(\"\")},cj=function(a){var b=new Tb;b.update(a);return bb(b.digest())};h=$i.prototype;h.cc=function(a,b){b(new O(\"operation-not-supported-in-this-environment\"));return E()};h.Wb=function(){return F(new O(\"operation-not-supported-in-this-environment\"))};h.Se=function(){return!1};h.Oe=function(){return!0};\nh.se=function(){return!0};\nh.Xb=function(a,b,c){if(this.Ic)return F(new O(\"redirect-operation-pending\"));var d=this,e=k.document,f=null,g=null,l=null,n=null;return this.Ic=Ed(E().then(function(){Mg(b);return dj(d)}).then(function(){return ej(d,a,b,c)}).then(function(){return(new D(function(a,b){g=function(){var b=M(\"cordova.plugins.browsertab.close\",k);a();\"function\"===typeof b&&b();d.Nb&&\"function\"===typeof d.Nb.close&&(d.Nb.close(),d.Nb=null);return!1};d.fb(g);l=function(){f||(f=Be(d.$f).then(function(){b(new O(\"redirect-cancelled-by-user\"))}))};n=\nfunction(){Sf()&&l()};e.addEventListener(\"resume\",l,!1);L().toLowerCase().match(/android/)||e.addEventListener(\"visibilitychange\",n,!1)})).f(function(a){return fj(d).then(function(){throw a;})})}),function(){l&&e.removeEventListener(\"resume\",l,!1);n&&e.removeEventListener(\"visibilitychange\",n,!1);f&&f.cancel();g&&d.$b(g);d.Ic=null})};\nvar ej=function(a,b,c,d){var e=bj(),f=new hg(b,d,null,e,new O(\"no-auth-event\")),g=M(\"BuildInfo.packageName\",k);if(\"string\"!==typeof g)throw new O(\"invalid-cordova-configuration\");var l=M(\"BuildInfo.displayName\",k),n={};if(L().toLowerCase().match(/iphone|ipad|ipod/))n.ibi=g;else if(L().toLowerCase().match(/android/))n.apn=g;else return F(new O(\"operation-not-supported-in-this-environment\"));l&&(n.appDisplayName=l);e=cj(e);n.sessionId=e;var C=Xh(a.C,a.o,a.u,b,c,null,d,a.Ja,n);return a.Pa().then(function(){var b=\na.Qe;return a.gg.h.set(Wi,f.I(),b)}).then(function(){var b=M(\"cordova.plugins.browsertab.isAvailable\",k);if(\"function\"!==typeof b)throw new O(\"invalid-cordova-configuration\");var c=null;b(function(b){if(b){c=M(\"cordova.plugins.browsertab.openUrl\",k);if(\"function\"!==typeof c)throw new O(\"invalid-cordova-configuration\");c(C)}else{c=M(\"cordova.InAppBrowser.open\",k);if(\"function\"!==typeof c)throw new O(\"invalid-cordova-configuration\");b=c;var d=L();d=!(!d.match(/(iPad|iPhone|iPod).*OS 7_\\d/i)&&!d.match(/(iPad|iPhone|iPod).*OS 8_\\d/i));\na.Nb=b(C,d?\"_blank\":\"_system\",\"location=yes\")}})})};$i.prototype.Hb=function(a){for(var b=0;b<this.sa.length;b++)try{this.sa[b](a)}catch(c){}};\nvar dj=function(a){a.ud||(a.ud=a.Pa().then(function(){return new D(function(b){var c=function(d){b(d);a.$b(c);return!1};a.fb(c);gj(a)})}));return a.ud},fj=function(a){var b=null;return Xi(a.oe).then(function(c){b=c;c=a.oe;return c.h.remove(Wi,c.j)}).then(function(){return b})},gj=function(a){var b=M(\"universalLinks.subscribe\",k);if(\"function\"!==typeof b)throw new O(\"invalid-cordova-configuration\");var c=new hg(\"unknown\",null,null,null,new O(\"no-auth-event\")),d=!1,e=Be(a.Kf).then(function(){return fj(a).then(function(){d||\na.Hb(c)})}),f=function(b){d=!0;e&&e.cancel();fj(a).then(function(d){var e=c;if(d&&b&&b.url){e=null;var f=b.url;var g=gf(f),l=ff(g,\"link\"),n=ff(gf(l),\"link\");g=ff(g,\"deep_link_id\");f=ff(gf(g),\"link\")||g||n||l||f;-1!=f.indexOf(\"/__/auth/callback\")&&(e=gf(f),e=Nf(ff(e,\"firebaseError\")||null),e=(e=\"object\"===typeof e?gg(e):null)?new hg(d.la,d.U,null,null,e):new hg(d.la,d.U,f,d.sc()));e=e||c}a.Hb(e)})},g=k.handleOpenURL;k.handleOpenURL=function(a){0==a.toLowerCase().indexOf(M(\"BuildInfo.packageName\",k).toLowerCase()+\n\"://\")&&f({url:a});if(\"function\"===typeof g)try{g(a)}catch(n){console.error(n)}};b(null,f)};$i.prototype.fb=function(a){this.sa.push(a);dj(this).f(function(b){\"auth/invalid-cordova-configuration\"===b.code&&(b=new hg(\"unknown\",null,null,null,new O(\"no-auth-event\")),a(b))})};$i.prototype.$b=function(a){Za(this.sa,function(b){return b==a})};var hj=function(a){this.j=a;this.h=Ri()},ij={name:\"pendingRedirect\",B:\"session\"},jj=function(a){return a.h.set(ij,\"pending\",a.j)},kj=function(a){return a.h.remove(ij,a.j)},lj=function(a){return a.h.get(ij,a.j).then(function(a){return\"pending\"==a})};var pj=function(a,b,c){this.C=a;this.o=b;this.u=c;this.ec=[];this.ob=!1;this.cd=r(this.qd,this);this.Va=new mj(this);this.Id=new nj(this);this.Tb=new hj(this.o+\":\"+this.u);this.Fa={};this.Fa.unknown=this.Va;this.Fa.signInViaRedirect=this.Va;this.Fa.linkViaRedirect=this.Va;this.Fa.reauthViaRedirect=this.Va;this.Fa.signInViaPopup=this.Id;this.Fa.linkViaPopup=this.Id;this.Fa.reauthViaPopup=this.Id;this.X=oj(this.C,this.o,this.u)},oj=function(a,b,c){var d=firebase.SDK_VERSION||null;return zf()?new $i(a,\nb,c,d):new Th(a,b,c,d)};pj.prototype.reset=function(){this.ob=!1;this.X.$b(this.cd);this.X=oj(this.C,this.o,this.u)};pj.prototype.Ob=function(){var a=this;this.ob||(this.ob=!0,this.X.fb(this.cd));var b=this.X;return this.X.Pa().f(function(c){a.X==b&&a.reset();throw c;})};var sj=function(a){a.X.Oe()&&a.Ob().f(function(b){var c=new hg(\"unknown\",null,null,null,new O(\"operation-not-supported-in-this-environment\"));qj(b)&&a.qd(c)});a.X.se()||rj(a.Va)};\npj.prototype.subscribe=function(a){Wa(this.ec,a)||this.ec.push(a);if(!this.ob){var b=this;lj(this.Tb).then(function(a){a?kj(b.Tb).then(function(){b.Ob().f(function(a){var c=new hg(\"unknown\",null,null,null,new O(\"operation-not-supported-in-this-environment\"));qj(a)&&b.qd(c)})}):sj(b)}).f(function(){sj(b)})}};pj.prototype.unsubscribe=function(a){Za(this.ec,function(b){return b==a})};\npj.prototype.qd=function(a){if(!a)throw new O(\"invalid-auth-event\");for(var b=!1,c=0;c<this.ec.length;c++){var d=this.ec[c];if(d.de(a.la,a.U)){(b=this.Fa[a.la])&&b.Ie(a,d);b=!0;break}}rj(this.Va);return b};var tj=new Rf(2E3,1E4),uj=new Rf(3E4,6E4);pj.prototype.getRedirectResult=function(){return this.Va.getRedirectResult()};pj.prototype.Wb=function(a,b,c,d,e){var f=this;return this.X.Wb(a,b,c,function(){f.ob||(f.ob=!0,f.X.fb(f.cd))},function(){f.reset()},d,e)};\nvar qj=function(a){return a&&\"auth/cordova-not-ready\"==a.code?!0:!1};pj.prototype.Xb=function(a,b,c){var d=this,e;return jj(this.Tb).then(function(){return d.X.Xb(a,b,c).f(function(a){if(qj(a))throw new O(\"operation-not-supported-in-this-environment\");e=a;return kj(d.Tb).then(function(){throw e;})}).then(function(){return d.X.Se()?new D(function(){}):kj(d.Tb).then(function(){return d.getRedirectResult()}).then(function(){}).f(function(){})})})};\npj.prototype.cc=function(a,b,c,d){return this.X.cc(c,function(c){a.Za(b,null,c,d)},tj.get())};var vj={},wj=function(a,b,c){var d=b+\":\"+c;vj[d]||(vj[d]=new pj(a,b,c));return vj[d]},mj=function(a){this.h=a;this.xb=null;this.Zb=[];this.Yb=[];this.ub=null;this.Ld=!1};mj.prototype.reset=function(){this.xb=null;this.ub&&(this.ub.cancel(),this.ub=null)};\nmj.prototype.Ie=function(a,b){if(!a)return F(new O(\"invalid-auth-event\"));this.reset();this.Ld=!0;var c=a.la,d=a.U,e=a.getError()&&\"auth/web-storage-unsupported\"==a.getError().code,f=a.getError()&&\"auth/operation-not-supported-in-this-environment\"==a.getError().code;\"unknown\"!=c||e||f?a=a.$?this.Jd(a,b):b.Jb(c,d)?this.Kd(a,b):F(new O(\"invalid-auth-event\")):(xj(this,!1,null,null),a=E());return a};var rj=function(a){a.Ld||(a.Ld=!0,xj(a,!1,null,null))};\nmj.prototype.Jd=function(a){xj(this,!0,null,a.getError());return E()};mj.prototype.Kd=function(a,b){var c=this;b=b.Jb(a.la,a.U);var d=a.Ab,e=a.sc(),f=!!a.la.match(/Redirect$/);return b(d,e).then(function(a){xj(c,f,a,null)}).f(function(a){xj(c,f,null,a)})};\nvar yj=function(a,b){a.xb=function(){return F(b)};if(a.Yb.length)for(var c=0;c<a.Yb.length;c++)a.Yb[c](b)},zj=function(a,b){a.xb=function(){return E(b)};if(a.Zb.length)for(var c=0;c<a.Zb.length;c++)a.Zb[c](b)},xj=function(a,b,c,d){b?d?yj(a,d):zj(a,c):zj(a,{user:null});a.Zb=[];a.Yb=[]};mj.prototype.getRedirectResult=function(){var a=this;return new D(function(b,c){a.xb?a.xb().then(b,c):(a.Zb.push(b),a.Yb.push(c),Aj(a))})};\nvar Aj=function(a){var b=new O(\"timeout\");a.ub&&a.ub.cancel();a.ub=Be(uj.get()).then(function(){a.xb||xj(a,!0,null,b)})},nj=function(a){this.h=a};nj.prototype.Ie=function(a,b){if(!a)return F(new O(\"invalid-auth-event\"));var c=a.la,d=a.U;return a.$?this.Jd(a,b):b.Jb(c,d)?this.Kd(a,b):F(new O(\"invalid-auth-event\"))};nj.prototype.Jd=function(a,b){b.Za(a.la,null,a.getError(),a.U);return E()};\nnj.prototype.Kd=function(a,b){var c=a.U,d=a.la,e=b.Jb(d,c),f=a.Ab;a=a.sc();return e(f,a).then(function(a){b.Za(d,a,null,c)}).f(function(a){b.Za(d,null,a,c)})};var Bj=function(a){this.g=a;this.Ga=this.da=null;this.La=0};Bj.prototype.I=function(){return{apiKey:this.g.o,refreshToken:this.da,accessToken:this.Ga,expirationTime:this.La}};\nvar Dj=function(a,b){var c=b.idToken,d=b.refreshToken;b=Cj(b.expiresIn);a.Ga=c;a.La=b;a.da=d},Cj=function(a){return na()+1E3*parseInt(a,10)},Ej=function(a,b){return ah(a.g,b).then(function(b){a.Ga=b.access_token;a.La=Cj(b.expires_in);a.da=b.refresh_token;return{accessToken:a.Ga,expirationTime:a.La,refreshToken:a.da}}).f(function(b){\"auth/user-token-expired\"==b.code&&(a.da=null);throw b;})};\nBj.prototype.getToken=function(a){a=!!a;return this.Ga&&!this.da?F(new O(\"user-token-expired\")):a||!this.Ga||na()>this.La-3E4?this.da?Ej(this,{grant_type:\"refresh_token\",refresh_token:this.da}):E(null):E({accessToken:this.Ga,expirationTime:this.La,refreshToken:this.da})};var Fj=function(a,b,c,d,e,f){Xf(this,{uid:a,displayName:d||null,photoURL:e||null,email:c||null,phoneNumber:f||null,providerId:b})},Gj=function(a,b){B.call(this,a);for(var c in b)this[c]=b[c]};t(Gj,B);\nvar S=function(a,b,c){this.K=[];this.o=a.apiKey;this.u=a.appName;this.C=a.authDomain||null;a=firebase.SDK_VERSION?Ff(firebase.SDK_VERSION):null;this.g=new R(this.o,null,a);this.qa=new Bj(this.g);Hj(this,b.idToken);Dj(this.qa,b);N(this,\"refreshToken\",this.qa.da);Ij(this,c||{});G.call(this);this.Jc=!1;this.C&&Jf()&&(this.v=wj(this.C,this.o,this.u));this.Pc=[];this.ra=null;this.sb=Jj(this);this.Cb=r(this.rd,this);var d=this;this.ha=null;this.Ee=function(a){d.bc(a.Nf)};this.xd=null};t(S,G);\nS.prototype.bc=function(a){this.ha=a;Vg(this.g,a)};var Kj=function(a,b){a.xd&&sc(a.xd,\"languageCodeChanged\",a.Ee);(a.xd=b)&&kc(b,\"languageCodeChanged\",a.Ee)};S.prototype.rd=function(){this.sb.qb&&(this.sb.stop(),this.sb.start())};\nvar Lj=function(a){try{return firebase.app(a.u).auth()}catch(b){throw new O(\"internal-error\",\"No firebase.auth.Auth instance is available for the Firebase App '\"+a.u+\"'!\");}},Jj=function(a){return new Ei(function(){return a.getIdToken(!0)},function(a){return a&&\"auth/network-request-failed\"==a.code?!0:!1},function(){var b=a.qa.La-na()-3E5;return 0<b?b:0},3E4,96E4,!1)},Mj=function(a){a.Gb||a.sb.qb||(a.sb.start(),sc(a,\"tokenChanged\",a.Cb),kc(a,\"tokenChanged\",a.Cb))},Nj=function(a){sc(a,\"tokenChanged\",\na.Cb);a.sb.stop()},Hj=function(a,b){a.ze=b;N(a,\"_lat\",b)},Oj=function(a,b){Za(a.Pc,function(a){return a==b})},Pj=function(a){for(var b=[],c=0;c<a.Pc.length;c++)b.push(a.Pc[c](a));return Bd(b).then(function(){return a})},Qj=function(a){a.v&&!a.Jc&&(a.Jc=!0,a.v.subscribe(a))},Ij=function(a,b){Xf(a,{uid:b.uid,displayName:b.displayName||null,photoURL:b.photoURL||null,email:b.email||null,emailVerified:b.emailVerified||!1,phoneNumber:b.phoneNumber||null,isAnonymous:b.isAnonymous||!1,providerData:[]})};\nN(S.prototype,\"providerId\",\"firebase\");var Rj=function(){},Sj=function(a){return E().then(function(){if(a.Gb)throw new O(\"app-deleted\");})},Tj=function(a){return Sa(a.providerData,function(a){return a.providerId})},Vj=function(a,b){b&&(Uj(a,b.providerId),a.providerData.push(b))},Uj=function(a,b){Za(a.providerData,function(a){return a.providerId==b})},Wj=function(a,b,c){(\"uid\"!=b||c)&&a.hasOwnProperty(b)&&N(a,b,c)};\nS.prototype.copy=function(a){var b=this;b!=a&&(Xf(this,{uid:a.uid,displayName:a.displayName,photoURL:a.photoURL,email:a.email,emailVerified:a.emailVerified,phoneNumber:a.phoneNumber,isAnonymous:a.isAnonymous,providerData:[]}),x(a.providerData,function(a){Vj(b,a)}),this.qa=a.qa,N(this,\"refreshToken\",this.qa.da))};S.prototype.reload=function(){var a=this;return this.c(Sj(this).then(function(){return Xj(a).then(function(){return Pj(a)}).then(Rj)}))};\nvar Xj=function(a){return a.getIdToken().then(function(b){var c=a.isAnonymous;return Yj(a,b).then(function(){c||Wj(a,\"isAnonymous\",!1);return b})})};S.prototype.getIdToken=function(a){var b=this;return this.c(Sj(this).then(function(){return b.qa.getToken(a)}).then(function(a){if(!a)throw new O(\"internal-error\");a.accessToken!=b.ze&&(Hj(b,a.accessToken),b.Ra());Wj(b,\"refreshToken\",a.refreshToken);return a.accessToken}))};\nS.prototype.getToken=function(a){Uf[\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"]||(Uf[\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"]=!0,\"undefined\"!==typeof console&&\"function\"===typeof console.warn&&console.warn(\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"));return this.getIdToken(a)};\nvar Zj=function(a,b){b.idToken&&a.ze!=b.idToken&&(Dj(a.qa,b),a.Ra(),Hj(a,b.idToken),Wj(a,\"refreshToken\",a.qa.da))};S.prototype.Ra=function(){this.dispatchEvent(new Gj(\"tokenChanged\"))};var Yj=function(a,b){return Q(a.g,Dh,{idToken:b}).then(r(a.Xf,a))};\nS.prototype.Xf=function(a){a=a.users;if(!a||!a.length)throw new O(\"internal-error\");a=a[0];Ij(this,{uid:a.localId,displayName:a.displayName,photoURL:a.photoUrl,email:a.email,emailVerified:!!a.emailVerified,phoneNumber:a.phoneNumber});for(var b=ak(a),c=0;c<b.length;c++)Vj(this,b[c]);Wj(this,\"isAnonymous\",!(this.email&&a.passwordHash)&&!(this.providerData&&this.providerData.length))};\nvar ak=function(a){return(a=a.providerUserInfo)&&a.length?Sa(a,function(a){return new Fj(a.rawId,a.providerId,a.email,a.displayName,a.photoUrl,a.phoneNumber)}):[]};S.prototype.reauthenticateAndRetrieveDataWithCredential=function(a){var b=this,c=null;return this.c(a.Ad(this.g,this.uid).then(function(a){Zj(b,a);c=bk(b,a,\"reauthenticate\");b.ra=null;return b.reload()}).then(function(){return c}),!0)};S.prototype.reauthenticateWithCredential=function(a){return this.reauthenticateAndRetrieveDataWithCredential(a).then(function(){})};\nvar ck=function(a,b){return Xj(a).then(function(){if(Wa(Tj(a),b))return Pj(a).then(function(){throw new O(\"provider-already-linked\");})})};S.prototype.linkAndRetrieveDataWithCredential=function(a){var b=this,c=null;return this.c(ck(this,a.providerId).then(function(){return b.getIdToken()}).then(function(c){return a.Ec(b.g,c)}).then(function(a){c=bk(b,a,\"link\");return dk(b,a)}).then(function(){return c}))};S.prototype.linkWithCredential=function(a){return this.linkAndRetrieveDataWithCredential(a).then(function(a){return a.user})};\nS.prototype.linkWithPhoneNumber=function(a,b){var c=this;return this.c(ck(this,\"phone\").then(function(){return Ci(Lj(c),a,b,r(c.linkAndRetrieveDataWithCredential,c))}))};S.prototype.reauthenticateWithPhoneNumber=function(a,b){var c=this;return this.c(E().then(function(){return Ci(Lj(c),a,b,r(c.reauthenticateAndRetrieveDataWithCredential,c))}),!0)};var bk=function(a,b,c){var d=Lg(b);b=Mi(b);return Yf({user:a,credential:d,additionalUserInfo:b,operationType:c})},dk=function(a,b){Zj(a,b);return a.reload().then(function(){return a})};\nh=S.prototype;h.updateEmail=function(a){var b=this;return this.c(this.getIdToken().then(function(c){return b.g.updateEmail(c,a)}).then(function(a){Zj(b,a);return b.reload()}))};h.updatePhoneNumber=function(a){var b=this;return this.c(this.getIdToken().then(function(c){return a.Ec(b.g,c)}).then(function(a){Zj(b,a);return b.reload()}))};h.updatePassword=function(a){var b=this;return this.c(this.getIdToken().then(function(c){return b.g.updatePassword(c,a)}).then(function(a){Zj(b,a);return b.reload()}))};\nh.updateProfile=function(a){if(void 0===a.displayName&&void 0===a.photoURL)return Sj(this);var b=this;return this.c(this.getIdToken().then(function(c){return b.g.updateProfile(c,{displayName:a.displayName,photoUrl:a.photoURL})}).then(function(a){Zj(b,a);Wj(b,\"displayName\",a.displayName||null);Wj(b,\"photoURL\",a.photoUrl||null);x(b.providerData,function(a){\"password\"===a.providerId&&(N(a,\"displayName\",b.displayName),N(a,\"photoURL\",b.photoURL))});return Pj(b)}).then(Rj))};\nh.unlink=function(a){var b=this;return this.c(Xj(this).then(function(c){return Wa(Tj(b),a)?rh(b.g,c,[a]).then(function(a){var c={};x(a.providerUserInfo||[],function(a){c[a.providerId]=!0});x(Tj(b),function(a){c[a]||Uj(b,a)});c[Ig.PROVIDER_ID]||N(b,\"phoneNumber\",null);return Pj(b)}):Pj(b).then(function(){throw new O(\"no-such-provider\");})}))};\nh[\"delete\"]=function(){var a=this;return this.c(this.getIdToken().then(function(b){return Q(a.g,Ch,{idToken:b})}).then(function(){a.dispatchEvent(new Gj(\"userDeleted\"))})).then(function(){for(var b=0;b<a.K.length;b++)a.K[b].cancel(\"app-deleted\");Kj(a,null);a.K=[];a.Gb=!0;Nj(a);N(a,\"refreshToken\",null);a.v&&a.v.unsubscribe(a)})};\nh.de=function(a,b){return\"linkViaPopup\"==a&&(this.ka||null)==b&&this.ja||\"reauthViaPopup\"==a&&(this.ka||null)==b&&this.ja||\"linkViaRedirect\"==a&&(this.Ea||null)==b||\"reauthViaRedirect\"==a&&(this.Ea||null)==b?!0:!1};h.Za=function(a,b,c,d){\"linkViaPopup\"!=a&&\"reauthViaPopup\"!=a||d!=(this.ka||null)||(c&&this.Ta?this.Ta(c):b&&!c&&this.ja&&this.ja(b),this.M&&(this.M.cancel(),this.M=null),delete this.ja,delete this.Ta)};\nh.Jb=function(a,b){return\"linkViaPopup\"==a&&b==(this.ka||null)?r(this.me,this):\"reauthViaPopup\"==a&&b==(this.ka||null)?r(this.ne,this):\"linkViaRedirect\"==a&&(this.Ea||null)==b?r(this.me,this):\"reauthViaRedirect\"==a&&(this.Ea||null)==b?r(this.ne,this):null};h.rc=function(){return Gf(this.uid+\":::\")};h.linkWithPopup=function(a){var b=this;return ek(this,\"linkViaPopup\",a,function(){return ck(b,a.providerId).then(function(){return Pj(b)})},!1)};\nh.reauthenticateWithPopup=function(a){return ek(this,\"reauthViaPopup\",a,function(){return E()},!0)};\nvar ek=function(a,b,c,d,e){if(!Jf())return F(new O(\"operation-not-supported-in-this-environment\"));if(a.ra&&!e)return F(a.ra);var f=eg(c.providerId),g=a.rc(),l=null;(!Kf()||Cf())&&a.C&&c.isOAuthProvider&&(l=Xh(a.C,a.o,a.u,b,c,null,g,firebase.SDK_VERSION||null));var n=vf(l,f&&f.Vb,f&&f.Ub);d=d().then(function(){fk(a);if(!e)return a.getIdToken().then(function(){})}).then(function(){return a.v.Wb(n,b,c,g,!!l)}).then(function(){return new D(function(c,d){a.Za(b,null,new O(\"cancelled-popup-request\"),a.ka||\nnull);a.ja=c;a.Ta=d;a.ka=g;a.M=a.v.cc(a,b,n,g)})}).then(function(a){n&&uf(n);return a?Yf(a):null}).f(function(a){n&&uf(n);throw a;});return a.c(d,e)};S.prototype.linkWithRedirect=function(a){var b=this;return gk(this,\"linkViaRedirect\",a,function(){return ck(b,a.providerId)},!1)};S.prototype.reauthenticateWithRedirect=function(a){return gk(this,\"reauthViaRedirect\",a,function(){return E()},!0)};\nvar gk=function(a,b,c,d,e){if(!Jf())return F(new O(\"operation-not-supported-in-this-environment\"));if(a.ra&&!e)return F(a.ra);var f=null,g=a.rc();d=d().then(function(){fk(a);if(!e)return a.getIdToken().then(function(){})}).then(function(){a.Ea=g;return Pj(a)}).then(function(b){a.Wa&&(b=a.Wa,b=b.h.set(hk,a.I(),b.j));return b}).then(function(){return a.v.Xb(b,c,g)}).f(function(b){f=b;if(a.Wa)return ik(a.Wa);throw f;}).then(function(){if(f)throw f;});return a.c(d,e)},fk=function(a){if(!a.v||!a.Jc){if(a.v&&\n!a.Jc)throw new O(\"internal-error\");throw new O(\"auth-domain-config-required\");}};S.prototype.me=function(a,b){var c=this;this.M&&(this.M.cancel(),this.M=null);var d=null,e=this.getIdToken().then(function(d){return pg(c.g,{requestUri:a,sessionId:b,idToken:d})}).then(function(a){d=bk(c,a,\"link\");return dk(c,a)}).then(function(){return d});return this.c(e)};\nS.prototype.ne=function(a,b){var c=this;this.M&&(this.M.cancel(),this.M=null);var d=null,e=E().then(function(){return lg(qg(c.g,{requestUri:a,sessionId:b}),c.uid)}).then(function(a){d=bk(c,a,\"reauthenticate\");Zj(c,a);c.ra=null;return c.reload()}).then(function(){return d});return this.c(e,!0)};\nS.prototype.sendEmailVerification=function(a){var b=this,c=null;return this.c(this.getIdToken().then(function(b){c=b;return\"undefined\"===typeof a||jb(a)?{}:Ai(new zi(a))}).then(function(a){return b.g.sendEmailVerification(c,a)}).then(function(a){if(b.email!=a)return b.reload()}).then(function(){}))};S.prototype.c=function(a,b){var c=this,d=jk(this,a,b);this.K.push(d);Ed(d,function(){Ya(c.K,d)});return d};\nvar jk=function(a,b,c){return a.ra&&!c?(b.cancel(),F(a.ra)):b.f(function(b){!b||\"auth/user-disabled\"!=b.code&&\"auth/user-token-expired\"!=b.code||(a.ra||a.dispatchEvent(new Gj(\"userInvalidated\")),a.ra=b);throw b;})};S.prototype.toJSON=function(){return this.I()};\nS.prototype.I=function(){var a={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,providerData:[],apiKey:this.o,appName:this.u,authDomain:this.C,stsTokenManager:this.qa.I(),redirectEventId:this.Ea||null};x(this.providerData,function(b){a.providerData.push(Zf(b))});return a};\nvar kk=function(a){if(!a.apiKey)return null;var b={apiKey:a.apiKey,authDomain:a.authDomain,appName:a.appName},c={};if(a.stsTokenManager&&a.stsTokenManager.accessToken&&a.stsTokenManager.expirationTime)c.idToken=a.stsTokenManager.accessToken,c.refreshToken=a.stsTokenManager.refreshToken||null,c.expiresIn=(a.stsTokenManager.expirationTime-na())/1E3;else return null;var d=new S(b,c,a);a.providerData&&x(a.providerData,function(a){a&&Vj(d,Yf(a))});a.redirectEventId&&(d.Ea=a.redirectEventId);return d},\nlk=function(a,b,c){var d=new S(a,b);c&&(d.Wa=c);return d.reload().then(function(){return d})};var mk=function(a){this.j=a;this.h=Ri()},hk={name:\"redirectUser\",B:\"session\"},ik=function(a){return a.h.remove(hk,a.j)},nk=function(a,b){return a.h.get(hk,a.j).then(function(a){a&&b&&(a.authDomain=b);return kk(a||{})})};var pk=function(a,b){this.j=a;this.h=b||Ri();this.N=null;this.Dd=this.vd();this.h.addListener(ok(\"local\"),this.j,r(this.mg,this))};pk.prototype.mg=function(){var a=this,b=ok(\"local\");qk(this,function(){return E().then(function(){return a.N&&\"local\"!=a.N.B?a.h.get(b,a.j):null}).then(function(c){if(c)return rk(a,\"local\").then(function(){a.N=b})})})};var rk=function(a,b){var c=[],d;for(d in Ni)Ni[d]!==b&&c.push(a.h.remove(ok(Ni[d]),a.j));c.push(a.h.remove(sk,a.j));return Ad(c)};\npk.prototype.vd=function(){var a=this,b=ok(\"local\"),c=ok(\"session\"),d=ok(\"none\");return this.h.get(c,this.j).then(function(e){return e?c:a.h.get(d,a.j).then(function(c){return c?d:a.h.get(b,a.j).then(function(c){return c?b:a.h.get(sk,a.j).then(function(a){return a?ok(a):b})})})}).then(function(b){a.N=b;return rk(a,b.B)}).f(function(){a.N||(a.N=b)})};var sk={name:\"persistence\",B:\"session\"},ok=function(a){return{name:\"authUser\",B:a}};\npk.prototype.Sd=function(a){var b=null,c=this;Oi(a);return qk(this,function(){return a!=c.N.B?c.h.get(c.N,c.j).then(function(d){b=d;return rk(c,a)}).then(function(){c.N=ok(a);if(b)return c.h.set(c.N,b,c.j)}):E()})};\nvar tk=function(a){return qk(a,function(){return a.h.set(sk,a.N.B,a.j)})},uk=function(a,b){return qk(a,function(){return a.h.set(a.N,b.I(),a.j)})},vk=function(a){return qk(a,function(){return a.h.remove(a.N,a.j)})},wk=function(a,b){return qk(a,function(){return a.h.get(a.N,a.j).then(function(a){a&&b&&(a.authDomain=b);return kk(a||{})})})},qk=function(a,b){a.Dd=a.Dd.then(b,b);return a.Dd};var T=function(a){this.Ba=!1;N(this,\"app\",a);if(this.i().options&&this.i().options.apiKey)a=firebase.SDK_VERSION?Ff(firebase.SDK_VERSION):null,this.g=new R(this.i().options&&this.i().options.apiKey,null,a);else throw new O(\"invalid-api-key\");this.K=[];this.Ha=[];this.Bb=[];this.Tf=firebase.INTERNAL.createSubscribe(r(this.Hf,this));this.jc=void 0;this.Vf=firebase.INTERNAL.createSubscribe(r(this.Jf,this));xk(this,null);a=this.i().options.apiKey;var b=this.i().name;this.ma=new pk(a+\":\"+b);a=this.i().options.apiKey;\nb=this.i().name;this.vb=new mk(a+\":\"+b);this.mc=this.c(yk(this));this.xa=this.c(zk(this));this.Bc=!1;this.pd=r(this.ng,this);this.Ve=r(this.lb,this);this.Cb=r(this.rd,this);this.Te=r(this.Cf,this);this.Ue=r(this.Df,this);Ak(this);this.INTERNAL={};this.INTERNAL[\"delete\"]=r(this[\"delete\"],this);this.Ma=0;G.call(this);Bk(this)};t(T,G);var Ck=function(a){B.call(this,\"languageCodeChanged\");this.Nf=a};t(Ck,B);T.prototype.Sd=function(a){a=this.ma.Sd(a);return this.c(a)};\nT.prototype.bc=function(a){this.ha===a||this.Ba||(this.ha=a,Vg(this.g,this.ha),this.dispatchEvent(new Ck(this.ha)))};var Bk=function(a){Object.defineProperty(a,\"lc\",{get:function(){return this.ha},set:function(a){this.bc(a)},enumerable:!1});a.ha=null};T.prototype.toJSON=function(){return{apiKey:this.i().options.apiKey,authDomain:this.i().options.authDomain,appName:this.i().name,currentUser:U(this)&&U(this).I()}};\nvar Dk=function(a){return a.pf||F(new O(\"auth-domain-config-required\"))},Ak=function(a){var b=a.i().options.authDomain,c=a.i().options.apiKey;b&&Jf()&&(a.pf=a.mc.then(function(){if(!a.Ba){a.v=wj(b,c,a.i().name);a.v.subscribe(a);U(a)&&Qj(U(a));if(a.wb){Qj(a.wb);var d=a.wb;d.bc(a.ha);Kj(d,a);a.wb=null}return a.v}}))};h=T.prototype;h.de=function(a,b){switch(a){case \"unknown\":case \"signInViaRedirect\":return!0;case \"signInViaPopup\":return this.ka==b&&!!this.ja;default:return!1}};\nh.Za=function(a,b,c,d){\"signInViaPopup\"==a&&this.ka==d&&(c&&this.Ta?this.Ta(c):b&&!c&&this.ja&&this.ja(b),this.M&&(this.M.cancel(),this.M=null),delete this.ja,delete this.Ta)};h.Jb=function(a,b){return\"signInViaRedirect\"==a||\"signInViaPopup\"==a&&this.ka==b&&this.ja?r(this.rf,this):null};\nh.rf=function(a,b){var c=this;a={requestUri:a,sessionId:b};this.M&&(this.M.cancel(),this.M=null);var d=null,e=null,f=ng(c.g,a).then(function(a){d=Lg(a);e=Mi(a);return a});a=c.mc.then(function(){return f}).then(function(a){return Ek(c,a)}).then(function(){return Yf({user:U(c),credential:d,additionalUserInfo:e,operationType:\"signIn\"})});return this.c(a)};h.rc=function(){return Gf()};\nh.signInWithPopup=function(a){if(!Jf())return F(new O(\"operation-not-supported-in-this-environment\"));var b=this,c=eg(a.providerId),d=this.rc(),e=null;(!Kf()||Cf())&&this.i().options.authDomain&&a.isOAuthProvider&&(e=Xh(this.i().options.authDomain,this.i().options.apiKey,this.i().name,\"signInViaPopup\",a,null,d,firebase.SDK_VERSION||null));var f=vf(e,c&&c.Vb,c&&c.Ub);c=Dk(this).then(function(b){return b.Wb(f,\"signInViaPopup\",a,d,!!e)}).then(function(){return new D(function(a,c){b.Za(\"signInViaPopup\",\nnull,new O(\"cancelled-popup-request\"),b.ka);b.ja=a;b.Ta=c;b.ka=d;b.M=b.v.cc(b,\"signInViaPopup\",f,d)})}).then(function(a){f&&uf(f);return a?Yf(a):null}).f(function(a){f&&uf(f);throw a;});return this.c(c)};h.signInWithRedirect=function(a){if(!Jf())return F(new O(\"operation-not-supported-in-this-environment\"));var b=this,c=Dk(this).then(function(){return tk(b.ma)}).then(function(){return b.v.Xb(\"signInViaRedirect\",a)});return this.c(c)};\nh.getRedirectResult=function(){if(!Jf())return F(new O(\"operation-not-supported-in-this-environment\"));var a=this,b=Dk(this).then(function(){return a.v.getRedirectResult()}).then(function(a){return a?Yf(a):null});return this.c(b)};\nvar Ek=function(a,b){var c={};c.apiKey=a.i().options.apiKey;c.authDomain=a.i().options.authDomain;c.appName=a.i().name;return a.mc.then(function(){return lk(c,b,a.vb)}).then(function(b){if(U(a)&&b.uid==U(a).uid)return U(a).copy(b),a.lb(b);xk(a,b);Qj(b);return a.lb(b)}).then(function(){a.Ra()})},xk=function(a,b){U(a)&&(Oj(U(a),a.Ve),sc(U(a),\"tokenChanged\",a.Cb),sc(U(a),\"userDeleted\",a.Te),sc(U(a),\"userInvalidated\",a.Ue),Nj(U(a)));b&&(b.Pc.push(a.Ve),kc(b,\"tokenChanged\",a.Cb),kc(b,\"userDeleted\",a.Te),\nkc(b,\"userInvalidated\",a.Ue),0<a.Ma&&Mj(b));N(a,\"currentUser\",b);b&&(b.bc(a.ha),Kj(b,a))};T.prototype.signOut=function(){var a=this,b=this.xa.then(function(){if(!U(a))return E();xk(a,null);return vk(a.ma).then(function(){a.Ra()})});return this.c(b)};\nvar Fk=function(a){var b=a.i().options.authDomain;b=nk(a.vb,b).then(function(b){if(a.wb=b)b.Wa=a.vb;return ik(a.vb)});return a.c(b)},yk=function(a){var b=a.i().options.authDomain,c=Fk(a).then(function(){return wk(a.ma,b)}).then(function(b){return b?(b.Wa=a.vb,a.wb&&(a.wb.Ea||null)==(b.Ea||null)?b:b.reload().then(function(){return uk(a.ma,b).then(function(){return b})}).f(function(c){return\"auth/network-request-failed\"==c.code?b:vk(a.ma)})):null}).then(function(b){xk(a,b||null)});return a.c(c)},zk=\nfunction(a){return a.mc.then(function(){return a.getRedirectResult()}).f(function(){}).then(function(){if(!a.Ba)return a.pd()}).f(function(){}).then(function(){if(!a.Ba){a.Bc=!0;var b=a.ma;b.h.addListener(ok(\"local\"),b.j,a.pd)}})};h=T.prototype;\nh.ng=function(){var a=this,b=this.i().options.authDomain;return wk(this.ma,b).then(function(b){if(!a.Ba){var c;if(c=U(a)&&b){c=U(a).uid;var e=b.uid;c=void 0===c||null===c||\"\"===c||void 0===e||null===e||\"\"===e?!1:c==e}if(c)return U(a).copy(b),U(a).getIdToken();if(U(a)||b)xk(a,b),b&&(Qj(b),b.Wa=a.vb),a.v&&a.v.subscribe(a),a.Ra()}})};h.lb=function(a){return uk(this.ma,a)};h.rd=function(){this.Ra();this.lb(U(this))};h.Cf=function(){this.signOut()};h.Df=function(){this.signOut()};\nvar Gk=function(a,b){var c=null,d=null;return a.c(b.then(function(b){c=Lg(b);d=Mi(b);return Ek(a,b)}).then(function(){return Yf({user:U(a),credential:c,additionalUserInfo:d,operationType:\"signIn\"})}))};h=T.prototype;h.Hf=function(a){var b=this;this.addAuthTokenListener(function(){a.next(U(b))})};h.Jf=function(a){var b=this;Hk(this,function(){a.next(U(b))})};\nh.onIdTokenChanged=function(a,b,c){var d=this;this.Bc&&firebase.Promise.resolve().then(function(){p(a)?a(U(d)):p(a.next)&&a.next(U(d))});return this.Tf(a,b,c)};h.onAuthStateChanged=function(a,b,c){var d=this;this.Bc&&firebase.Promise.resolve().then(function(){d.jc=d.getUid();p(a)?a(U(d)):p(a.next)&&a.next(U(d))});return this.Vf(a,b,c)};h.xf=function(a){var b=this,c=this.xa.then(function(){return U(b)?U(b).getIdToken(a).then(function(a){return{accessToken:a}}):null});return this.c(c)};\nh.signInWithCustomToken=function(a){var b=this;return this.xa.then(function(){return Gk(b,Q(b.g,Fh,{token:a}))}).then(function(a){a=a.user;Wj(a,\"isAnonymous\",!1);return b.lb(a)}).then(function(){return U(b)})};h.signInWithEmailAndPassword=function(a,b){var c=this;return this.xa.then(function(){return Gk(c,Q(c.g,Bg,{email:a,password:b}))}).then(function(a){return a.user})};h.createUserWithEmailAndPassword=function(a,b){var c=this;return this.xa.then(function(){return Gk(c,Q(c.g,Bh,{email:a,password:b}))}).then(function(a){return a.user})};\nh.signInWithCredential=function(a){return this.signInAndRetrieveDataWithCredential(a).then(function(a){return a.user})};h.signInAndRetrieveDataWithCredential=function(a){var b=this;return this.xa.then(function(){return Gk(b,a.Kb(b.g))})};h.signInAnonymously=function(){var a=this;return this.xa.then(function(){var b=U(a);return b&&b.isAnonymous?b:Gk(a,a.g.signInAnonymously()).then(function(b){b=b.user;Wj(b,\"isAnonymous\",!0);return a.lb(b)}).then(function(){return U(a)})})};h.i=function(){return this.app};\nvar U=function(a){return a.currentUser};T.prototype.getUid=function(){return U(this)&&U(this).uid||null};var Ik=function(a){return U(a)&&U(a)._lat||null};h=T.prototype;h.Ra=function(){if(this.Bc){for(var a=0;a<this.Ha.length;a++)if(this.Ha[a])this.Ha[a](Ik(this));if(this.jc!==this.getUid()&&this.Bb.length)for(this.jc=this.getUid(),a=0;a<this.Bb.length;a++)if(this.Bb[a])this.Bb[a](Ik(this))}};h.df=function(a){this.addAuthTokenListener(a);this.Ma++;0<this.Ma&&U(this)&&Mj(U(this))};\nh.ag=function(a){var b=this;x(this.Ha,function(c){c==a&&b.Ma--});0>this.Ma&&(this.Ma=0);0==this.Ma&&U(this)&&Nj(U(this));this.removeAuthTokenListener(a)};h.addAuthTokenListener=function(a){var b=this;this.Ha.push(a);this.c(this.xa.then(function(){b.Ba||Wa(b.Ha,a)&&a(Ik(b))}))};h.removeAuthTokenListener=function(a){Za(this.Ha,function(b){return b==a})};var Hk=function(a,b){a.Bb.push(b);a.c(a.xa.then(function(){!a.Ba&&Wa(a.Bb,b)&&a.jc!==a.getUid()&&(a.jc=a.getUid(),b(Ik(a)))}))};h=T.prototype;\nh[\"delete\"]=function(){this.Ba=!0;for(var a=0;a<this.K.length;a++)this.K[a].cancel(\"app-deleted\");this.K=[];this.ma&&(a=this.ma,a.h.removeListener(ok(\"local\"),a.j,this.pd));this.v&&this.v.unsubscribe(this);return firebase.Promise.resolve()};h.c=function(a){var b=this;this.K.push(a);Ed(a,function(){Ya(b.K,a)});return a};h.fetchProvidersForEmail=function(a){return this.c(fh(this.g,a))};h.verifyPasswordResetCode=function(a){return this.checkActionCode(a).then(function(a){return a.data.email})};\nh.confirmPasswordReset=function(a,b){return this.c(this.g.confirmPasswordReset(a,b).then(function(){}))};h.checkActionCode=function(a){return this.c(this.g.checkActionCode(a).then(function(a){return new Di(a)}))};h.applyActionCode=function(a){return this.c(this.g.applyActionCode(a).then(function(){}))};h.sendPasswordResetEmail=function(a,b){var c=this;return this.c(E().then(function(){return\"undefined\"===typeof b||jb(b)?{}:Ai(new zi(b))}).then(function(b){return c.g.sendPasswordResetEmail(a,b)}).then(function(){}))};\nh.signInWithPhoneNumber=function(a,b){return this.c(Ci(this,a,b,r(this.signInAndRetrieveDataWithCredential,this)))};var Jk=\"First Second Third Fourth Fifth Sixth Seventh Eighth Ninth\".split(\" \"),V=function(a,b){return{name:a||\"\",R:\"a valid string\",optional:!!b,S:m}},Kk=function(){return{name:\"opt_forceRefresh\",R:\"a boolean\",optional:!0,S:ca}},W=function(a,b){return{name:a||\"\",R:\"a valid object\",optional:!!b,S:q}},Lk=function(a,b){return{name:a||\"\",R:\"a function\",optional:!!b,S:p}},Mk=function(a,b){return{name:a||\"\",R:\"null\",optional:!!b,S:ha}},Nk=function(){return{name:\"\",R:\"an HTML element\",optional:!1,S:function(a){return!!(a&&\na instanceof Element)}}},Ok=function(){return{name:\"auth\",R:\"an instance of Firebase Auth\",optional:!0,S:function(a){return!!(a&&a instanceof T)}}},Pk=function(){return{name:\"app\",R:\"an instance of Firebase App\",optional:!0,S:function(a){return!!(a&&a instanceof firebase.app.App)}}},Qk=function(a){return{name:a?a+\"Credential\":\"credential\",R:a?\"a valid \"+a+\" credential\":\"a valid credential\",optional:!1,S:function(b){if(!b)return!1;var c=!a||b.providerId===a;return!(!b.Kb||!c)}}},Rk=function(){return{name:\"authProvider\",\nR:\"a valid Auth provider\",optional:!1,S:function(a){return!!(a&&a.providerId&&a.hasOwnProperty&&a.hasOwnProperty(\"isOAuthProvider\"))}}},Sk=function(){return{name:\"applicationVerifier\",R:\"an implementation of firebase.auth.ApplicationVerifier\",optional:!1,S:function(a){return!!(a&&m(a.type)&&p(a.verify))}}},X=function(a,b,c,d){return{name:c||\"\",R:a.R+\" or \"+b.R,optional:!!d,S:function(c){return a.S(c)||b.S(c)}}};var Y=function(a,b){for(var c in b){var d=b[c].name;a[d]=Tk(d,a[c],b[c].a)}},Z=function(a,b,c,d){a[b]=Tk(b,c,d)},Tk=function(a,b,c){if(!c)return b;var d=Uk(a);a=function(){var a=Array.prototype.slice.call(arguments);a:{var e=Array.prototype.slice.call(a);var l=0;for(var n=!1,C=0;C<c.length;C++)if(c[C].optional)n=!0;else{if(n)throw new O(\"internal-error\",\"Argument validator encountered a required argument after an optional argument.\");l++}n=c.length;if(e.length<l||n<e.length)e=\"Expected \"+(l==n?1==\nl?\"1 argument\":l+\" arguments\":l+\"-\"+n+\" arguments\")+\" but got \"+e.length+\".\";else{for(l=0;l<e.length;l++)if(n=c[l].optional&&void 0===e[l],!c[l].S(e[l])&&!n){e=c[l];if(0>l||l>=Jk.length)throw new O(\"internal-error\",\"Argument validator received an unsupported number of arguments.\");e=Jk[l]+\" argument \"+(e.name?'\"'+e.name+'\" ':\"\")+\"must be \"+e.R+\".\";break a}e=null}}if(e)throw new O(\"argument-error\",d+\" failed: \"+e);return b.apply(this,a)};for(var e in b)a[e]=b[e];for(e in b.prototype)a.prototype[e]=\nb.prototype[e];return a},Uk=function(a){a=a.split(\".\");return a[a.length-1]};Y(T.prototype,{applyActionCode:{name:\"applyActionCode\",a:[V(\"code\")]},checkActionCode:{name:\"checkActionCode\",a:[V(\"code\")]},confirmPasswordReset:{name:\"confirmPasswordReset\",a:[V(\"code\"),V(\"newPassword\")]},createUserWithEmailAndPassword:{name:\"createUserWithEmailAndPassword\",a:[V(\"email\"),V(\"password\")]},fetchProvidersForEmail:{name:\"fetchProvidersForEmail\",a:[V(\"email\")]},getRedirectResult:{name:\"getRedirectResult\",a:[]},onAuthStateChanged:{name:\"onAuthStateChanged\",a:[X(W(),Lk(),\"nextOrObserver\"),\nLk(\"opt_error\",!0),Lk(\"opt_completed\",!0)]},onIdTokenChanged:{name:\"onIdTokenChanged\",a:[X(W(),Lk(),\"nextOrObserver\"),Lk(\"opt_error\",!0),Lk(\"opt_completed\",!0)]},sendPasswordResetEmail:{name:\"sendPasswordResetEmail\",a:[V(\"email\"),X(W(\"opt_actionCodeSettings\",!0),Mk(null,!0),\"opt_actionCodeSettings\",!0)]},Sd:{name:\"setPersistence\",a:[V(\"persistence\")]},signInAndRetrieveDataWithCredential:{name:\"signInAndRetrieveDataWithCredential\",a:[Qk()]},signInAnonymously:{name:\"signInAnonymously\",a:[]},signInWithCredential:{name:\"signInWithCredential\",\na:[Qk()]},signInWithCustomToken:{name:\"signInWithCustomToken\",a:[V(\"token\")]},signInWithEmailAndPassword:{name:\"signInWithEmailAndPassword\",a:[V(\"email\"),V(\"password\")]},signInWithPhoneNumber:{name:\"signInWithPhoneNumber\",a:[V(\"phoneNumber\"),Sk()]},signInWithPopup:{name:\"signInWithPopup\",a:[Rk()]},signInWithRedirect:{name:\"signInWithRedirect\",a:[Rk()]},signOut:{name:\"signOut\",a:[]},toJSON:{name:\"toJSON\",a:[V(null,!0)]},verifyPasswordResetCode:{name:\"verifyPasswordResetCode\",a:[V(\"code\")]}});\nT.Persistence=Ni;T.Persistence.LOCAL=\"local\";T.Persistence.SESSION=\"session\";T.Persistence.NONE=\"none\";\nY(S.prototype,{\"delete\":{name:\"delete\",a:[]},getIdToken:{name:\"getIdToken\",a:[Kk()]},getToken:{name:\"getToken\",a:[Kk()]},linkAndRetrieveDataWithCredential:{name:\"linkAndRetrieveDataWithCredential\",a:[Qk()]},linkWithCredential:{name:\"linkWithCredential\",a:[Qk()]},linkWithPhoneNumber:{name:\"linkWithPhoneNumber\",a:[V(\"phoneNumber\"),Sk()]},linkWithPopup:{name:\"linkWithPopup\",a:[Rk()]},linkWithRedirect:{name:\"linkWithRedirect\",a:[Rk()]},reauthenticateAndRetrieveDataWithCredential:{name:\"reauthenticateAndRetrieveDataWithCredential\",\na:[Qk()]},reauthenticateWithCredential:{name:\"reauthenticateWithCredential\",a:[Qk()]},reauthenticateWithPhoneNumber:{name:\"reauthenticateWithPhoneNumber\",a:[V(\"phoneNumber\"),Sk()]},reauthenticateWithPopup:{name:\"reauthenticateWithPopup\",a:[Rk()]},reauthenticateWithRedirect:{name:\"reauthenticateWithRedirect\",a:[Rk()]},reload:{name:\"reload\",a:[]},sendEmailVerification:{name:\"sendEmailVerification\",a:[X(W(\"opt_actionCodeSettings\",!0),Mk(null,!0),\"opt_actionCodeSettings\",!0)]},toJSON:{name:\"toJSON\",a:[V(null,\n!0)]},unlink:{name:\"unlink\",a:[V(\"provider\")]},updateEmail:{name:\"updateEmail\",a:[V(\"email\")]},updatePassword:{name:\"updatePassword\",a:[V(\"password\")]},updatePhoneNumber:{name:\"updatePhoneNumber\",a:[Qk(\"phone\")]},updateProfile:{name:\"updateProfile\",a:[W(\"profile\")]}});Y(D.prototype,{f:{name:\"catch\"},then:{name:\"then\"}});Y(Bi.prototype,{confirm:{name:\"confirm\",a:[V(\"verificationCode\")]}});Z(Dg,\"credential\",function(a,b){return new Ag(a,b)},[V(\"email\"),V(\"password\")]);\nY(sg.prototype,{addScope:{name:\"addScope\",a:[V(\"scope\")]},setCustomParameters:{name:\"setCustomParameters\",a:[W(\"customOAuthParameters\")]}});Z(sg,\"credential\",tg,[X(V(),W(),\"token\")]);Y(ug.prototype,{addScope:{name:\"addScope\",a:[V(\"scope\")]},setCustomParameters:{name:\"setCustomParameters\",a:[W(\"customOAuthParameters\")]}});Z(ug,\"credential\",vg,[X(V(),W(),\"token\")]);Y(wg.prototype,{addScope:{name:\"addScope\",a:[V(\"scope\")]},setCustomParameters:{name:\"setCustomParameters\",a:[W(\"customOAuthParameters\")]}});\nZ(wg,\"credential\",xg,[X(V(),X(W(),Mk()),\"idToken\"),X(V(),Mk(),\"accessToken\",!0)]);Y(yg.prototype,{setCustomParameters:{name:\"setCustomParameters\",a:[W(\"customOAuthParameters\")]}});Z(yg,\"credential\",zg,[X(V(),W(),\"token\"),V(\"secret\",!0)]);Y(P.prototype,{addScope:{name:\"addScope\",a:[V(\"scope\")]},credential:{name:\"credential\",a:[X(V(),Mk(),\"idToken\",!0),X(V(),Mk(),\"accessToken\",!0)]},setCustomParameters:{name:\"setCustomParameters\",a:[W(\"customOAuthParameters\")]}});\nZ(Ig,\"credential\",Kg,[V(\"verificationId\"),V(\"verificationCode\")]);Y(Ig.prototype,{verifyPhoneNumber:{name:\"verifyPhoneNumber\",a:[V(\"phoneNumber\"),Sk()]}});Y(O.prototype,{toJSON:{name:\"toJSON\",a:[V(null,!0)]}});Y(Ng.prototype,{toJSON:{name:\"toJSON\",a:[V(null,!0)]}});Y(jg.prototype,{toJSON:{name:\"toJSON\",a:[V(null,!0)]}});Y(Yh.prototype,{clear:{name:\"clear\",a:[]},render:{name:\"render\",a:[]},verify:{name:\"verify\",a:[]}});\n(function(){if(\"undefined\"!==typeof firebase&&firebase.INTERNAL&&firebase.INTERNAL.registerService){var a={Auth:T,Error:O};Z(a,\"EmailAuthProvider\",Dg,[]);Z(a,\"FacebookAuthProvider\",sg,[]);Z(a,\"GithubAuthProvider\",ug,[]);Z(a,\"GoogleAuthProvider\",wg,[]);Z(a,\"TwitterAuthProvider\",yg,[]);Z(a,\"OAuthProvider\",P,[V(\"providerId\")]);Z(a,\"PhoneAuthProvider\",Ig,[Ok()]);Z(a,\"RecaptchaVerifier\",Yh,[X(V(),Nk(),\"recaptchaContainer\"),W(\"recaptchaParameters\",!0),Pk()]);firebase.INTERNAL.registerService(\"auth\",function(a,\nc){a=new T(a);c({INTERNAL:{getUid:r(a.getUid,a),getToken:r(a.xf,a),addAuthTokenListener:r(a.df,a),removeAuthTokenListener:r(a.ag,a)}});return a},a,function(a,c){if(\"create\"===a)try{c.auth()}catch(d){}});firebase.INTERNAL.extendNamespace({User:S})}else throw Error(\"Cannot find the firebase namespace; be sure to include firebase-app.js before this library.\");})();}).call(this);\n}).call(typeof global !== undefined ? global : typeof self !== undefined ? self : typeof window !== undefined ? window : {});\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./app\":1}],6:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/\n\n---\n\ntypedarray.js\nCopyright (c) 2010, Linden Research, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.registerDatabase = registerDatabase;\n\nvar _app = require('./app');\n\nvar _app2 = _interopRequireDefault(_app);\n\nvar _Database = require('./database/api/Database');\n\nvar _Query = require('./database/api/Query');\n\nvar _Reference = require('./database/api/Reference');\n\nvar _util = require('./database/core/util/util');\n\nvar _RepoManager = require('./database/core/RepoManager');\n\nvar _internal = require('./database/api/internal');\n\nvar INTERNAL = _interopRequireWildcard(_internal);\n\nvar _test_access = require('./database/api/test_access');\n\nvar TEST_ACCESS = _interopRequireWildcard(_test_access);\n\nvar _environment = require('./utils/environment');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction registerDatabase(instance) {\n    // Register the Database Service with the 'firebase' namespace.\n    var namespace = instance.INTERNAL.registerService('database', function (app) {\n        return _RepoManager.RepoManager.getInstance().databaseFromApp(app);\n    },\n    // firebase.database namespace properties\n    {\n        Reference: _Reference.Reference,\n        Query: _Query.Query,\n        Database: _Database.Database,\n        enableLogging: _util.enableLogging,\n        INTERNAL: INTERNAL,\n        ServerValue: _Database.Database.ServerValue,\n        TEST_ACCESS: TEST_ACCESS\n    });\n    if ((0, _environment.isNodeSdk)()) {\n        module.exports = namespace;\n    }\n} /**\n  * Copyright 2017 Google Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\nregisterDatabase(_app2.default);\n\n\n},{\"./app\":1,\"./database/api/Database\":8,\"./database/api/Query\":9,\"./database/api/Reference\":10,\"./database/api/internal\":12,\"./database/api/test_access\":14,\"./database/core/RepoManager\":21,\"./database/core/util/util\":65,\"./utils/environment\":139}],7:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DataSnapshot = undefined;\n\nvar _validation = require('../../utils/validation');\n\nvar _validation2 = require('../core/util/validation');\n\nvar _Path = require('../core/util/Path');\n\nvar _PriorityIndex = require('../core/snap/indexes/PriorityIndex');\n\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar DataSnapshot = function () {\n    /**\n     * @param {!Node} node_ A SnapshotNode to wrap.\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\n     * @param {!Index} index_ The iteration order for this snapshot\n     */\n    function DataSnapshot(node_, ref_, index_) {\n        this.node_ = node_;\n        this.ref_ = ref_;\n        this.index_ = index_;\n    }\n    /**\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n     * empty.\n     *\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.val = function () {\n        (0, _validation.validateArgCount)('DataSnapshot.val', 0, 0, arguments.length);\n        return this.node_.val();\n    };\n    /**\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n     * the entire node contents.\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.exportVal = function () {\n        (0, _validation.validateArgCount)('DataSnapshot.exportVal', 0, 0, arguments.length);\n        return this.node_.val(true);\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    DataSnapshot.prototype.toJSON = function () {\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n        (0, _validation.validateArgCount)('DataSnapshot.toJSON', 0, 1, arguments.length);\n        return this.exportVal();\n    };\n    /**\n     * Returns whether the snapshot contains a non-null value.\n     *\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\n     */\n    DataSnapshot.prototype.exists = function () {\n        (0, _validation.validateArgCount)('DataSnapshot.exists', 0, 0, arguments.length);\n        return !this.node_.isEmpty();\n    };\n    /**\n     * Returns a DataSnapshot of the specified child node's contents.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {!DataSnapshot} DataSnapshot for child node.\n     */\n    DataSnapshot.prototype.child = function (childPathString) {\n        (0, _validation.validateArgCount)('DataSnapshot.child', 0, 1, arguments.length);\n        // Ensure the childPath is a string (can be a number)\n        childPathString = String(childPathString);\n        (0, _validation2.validatePathString)('DataSnapshot.child', 1, childPathString, false);\n        var childPath = new _Path.Path(childPathString);\n        var childRef = this.ref_.child(childPath);\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, _PriorityIndex.PRIORITY_INDEX);\n    };\n    /**\n     * Returns whether the snapshot contains a child at the specified path.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {boolean} Whether the child exists.\n     */\n    DataSnapshot.prototype.hasChild = function (childPathString) {\n        (0, _validation.validateArgCount)('DataSnapshot.hasChild', 1, 1, arguments.length);\n        (0, _validation2.validatePathString)('DataSnapshot.hasChild', 1, childPathString, false);\n        var childPath = new _Path.Path(childPathString);\n        return !this.node_.getChild(childPath).isEmpty();\n    };\n    /**\n     * Returns the priority of the object, or null if no priority was set.\n     *\n     * @return {string|number|null} The priority.\n     */\n    DataSnapshot.prototype.getPriority = function () {\n        (0, _validation.validateArgCount)('DataSnapshot.getPriority', 0, 0, arguments.length);\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n        return this.node_.getPriority().val();\n    };\n    /**\n     * Iterates through child nodes and calls the specified action for each one.\n     *\n     * @param {function(!DataSnapshot)} action Callback function to be called\n     * for each child.\n     * @return {boolean} True if forEach was canceled by action returning true for\n     * one of the child nodes.\n     */\n    DataSnapshot.prototype.forEach = function (action) {\n        var _this = this;\n        (0, _validation.validateArgCount)('DataSnapshot.forEach', 1, 1, arguments.length);\n        (0, _validation.validateCallback)('DataSnapshot.forEach', 1, action, false);\n        if (this.node_.isLeafNode()) return false;\n        var childrenNode = this.node_;\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\n            return action(new DataSnapshot(node, _this.ref_.child(key), _PriorityIndex.PRIORITY_INDEX));\n        });\n    };\n    /**\n     * Returns whether this DataSnapshot has children.\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\n     */\n    DataSnapshot.prototype.hasChildren = function () {\n        (0, _validation.validateArgCount)('DataSnapshot.hasChildren', 0, 0, arguments.length);\n        if (this.node_.isLeafNode()) return false;else return !this.node_.isEmpty();\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\n        get: function get() {\n            return this.ref_.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the number of children for this DataSnapshot.\n     * @return {number} The number of children that this DataSnapshot contains.\n     */\n    DataSnapshot.prototype.numChildren = function () {\n        (0, _validation.validateArgCount)('DataSnapshot.numChildren', 0, 0, arguments.length);\n        return this.node_.numChildren();\n    };\n    /**\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\n     */\n    DataSnapshot.prototype.getRef = function () {\n        (0, _validation.validateArgCount)('DataSnapshot.ref', 0, 0, arguments.length);\n        return this.ref_;\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n        get: function get() {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DataSnapshot;\n}();\nexports.DataSnapshot = DataSnapshot;\n\n\n},{\"../../utils/validation\":149,\"../core/snap/indexes/PriorityIndex\":43,\"../core/util/Path\":59,\"../core/util/validation\":66}],8:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DatabaseInternals = exports.Database = undefined;\n\nvar _util = require('../core/util/util');\n\nvar _parser = require('../core/util/libs/parser');\n\nvar _Path = require('../core/util/Path');\n\nvar _promise = require('../../utils/promise');\n\nvar _Reference = require('./Reference');\n\nvar _Repo = require('../core/Repo');\n\nvar _RepoManager = require('../core/RepoManager');\n\nvar _validation = require('../../utils/validation');\n\nvar _validation2 = require('../core/util/validation');\n\n/**\n * Class representing a firebase database.\n * @implements {FirebaseService}\n */\nvar Database = function () {\n    /**\n     * The constructor should not be called by users of our public API.\n     * @param {!Repo} repo_\n     */\n    function Database(repo_) {\n        this.repo_ = repo_;\n        if (!(repo_ instanceof _Repo.Repo)) {\n            (0, _util.fatal)(\"Don't call new Database() directly - please use firebase.database().\");\n        }\n        /** @type {Reference} */\n        this.root_ = new _Reference.Reference(repo_, _Path.Path.Empty);\n        this.INTERNAL = new DatabaseInternals(this);\n    }\n    Object.defineProperty(Database.prototype, \"app\", {\n        get: function get() {\n            return this.repo_.app;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a reference to the root or the path specified in opt_pathString.\n     * @param {string=} pathString\n     * @return {!Reference} Firebase reference.\n     */\n    Database.prototype.ref = function (pathString) {\n        this.checkDeleted_('ref');\n        (0, _validation.validateArgCount)('database.ref', 0, 1, arguments.length);\n        return pathString !== undefined ? this.root_.child(pathString) : this.root_;\n    };\n    /**\n     * Returns a reference to the root or the path specified in url.\n     * We throw a exception if the url is not in the same domain as the\n     * current repo.\n     * @param {string} url\n     * @return {!Reference} Firebase reference.\n     */\n    Database.prototype.refFromURL = function (url) {\n        /** @const {string} */\n        var apiName = 'database.refFromURL';\n        this.checkDeleted_(apiName);\n        (0, _validation.validateArgCount)(apiName, 1, 1, arguments.length);\n        var parsedURL = (0, _parser.parseRepoInfo)(url);\n        (0, _validation2.validateUrl)(apiName, 1, parsedURL);\n        var repoInfo = parsedURL.repoInfo;\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\n            (0, _util.fatal)(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n        }\n        return this.ref(parsedURL.path.toString());\n    };\n    /**\n     * @param {string} apiName\n     */\n    Database.prototype.checkDeleted_ = function (apiName) {\n        if (this.repo_ === null) {\n            (0, _util.fatal)('Cannot call ' + apiName + ' on a deleted database.');\n        }\n    };\n    // Make individual repo go offline.\n    Database.prototype.goOffline = function () {\n        (0, _validation.validateArgCount)('database.goOffline', 0, 0, arguments.length);\n        this.checkDeleted_('goOffline');\n        this.repo_.interrupt();\n    };\n    Database.prototype.goOnline = function () {\n        (0, _validation.validateArgCount)('database.goOnline', 0, 0, arguments.length);\n        this.checkDeleted_('goOnline');\n        this.repo_.resume();\n    };\n    Database.ServerValue = {\n        TIMESTAMP: {\n            '.sv': 'timestamp'\n        }\n    };\n    return Database;\n}(); /**\n      * Copyright 2017 Google Inc.\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\nexports.Database = Database;\n\nvar DatabaseInternals = function () {\n    /** @param {!Database} database */\n    function DatabaseInternals(database) {\n        this.database = database;\n    }\n    /** @return {Promise<void>} */\n    DatabaseInternals.prototype.delete = function () {\n        this.database.checkDeleted_('delete');\n        _RepoManager.RepoManager.getInstance().deleteRepo(this.database.repo_);\n        this.database.repo_ = null;\n        this.database.root_ = null;\n        this.database.INTERNAL = null;\n        this.database = null;\n        return _promise.PromiseImpl.resolve();\n    };\n    return DatabaseInternals;\n}();\nexports.DatabaseInternals = DatabaseInternals;\n\n\n},{\"../../utils/promise\":145,\"../../utils/validation\":149,\"../core/Repo\":19,\"../core/RepoManager\":21,\"../core/util/Path\":59,\"../core/util/libs/parser\":64,\"../core/util/util\":65,\"../core/util/validation\":66,\"./Reference\":10}],9:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Query = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nvar _assert = require('../../utils/assert');\n\nvar _KeyIndex = require('../core/snap/indexes/KeyIndex');\n\nvar _PriorityIndex = require('../core/snap/indexes/PriorityIndex');\n\nvar _ValueIndex = require('../core/snap/indexes/ValueIndex');\n\nvar _PathIndex = require('../core/snap/indexes/PathIndex');\n\nvar _util = require('../core/util/util');\n\nvar _Path = require('../core/util/Path');\n\nvar _validation = require('../core/util/validation');\n\nvar _validation2 = require('../../utils/validation');\n\nvar _EventRegistration = require('../core/view/EventRegistration');\n\nvar _promise = require('../../utils/promise');\n\nvar __referenceConstructor;\n/**\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\n *\n * Since every Firebase reference is a query, Firebase inherits from this object.\n */\nvar Query = function () {\n    function Query(repo, path, queryParams_, orderByCalled_) {\n        this.repo = repo;\n        this.path = path;\n        this.queryParams_ = queryParams_;\n        this.orderByCalled_ = orderByCalled_;\n    }\n    Object.defineProperty(Query, \"__referenceConstructor\", {\n        get: function get() {\n            (0, _assert.assert)(__referenceConstructor, 'Reference.ts has not been loaded');\n            return __referenceConstructor;\n        },\n        set: function set(val) {\n            __referenceConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Validates start/end values for queries.\n     * @param {!QueryParams} params\n     * @private\n     */\n    Query.validateQueryEndpoints_ = function (params) {\n        var startNode = null;\n        var endNode = null;\n        if (params.hasStart()) {\n            startNode = params.getIndexStartValue();\n        }\n        if (params.hasEnd()) {\n            endNode = params.getIndexEndValue();\n        }\n        if (params.getIndex() === _KeyIndex.KEY_INDEX) {\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' + 'or equalTo() must be a string.';\n            if (params.hasStart()) {\n                var startName = params.getIndexStartName();\n                if (startName != _util.MIN_NAME) {\n                    throw new Error(tooManyArgsError);\n                } else if (typeof startNode !== 'string') {\n                    throw new Error(wrongArgTypeError);\n                }\n            }\n            if (params.hasEnd()) {\n                var endName = params.getIndexEndName();\n                if (endName != _util.MAX_NAME) {\n                    throw new Error(tooManyArgsError);\n                } else if (typeof endNode !== 'string') {\n                    throw new Error(wrongArgTypeError);\n                }\n            }\n        } else if (params.getIndex() === _PriorityIndex.PRIORITY_INDEX) {\n            if (startNode != null && !(0, _validation.isValidPriority)(startNode) || endNode != null && !(0, _validation.isValidPriority)(endNode)) {\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\n            }\n        } else {\n            (0, _assert.assert)(params.getIndex() instanceof _PathIndex.PathIndex || params.getIndex() === _ValueIndex.VALUE_INDEX, 'unknown index type.');\n            if (startNode != null && (typeof startNode === 'undefined' ? 'undefined' : _typeof(startNode)) === 'object' || endNode != null && (typeof endNode === 'undefined' ? 'undefined' : _typeof(endNode)) === 'object') {\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' + 'an object.');\n            }\n        }\n    };\n    /**\n     * Validates that limit* has been called with the correct combination of parameters\n     * @param {!QueryParams} params\n     * @private\n     */\n    Query.validateLimit_ = function (params) {\n        if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\n        }\n    };\n    /**\n     * Validates that no other order by call has been made\n     * @param {!string} fnName\n     * @private\n     */\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n        if (this.orderByCalled_ === true) {\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n        }\n    };\n    /**\n     * @return {!QueryParams}\n     */\n    Query.prototype.getQueryParams = function () {\n        return this.queryParams_;\n    };\n    /**\n     * @return {!Reference}\n     */\n    Query.prototype.getRef = function () {\n        (0, _validation2.validateArgCount)('Query.ref', 0, 0, arguments.length);\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n        // method gets called.\n        return new Query.__referenceConstructor(this.repo, this.path);\n    };\n    /**\n     * @param {!string} eventType\n     * @param {!function(DataSnapshot, string=)} callback\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\n     * @param {Object=} context\n     * @return {!function(DataSnapshot, string=)}\n     */\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n        (0, _validation2.validateArgCount)('Query.on', 2, 4, arguments.length);\n        (0, _validation.validateEventType)('Query.on', 1, eventType, false);\n        (0, _validation2.validateCallback)('Query.on', 2, callback, false);\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n        if (eventType === 'value') {\n            this.onValueEvent(callback, ret.cancel, ret.context);\n        } else {\n            var callbacks = {};\n            callbacks[eventType] = callback;\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\n        }\n        return callback;\n    };\n    /**\n     * @param {!function(!DataSnapshot)} callback\n     * @param {?function(Error)} cancelCallback\n     * @param {?Object} context\n     * @protected\n     */\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n        var container = new _EventRegistration.ValueEventRegistration(callback, cancelCallback || null, context || null);\n        this.repo.addEventCallbackForQuery(this, container);\n    };\n    /**\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\n     * @param {?function(Error)} cancelCallback\n     * @param {?Object} context\n     * @protected\n     */\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n        var container = new _EventRegistration.ChildEventRegistration(callbacks, cancelCallback, context);\n        this.repo.addEventCallbackForQuery(this, container);\n    };\n    /**\n     * @param {string=} eventType\n     * @param {(function(!DataSnapshot, ?string=))=} callback\n     * @param {Object=} context\n     */\n    Query.prototype.off = function (eventType, callback, context) {\n        (0, _validation2.validateArgCount)('Query.off', 0, 3, arguments.length);\n        (0, _validation.validateEventType)('Query.off', 1, eventType, true);\n        (0, _validation2.validateCallback)('Query.off', 2, callback, true);\n        (0, _validation2.validateContextObject)('Query.off', 3, context, true);\n        var container = null;\n        var callbacks = null;\n        if (eventType === 'value') {\n            var valueCallback = callback || null;\n            container = new _EventRegistration.ValueEventRegistration(valueCallback, null, context || null);\n        } else if (eventType) {\n            if (callback) {\n                callbacks = {};\n                callbacks[eventType] = callback;\n            }\n            container = new _EventRegistration.ChildEventRegistration(callbacks, null, context || null);\n        }\n        this.repo.removeEventCallbackForQuery(this, container);\n    };\n    /**\n     * Attaches a listener, waits for the first event, and then removes the listener\n     * @param {!string} eventType\n     * @param {!function(!DataSnapshot, string=)} userCallback\n     * @param cancelOrContext\n     * @param context\n     * @return {!firebase.Promise}\n     */\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\n        var _this = this;\n        (0, _validation2.validateArgCount)('Query.once', 1, 4, arguments.length);\n        (0, _validation.validateEventType)('Query.once', 1, eventType, false);\n        (0, _validation2.validateCallback)('Query.once', 2, userCallback, true);\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n        // against the Promise specification.\n        var firstCall = true;\n        var deferred = new _promise.Deferred();\n        (0, _promise.attachDummyErrorHandler)(deferred.promise);\n        var onceCallback = function onceCallback(snapshot) {\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n            // triggers multiple events (e.g. child_added or child_changed).\n            if (firstCall) {\n                firstCall = false;\n                _this.off(eventType, onceCallback);\n                if (userCallback) {\n                    userCallback.bind(ret.context)(snapshot);\n                }\n                deferred.resolve(snapshot);\n            }\n        };\n        this.on(eventType, onceCallback,\n        /*cancel=*/function (err) {\n            _this.off(eventType, onceCallback);\n            if (ret.cancel) ret.cancel.bind(ret.context)(err);\n            deferred.reject(err);\n        });\n        return deferred.promise;\n    };\n    /**\n     * Set a limit and anchor it to the start of the window.\n     * @param {!number} limit\n     * @return {!Query}\n     */\n    Query.prototype.limitToFirst = function (limit) {\n        (0, _validation2.validateArgCount)('Query.limitToFirst', 1, 1, arguments.length);\n        if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n        }\n        if (this.queryParams_.hasLimit()) {\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n        }\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n    };\n    /**\n     * Set a limit and anchor it to the end of the window.\n     * @param {!number} limit\n     * @return {!Query}\n     */\n    Query.prototype.limitToLast = function (limit) {\n        (0, _validation2.validateArgCount)('Query.limitToLast', 1, 1, arguments.length);\n        if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\n        }\n        if (this.queryParams_.hasLimit()) {\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n        }\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n    };\n    /**\n     * Given a child path, return a new query ordered by the specified grandchild path.\n     * @param {!string} path\n     * @return {!Query}\n     */\n    Query.prototype.orderByChild = function (path) {\n        (0, _validation2.validateArgCount)('Query.orderByChild', 1, 1, arguments.length);\n        if (path === '$key') {\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n        } else if (path === '$priority') {\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n        } else if (path === '$value') {\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n        }\n        (0, _validation.validatePathString)('Query.orderByChild', 1, path, false);\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\n        var parsedPath = new _Path.Path(path);\n        if (parsedPath.isEmpty()) {\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n        }\n        var index = new _PathIndex.PathIndex(parsedPath);\n        var newParams = this.queryParams_.orderBy(index);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);\n    };\n    /**\n     * Return a new query ordered by the KeyIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByKey = function () {\n        (0, _validation2.validateArgCount)('Query.orderByKey', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\n        var newParams = this.queryParams_.orderBy(_KeyIndex.KEY_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);\n    };\n    /**\n     * Return a new query ordered by the PriorityIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByPriority = function () {\n        (0, _validation2.validateArgCount)('Query.orderByPriority', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n        var newParams = this.queryParams_.orderBy(_PriorityIndex.PRIORITY_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);\n    };\n    /**\n     * Return a new query ordered by the ValueIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByValue = function () {\n        (0, _validation2.validateArgCount)('Query.orderByValue', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\n        var newParams = this.queryParams_.orderBy(_ValueIndex.VALUE_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);\n    };\n    /**\n     * @param {number|string|boolean|null} value\n     * @param {?string=} name\n     * @return {!Query}\n     */\n    Query.prototype.startAt = function (value, name) {\n        if (value === void 0) {\n            value = null;\n        }\n        (0, _validation2.validateArgCount)('Query.startAt', 0, 2, arguments.length);\n        (0, _validation.validateFirebaseDataArg)('Query.startAt', 1, value, this.path, true);\n        (0, _validation.validateKey)('Query.startAt', 2, name, true);\n        var newParams = this.queryParams_.startAt(value, name);\n        Query.validateLimit_(newParams);\n        Query.validateQueryEndpoints_(newParams);\n        if (this.queryParams_.hasStart()) {\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n        }\n        // Calling with no params tells us to start at the beginning.\n        if (value === undefined) {\n            value = null;\n            name = null;\n        }\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n    };\n    /**\n     * @param {number|string|boolean|null} value\n     * @param {?string=} name\n     * @return {!Query}\n     */\n    Query.prototype.endAt = function (value, name) {\n        if (value === void 0) {\n            value = null;\n        }\n        (0, _validation2.validateArgCount)('Query.endAt', 0, 2, arguments.length);\n        (0, _validation.validateFirebaseDataArg)('Query.endAt', 1, value, this.path, true);\n        (0, _validation.validateKey)('Query.endAt', 2, name, true);\n        var newParams = this.queryParams_.endAt(value, name);\n        Query.validateLimit_(newParams);\n        Query.validateQueryEndpoints_(newParams);\n        if (this.queryParams_.hasEnd()) {\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n        }\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n    };\n    /**\n     * Load the selection of children with exactly the specified value, and, optionally,\n     * the specified name.\n     * @param {number|string|boolean|null} value\n     * @param {string=} name\n     * @return {!Query}\n     */\n    Query.prototype.equalTo = function (value, name) {\n        (0, _validation2.validateArgCount)('Query.equalTo', 1, 2, arguments.length);\n        (0, _validation.validateFirebaseDataArg)('Query.equalTo', 1, value, this.path, false);\n        (0, _validation.validateKey)('Query.equalTo', 2, name, true);\n        if (this.queryParams_.hasStart()) {\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' + 'equalTo).');\n        }\n        if (this.queryParams_.hasEnd()) {\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n        }\n        return this.startAt(value, name).endAt(value, name);\n    };\n    /**\n     * @return {!string} URL for this location.\n     */\n    Query.prototype.toString = function () {\n        (0, _validation2.validateArgCount)('Query.toString', 0, 0, arguments.length);\n        return this.repo.toString() + this.path.toUrlEncodedString();\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users.\n    Query.prototype.toJSON = function () {\n        // An optional spacer argument is unnecessary for a string.\n        (0, _validation2.validateArgCount)('Query.toJSON', 0, 1, arguments.length);\n        return this.toString();\n    };\n    /**\n     * An object representation of the query parameters used by this Query.\n     * @return {!Object}\n     */\n    Query.prototype.queryObject = function () {\n        return this.queryParams_.getQueryObject();\n    };\n    /**\n     * @return {!string}\n     */\n    Query.prototype.queryIdentifier = function () {\n        var obj = this.queryObject();\n        var id = (0, _util.ObjectToUniqueKey)(obj);\n        return id === '{}' ? 'default' : id;\n    };\n    /**\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\n     * @param {Query} other\n     * @return {boolean}\n     */\n    Query.prototype.isEqual = function (other) {\n        (0, _validation2.validateArgCount)('Query.isEqual', 1, 1, arguments.length);\n        if (!(other instanceof Query)) {\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n            throw new Error(error);\n        }\n        var sameRepo = this.repo === other.repo;\n        var samePath = this.path.equals(other.path);\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n        return sameRepo && samePath && sameQueryIdentifier;\n    };\n    /**\n     * Helper used by .on and .once to extract the context and or cancel arguments.\n     * @param {!string} fnName The function name (on or once)\n     * @param {(function(Error)|Object)=} cancelOrContext\n     * @param {Object=} context\n     * @return {{cancel: ?function(Error), context: ?Object}}\n     * @private\n     */\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n        var ret = { cancel: null, context: null };\n        if (cancelOrContext && context) {\n            ret.cancel = cancelOrContext;\n            (0, _validation2.validateCallback)(fnName, 3, ret.cancel, true);\n            ret.context = context;\n            (0, _validation2.validateContextObject)(fnName, 4, ret.context, true);\n        } else if (cancelOrContext) {\n            // we have either a cancel callback or a context.\n            if ((typeof cancelOrContext === 'undefined' ? 'undefined' : _typeof(cancelOrContext)) === 'object' && cancelOrContext !== null) {\n                // it's a context!\n                ret.context = cancelOrContext;\n            } else if (typeof cancelOrContext === 'function') {\n                ret.cancel = cancelOrContext;\n            } else {\n                throw new Error((0, _validation2.errorPrefix)(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n            }\n        }\n        return ret;\n    };\n    Object.defineProperty(Query.prototype, \"ref\", {\n        get: function get() {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Query;\n}();\nexports.Query = Query;\n\n\n},{\"../../utils/assert\":135,\"../../utils/promise\":145,\"../../utils/validation\":149,\"../core/snap/indexes/KeyIndex\":41,\"../core/snap/indexes/PathIndex\":42,\"../core/snap/indexes/PriorityIndex\":43,\"../core/snap/indexes/ValueIndex\":44,\"../core/util/Path\":59,\"../core/util/util\":65,\"../core/util/validation\":66,\"../core/view/EventRegistration\":74}],10:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Reference = undefined;\n\nvar _onDisconnect = require('./onDisconnect');\n\nvar _TransactionResult = require('./TransactionResult');\n\nvar _util = require('../core/util/util');\n\nvar _NextPushId = require('../core/util/NextPushId');\n\nvar _Query = require('./Query');\n\nvar _Repo = require('../core/Repo');\n\nvar _Path = require('../core/util/Path');\n\nvar _QueryParams = require('../core/view/QueryParams');\n\nvar _validation = require('../core/util/validation');\n\nvar _validation2 = require('../../utils/validation');\n\nvar _promise = require('../../utils/promise');\n\nvar _SyncPoint = require('../core/SyncPoint');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\nvar Reference = function (_super) {\n    __extends(Reference, _super);\n    /**\n     * Call options:\n     *   new Reference(Repo, Path) or\n     *   new Reference(url: string, string|RepoManager)\n     *\n     * Externally - this is the firebase.database.Reference type.\n     *\n     * @param {!Repo} repo\n     * @param {(!Path)} path\n     * @extends {Query}\n     */\n    function Reference(repo, path) {\n        var _this = this;\n        if (!(repo instanceof _Repo.Repo)) {\n            throw new Error('new Reference() no longer supported - use app.database().');\n        }\n        // call Query's constructor, passing in the repo and path.\n        _this = _super.call(this, repo, path, _QueryParams.QueryParams.DEFAULT, false) || this;\n        return _this;\n    }\n    /** @return {?string} */\n    Reference.prototype.getKey = function () {\n        (0, _validation2.validateArgCount)('Reference.key', 0, 0, arguments.length);\n        if (this.path.isEmpty()) return null;else return this.path.getBack();\n    };\n    /**\n     * @param {!(string|Path)} pathString\n     * @return {!Reference}\n     */\n    Reference.prototype.child = function (pathString) {\n        (0, _validation2.validateArgCount)('Reference.child', 1, 1, arguments.length);\n        if (typeof pathString === 'number') {\n            pathString = String(pathString);\n        } else if (!(pathString instanceof _Path.Path)) {\n            if (this.path.getFront() === null) (0, _validation.validateRootPathString)('Reference.child', 1, pathString, false);else (0, _validation.validatePathString)('Reference.child', 1, pathString, false);\n        }\n        return new Reference(this.repo, this.path.child(pathString));\n    };\n    /** @return {?Reference} */\n    Reference.prototype.getParent = function () {\n        (0, _validation2.validateArgCount)('Reference.parent', 0, 0, arguments.length);\n        var parentPath = this.path.parent();\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\n    };\n    /** @return {!Reference} */\n    Reference.prototype.getRoot = function () {\n        (0, _validation2.validateArgCount)('Reference.root', 0, 0, arguments.length);\n        var ref = this;\n        while (ref.getParent() !== null) {\n            ref = ref.getParent();\n        }\n        return ref;\n    };\n    /** @return {!Database} */\n    Reference.prototype.databaseProp = function () {\n        return this.repo.database;\n    };\n    /**\n     * @param {*} newVal\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.set = function (newVal, onComplete) {\n        (0, _validation2.validateArgCount)('Reference.set', 1, 2, arguments.length);\n        (0, _validation.validateWritablePath)('Reference.set', this.path);\n        (0, _validation.validateFirebaseDataArg)('Reference.set', 1, newVal, this.path, false);\n        (0, _validation2.validateCallback)('Reference.set', 2, onComplete, true);\n        var deferred = new _promise.Deferred();\n        this.repo.setWithPriority(this.path, newVal,\n        /*priority=*/null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {!Object} objectToMerge\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.update = function (objectToMerge, onComplete) {\n        (0, _validation2.validateArgCount)('Reference.update', 1, 2, arguments.length);\n        (0, _validation.validateWritablePath)('Reference.update', this.path);\n        if (Array.isArray(objectToMerge)) {\n            var newObjectToMerge = {};\n            for (var i = 0; i < objectToMerge.length; ++i) {\n                newObjectToMerge['' + i] = objectToMerge[i];\n            }\n            objectToMerge = newObjectToMerge;\n            (0, _util.warn)('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n        }\n        (0, _validation.validateFirebaseMergeDataArg)('Reference.update', 1, objectToMerge, this.path, false);\n        (0, _validation2.validateCallback)('Reference.update', 2, onComplete, true);\n        var deferred = new _promise.Deferred();\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} newVal\n     * @param {string|number|null} newPriority\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n        (0, _validation2.validateArgCount)('Reference.setWithPriority', 2, 3, arguments.length);\n        (0, _validation.validateWritablePath)('Reference.setWithPriority', this.path);\n        (0, _validation.validateFirebaseDataArg)('Reference.setWithPriority', 1, newVal, this.path, false);\n        (0, _validation.validatePriority)('Reference.setWithPriority', 2, newPriority, false);\n        (0, _validation2.validateCallback)('Reference.setWithPriority', 3, onComplete, true);\n        if (this.getKey() === '.length' || this.getKey() === '.keys') throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n        var deferred = new _promise.Deferred();\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.remove = function (onComplete) {\n        (0, _validation2.validateArgCount)('Reference.remove', 0, 1, arguments.length);\n        (0, _validation.validateWritablePath)('Reference.remove', this.path);\n        (0, _validation2.validateCallback)('Reference.remove', 1, onComplete, true);\n        return this.set(null, onComplete);\n    };\n    /**\n     * @param {function(*):*} transactionUpdate\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\n     * @param {boolean=} applyLocally\n     * @return {!Promise}\n     */\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n        (0, _validation2.validateArgCount)('Reference.transaction', 1, 3, arguments.length);\n        (0, _validation.validateWritablePath)('Reference.transaction', this.path);\n        (0, _validation2.validateCallback)('Reference.transaction', 1, transactionUpdate, false);\n        (0, _validation2.validateCallback)('Reference.transaction', 2, onComplete, true);\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n        // to expose it.\n        (0, _validation.validateBoolean)('Reference.transaction', 3, applyLocally, true);\n        if (this.getKey() === '.length' || this.getKey() === '.keys') throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n        if (applyLocally === undefined) applyLocally = true;\n        var deferred = new _promise.Deferred();\n        if (typeof onComplete === 'function') {\n            (0, _promise.attachDummyErrorHandler)(deferred.promise);\n        }\n        var promiseComplete = function promiseComplete(error, committed, snapshot) {\n            if (error) {\n                deferred.reject(error);\n            } else {\n                deferred.resolve(new _TransactionResult.TransactionResult(committed, snapshot));\n            }\n            if (typeof onComplete === 'function') {\n                onComplete(error, committed, snapshot);\n            }\n        };\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n        return deferred.promise;\n    };\n    /**\n     * @param {string|number|null} priority\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.setPriority = function (priority, onComplete) {\n        (0, _validation2.validateArgCount)('Reference.setPriority', 1, 2, arguments.length);\n        (0, _validation.validateWritablePath)('Reference.setPriority', this.path);\n        (0, _validation.validatePriority)('Reference.setPriority', 1, priority, false);\n        (0, _validation2.validateCallback)('Reference.setPriority', 2, onComplete, true);\n        var deferred = new _promise.Deferred();\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*=} value\n     * @param {function(?Error)=} onComplete\n     * @return {!Reference}\n     */\n    Reference.prototype.push = function (value, onComplete) {\n        (0, _validation2.validateArgCount)('Reference.push', 0, 2, arguments.length);\n        (0, _validation.validateWritablePath)('Reference.push', this.path);\n        (0, _validation.validateFirebaseDataArg)('Reference.push', 1, value, this.path, true);\n        (0, _validation2.validateCallback)('Reference.push', 2, onComplete, true);\n        var now = this.repo.serverTime();\n        var name = (0, _NextPushId.nextPushId)(now);\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n        // We use child() to create handles to two different references. The first is turned into a\n        // ThennableReference below by adding then() and catch() methods and is used as the\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\n        // value of the first ThennableReference.\n        var thennablePushRef = this.child(name);\n        var pushRef = this.child(name);\n        var promise;\n        if (value != null) {\n            promise = thennablePushRef.set(value, onComplete).then(function () {\n                return pushRef;\n            });\n        } else {\n            promise = _promise.PromiseImpl.resolve(pushRef);\n        }\n        thennablePushRef.then = promise.then.bind(promise);\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\n        if (typeof onComplete === 'function') {\n            (0, _promise.attachDummyErrorHandler)(promise);\n        }\n        return thennablePushRef;\n    };\n    /**\n     * @return {!OnDisconnect}\n     */\n    Reference.prototype.onDisconnect = function () {\n        (0, _validation.validateWritablePath)('Reference.onDisconnect', this.path);\n        return new _onDisconnect.OnDisconnect(this.repo, this.path);\n    };\n    Object.defineProperty(Reference.prototype, \"database\", {\n        get: function get() {\n            return this.databaseProp();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"key\", {\n        get: function get() {\n            return this.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"parent\", {\n        get: function get() {\n            return this.getParent();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"root\", {\n        get: function get() {\n            return this.getRoot();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Reference;\n}(_Query.Query);\nexports.Reference = Reference;\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\n\n_Query.Query.__referenceConstructor = Reference;\n_SyncPoint.SyncPoint.__referenceConstructor = Reference;\n\n\n},{\"../../utils/promise\":145,\"../../utils/validation\":149,\"../core/Repo\":19,\"../core/SyncPoint\":26,\"../core/util/NextPushId\":57,\"../core/util/Path\":59,\"../core/util/util\":65,\"../core/util/validation\":66,\"../core/view/QueryParams\":75,\"./Query\":9,\"./TransactionResult\":11,\"./onDisconnect\":13}],11:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TransactionResult = undefined;\n\nvar _validation = require('../../utils/validation');\n\nvar TransactionResult = function () {\n    /**\n     * A type for the resolve value of Firebase.transaction.\n     * @constructor\n     * @dict\n     * @param {boolean} committed\n     * @param {DataSnapshot} snapshot\n     */\n    function TransactionResult(committed, snapshot) {\n        this.committed = committed;\n        this.snapshot = snapshot;\n    }\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    TransactionResult.prototype.toJSON = function () {\n        (0, _validation.validateArgCount)('TransactionResult.toJSON', 0, 1, arguments.length);\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n    };\n    return TransactionResult;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.TransactionResult = TransactionResult;\n\n\n},{\"../../utils/validation\":149}],12:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.interceptServerData = exports.dataUpdateCount = exports.statsIncrementCounter = exports.stats = exports.setSecurityDebugCallback = exports.isWebSocketsAvailable = exports.forceWebSockets = exports.forceLongPolling = undefined;\n\nvar _WebSocketConnection = require('../realtime/WebSocketConnection');\n\nvar _BrowserPollConnection = require('../realtime/BrowserPollConnection');\n\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n *\n * @const\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar forceLongPolling = exports.forceLongPolling = function forceLongPolling() {\n    _WebSocketConnection.WebSocketConnection.forceDisallow();\n    _BrowserPollConnection.BrowserPollConnection.forceAllow();\n};\nvar forceWebSockets = exports.forceWebSockets = function forceWebSockets() {\n    _BrowserPollConnection.BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\nvar isWebSocketsAvailable = exports.isWebSocketsAvailable = function isWebSocketsAvailable() {\n    return _WebSocketConnection.WebSocketConnection['isAvailable']();\n};\nvar setSecurityDebugCallback = exports.setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\nvar stats = exports.stats = function stats(ref, showDelta) {\n    ref.repo.stats(showDelta);\n};\nvar statsIncrementCounter = exports.statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n    ref.repo.statsIncrementCounter(metric);\n};\nvar dataUpdateCount = exports.dataUpdateCount = function dataUpdateCount(ref) {\n    return ref.repo.dataUpdateCount;\n};\nvar interceptServerData = exports.interceptServerData = function interceptServerData(ref, callback) {\n    return ref.repo.interceptServerData_(callback);\n};\n\n\n},{\"../realtime/BrowserPollConnection\":82,\"../realtime/WebSocketConnection\":86}],13:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OnDisconnect = undefined;\n\nvar _validation = require('../../utils/validation');\n\nvar _validation2 = require('../core/util/validation');\n\nvar _util = require('../core/util/util');\n\nvar _promise = require('../../utils/promise');\n\n/**\n * @constructor\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar OnDisconnect = function () {\n    /**\n     * @param {!Repo} repo_\n     * @param {!Path} path_\n     */\n    function OnDisconnect(repo_, path_) {\n        this.repo_ = repo_;\n        this.path_ = path_;\n    }\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.cancel = function (onComplete) {\n        (0, _validation.validateArgCount)('OnDisconnect.cancel', 0, 1, arguments.length);\n        (0, _validation.validateCallback)('OnDisconnect.cancel', 1, onComplete, true);\n        var deferred = new _promise.Deferred();\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.remove = function (onComplete) {\n        (0, _validation.validateArgCount)('OnDisconnect.remove', 0, 1, arguments.length);\n        (0, _validation2.validateWritablePath)('OnDisconnect.remove', this.path_);\n        (0, _validation.validateCallback)('OnDisconnect.remove', 1, onComplete, true);\n        var deferred = new _promise.Deferred();\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} value\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.set = function (value, onComplete) {\n        (0, _validation.validateArgCount)('OnDisconnect.set', 1, 2, arguments.length);\n        (0, _validation2.validateWritablePath)('OnDisconnect.set', this.path_);\n        (0, _validation2.validateFirebaseDataArg)('OnDisconnect.set', 1, value, this.path_, false);\n        (0, _validation.validateCallback)('OnDisconnect.set', 2, onComplete, true);\n        var deferred = new _promise.Deferred();\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} value\n     * @param {number|string|null} priority\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n        (0, _validation.validateArgCount)('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n        (0, _validation2.validateWritablePath)('OnDisconnect.setWithPriority', this.path_);\n        (0, _validation2.validateFirebaseDataArg)('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n        (0, _validation2.validatePriority)('OnDisconnect.setWithPriority', 2, priority, false);\n        (0, _validation.validateCallback)('OnDisconnect.setWithPriority', 3, onComplete, true);\n        var deferred = new _promise.Deferred();\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {!Object} objectToMerge\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n        (0, _validation.validateArgCount)('OnDisconnect.update', 1, 2, arguments.length);\n        (0, _validation2.validateWritablePath)('OnDisconnect.update', this.path_);\n        if (Array.isArray(objectToMerge)) {\n            var newObjectToMerge = {};\n            for (var i = 0; i < objectToMerge.length; ++i) {\n                newObjectToMerge['' + i] = objectToMerge[i];\n            }\n            objectToMerge = newObjectToMerge;\n            (0, _util.warn)('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n        }\n        (0, _validation2.validateFirebaseMergeDataArg)('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n        (0, _validation.validateCallback)('OnDisconnect.update', 2, onComplete, true);\n        var deferred = new _promise.Deferred();\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    return OnDisconnect;\n}();\nexports.OnDisconnect = OnDisconnect;\n\n\n},{\"../../utils/promise\":145,\"../../utils/validation\":149,\"../core/util/util\":65,\"../core/util/validation\":66}],14:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.forceRestClient = exports.listens = exports.queryIdentifier = exports.ConnectionTarget = exports.hijackHash = exports.RealTimeConnection = exports.DataConnection = undefined;\n\nvar _RepoInfo = require('../core/RepoInfo');\n\nvar _PersistentConnection = require('../core/PersistentConnection');\n\nvar _RepoManager = require('../core/RepoManager');\n\nvar _Connection = require('../realtime/Connection');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar DataConnection = exports.DataConnection = _PersistentConnection.PersistentConnection;\n/**\n * @param {!string} pathString\n * @param {function(*)} onComplete\n */\n_PersistentConnection.PersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n    this.sendRequest('q', { p: pathString }, onComplete);\n};\n/**\n * @param {*} data\n * @param {function(*)} onEcho\n */\n_PersistentConnection.PersistentConnection.prototype.echo = function (data, onEcho) {\n    this.sendRequest('echo', { d: data }, onEcho);\n};\n// RealTimeConnection properties that we use in tests.\nvar RealTimeConnection = exports.RealTimeConnection = _Connection.Connection;\n/**\n * @param {function(): string} newHash\n * @return {function()}\n */\nvar hijackHash = exports.hijackHash = function hijackHash(newHash) {\n    var oldPut = _PersistentConnection.PersistentConnection.prototype.put;\n    _PersistentConnection.PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\n        if (opt_hash !== undefined) {\n            opt_hash = newHash();\n        }\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\n    };\n    return function () {\n        _PersistentConnection.PersistentConnection.prototype.put = oldPut;\n    };\n};\n/**\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\n */\nvar ConnectionTarget = exports.ConnectionTarget = _RepoInfo.RepoInfo;\n/**\n * @param {!Query} query\n * @return {!string}\n */\nvar queryIdentifier = exports.queryIdentifier = function queryIdentifier(query) {\n    return query.queryIdentifier();\n};\n/**\n * @param {!Query} firebaseRef\n * @return {!Object}\n */\nvar listens = exports.listens = function listens(firebaseRef) {\n    return firebaseRef.repo.persistentConnection_.listens_;\n};\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n *\n * @param {boolean} forceRestClient\n */\nvar forceRestClient = exports.forceRestClient = function forceRestClient(_forceRestClient) {\n    _RepoManager.RepoManager.getInstance().forceRestClient(_forceRestClient);\n};\n\n\n},{\"../core/PersistentConnection\":17,\"../core/RepoInfo\":20,\"../core/RepoManager\":21,\"../realtime/Connection\":83}],15:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.AuthTokenProvider = undefined;\n\nvar _util = require('./util/util');\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nvar AuthTokenProvider = function () {\n    /**\n     * @param {!FirebaseApp} app_\n     */\n    function AuthTokenProvider(app_) {\n        this.app_ = app_;\n    }\n    /**\n     * @param {boolean} forceRefresh\n     * @return {!Promise<FirebaseAuthTokenData>}\n     */\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null,\n        // .catch\n        function (error) {\n            // TODO: Need to figure out all the cases this is raised and whether\n            // this makes sense.\n            if (error && error.code === 'auth/token-not-initialized') {\n                (0, _util.log)('Got auth/token-not-initialized error.  Treating as null token.');\n                return null;\n            } else {\n                return Promise.reject(error);\n            }\n        });\n    };\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n        // TODO: We might want to wrap the listener and call it with no args to\n        // avoid a leaky abstraction, but that makes removing the listener harder.\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\n        var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n        if ('credential' in this.app_.options) {\n            errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n        } else if ('serviceAccount' in this.app_.options) {\n            errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n        } else {\n            errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n        }\n        (0, _util.warn)(errorMessage);\n    };\n    return AuthTokenProvider;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.AuthTokenProvider = AuthTokenProvider;\n\n\n},{\"./util/util\":65}],16:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CompoundWrite = undefined;\n\nvar _ImmutableTree = require('./util/ImmutableTree');\n\nvar _Path = require('./util/Path');\n\nvar _obj = require('../../utils/obj');\n\nvar _Node = require('./snap/Node');\n\nvar _PriorityIndex = require('./snap/indexes/PriorityIndex');\n\nvar _assert = require('../../utils/assert');\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n *\n * @constructor\n * @param {!ImmutableTree.<!Node>} writeTree\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar CompoundWrite = function () {\n    function CompoundWrite(writeTree_) {\n        this.writeTree_ = writeTree_;\n    }\n    /**\n     * @param {!Path} path\n     * @param {!Node} node\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.addWrite = function (path, node) {\n        if (path.isEmpty()) {\n            return new CompoundWrite(new _ImmutableTree.ImmutableTree(node));\n        } else {\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n            if (rootmost != null) {\n                var rootMostPath = rootmost.path;\n                var value = rootmost.value;\n                var relativePath = _Path.Path.relativePath(rootMostPath, path);\n                value = value.updateChild(relativePath, node);\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n            } else {\n                var subtree = new _ImmutableTree.ImmutableTree(node);\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\n                return new CompoundWrite(newWriteTree);\n            }\n        }\n    };\n    /**\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} updates\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.addWrites = function (path, updates) {\n        var newWrite = this;\n        (0, _obj.forEach)(updates, function (childKey, node) {\n            newWrite = newWrite.addWrite(path.child(childKey), node);\n        });\n        return newWrite;\n    };\n    /**\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n     * location, which must be removed by calling this method with that path.\n     *\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\n     */\n    CompoundWrite.prototype.removeWrite = function (path) {\n        if (path.isEmpty()) {\n            return CompoundWrite.Empty;\n        } else {\n            var newWriteTree = this.writeTree_.setTree(path, _ImmutableTree.ImmutableTree.Empty);\n            return new CompoundWrite(newWriteTree);\n        }\n    };\n    /**\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n     * considered \"complete\".\n     *\n     * @param {!Path} path The path to check for\n     * @return {boolean} Whether there is a complete write at that path\n     */\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\n        return this.getCompleteNode(path) != null;\n    };\n    /**\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n     * writes from deeper paths, but will return child nodes from a more shallow path.\n     *\n     * @param {!Path} path The path to get a complete write\n     * @return {?Node} The node if complete at that path, or null otherwise.\n     */\n    CompoundWrite.prototype.getCompleteNode = function (path) {\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n        if (rootmost != null) {\n            return this.writeTree_.get(rootmost.path).getChild(_Path.Path.relativePath(rootmost.path, path));\n        } else {\n            return null;\n        }\n    };\n    /**\n     * Returns all children that are guaranteed to be a complete overwrite.\n     *\n     * @return {!Array.<NamedNode>} A list of all complete children.\n     */\n    CompoundWrite.prototype.getCompleteChildren = function () {\n        var children = [];\n        var node = this.writeTree_.value;\n        if (node != null) {\n            // If it's a leaf node, it has no children; so nothing to do.\n            if (!node.isLeafNode()) {\n                node.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (childName, childNode) {\n                    children.push(new _Node.NamedNode(childName, childNode));\n                });\n            }\n        } else {\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n                if (childTree.value != null) {\n                    children.push(new _Node.NamedNode(childName, childTree.value));\n                }\n            });\n        }\n        return children;\n    };\n    /**\n     * @param {!Path} path\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\n        if (path.isEmpty()) {\n            return this;\n        } else {\n            var shadowingNode = this.getCompleteNode(path);\n            if (shadowingNode != null) {\n                return new CompoundWrite(new _ImmutableTree.ImmutableTree(shadowingNode));\n            } else {\n                return new CompoundWrite(this.writeTree_.subtree(path));\n            }\n        }\n    };\n    /**\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n     * @return {boolean} Whether this CompoundWrite is empty\n     */\n    CompoundWrite.prototype.isEmpty = function () {\n        return this.writeTree_.isEmpty();\n    };\n    /**\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n     * node\n     * @param {!Node} node The node to apply this CompoundWrite to\n     * @return {!Node} The node with all writes applied\n     */\n    CompoundWrite.prototype.apply = function (node) {\n        return CompoundWrite.applySubtreeWrite_(_Path.Path.Empty, this.writeTree_, node);\n    };\n    /**\n     * @type {!CompoundWrite}\n     */\n    CompoundWrite.Empty = new CompoundWrite(new _ImmutableTree.ImmutableTree(null));\n    /**\n     * @param {!Path} relativePath\n     * @param {!ImmutableTree.<!Node>} writeTree\n     * @param {!Node} node\n     * @return {!Node}\n     * @private\n     */\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\n        if (writeTree.value != null) {\n            // Since there a write is always a leaf, we're done here\n            return node.updateChild(relativePath, writeTree.value);\n        } else {\n            var priorityWrite_1 = null;\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\n                if (childKey === '.priority') {\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n                    // to apply priorities to empty nodes that are later filled\n                    (0, _assert.assert)(childTree.value !== null, 'Priority writes must always be leaf nodes');\n                    priorityWrite_1 = childTree.value;\n                } else {\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\n                }\n            });\n            // If there was a priority write, we only apply it if the node is not empty\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n            }\n            return node;\n        }\n    };\n    return CompoundWrite;\n}();\nexports.CompoundWrite = CompoundWrite;\n\n\n},{\"../../utils/assert\":135,\"../../utils/obj\":144,\"./snap/Node\":37,\"./snap/indexes/PriorityIndex\":43,\"./util/ImmutableTree\":56,\"./util/Path\":59}],17:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PersistentConnection = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _app = require('../../app');\n\nvar _app2 = _interopRequireDefault(_app);\n\nvar _obj = require('../../utils/obj');\n\nvar _json = require('../../utils/json');\n\nvar _assert = require('../../utils/assert');\n\nvar _util = require('./util/util');\n\nvar _Path = require('./util/Path');\n\nvar _VisibilityMonitor = require('./util/VisibilityMonitor');\n\nvar _OnlineMonitor = require('./util/OnlineMonitor');\n\nvar _jwt = require('../../utils/jwt');\n\nvar _Connection = require('../realtime/Connection');\n\nvar _constants = require('../../utils/constants');\n\nvar _environment = require('../../utils/environment');\n\nvar _ServerActions = require('./ServerActions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nvar PersistentConnection = function (_super) {\n    __extends(PersistentConnection, _super);\n    /**\n     * @implements {ServerActions}\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param onConnectStatus_\n     * @param onServerInfoUpdate_\n     * @param authTokenProvider_\n     * @param authOverride_\n     */\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.onConnectStatus_ = onConnectStatus_;\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        _this.authOverride_ = authOverride_;\n        // Used for diagnostic logging.\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\n        _this.log_ = (0, _util.logWrapper)('p:' + _this.id + ':');\n        /** @private {Object} */\n        _this.interruptReasons_ = {};\n        _this.listens_ = {};\n        _this.outstandingPuts_ = [];\n        _this.outstandingPutCount_ = 0;\n        _this.onDisconnectRequestQueue_ = [];\n        _this.connected_ = false;\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n        _this.securityDebugCallback_ = null;\n        _this.lastSessionId = null;\n        /** @private {number|null} */\n        _this.establishConnectionTimer_ = null;\n        /** @private {boolean} */\n        _this.visible_ = false;\n        // Before we get connected, we keep a queue of pending messages to send.\n        _this.requestCBHash_ = {};\n        _this.requestNumber_ = 0;\n        /** @private {?{\n         *   sendRequest(Object),\n         *   close()\n         * }} */\n        _this.realtime_ = null;\n        /** @private {string|null} */\n        _this.authToken_ = null;\n        _this.forceTokenRefresh_ = false;\n        _this.invalidAuthTokenCount_ = 0;\n        _this.firstConnection_ = true;\n        _this.lastConnectionAttemptTime_ = null;\n        _this.lastConnectionEstablishedTime_ = null;\n        if (authOverride_ && !(0, _environment.isNodeSdk)()) {\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n        }\n        _this.scheduleConnect_(0);\n        _VisibilityMonitor.VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\n            _OnlineMonitor.OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n        }\n        return _this;\n    }\n    /**\n     * @param {!string} action\n     * @param {*} body\n     * @param {function(*)=} onResponse\n     * @protected\n     */\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n        var curReqNum = ++this.requestNumber_;\n        var msg = { r: curReqNum, a: action, b: body };\n        this.log_((0, _json.stringify)(msg));\n        (0, _assert.assert)(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n        this.realtime_.sendRequest(msg);\n        if (onResponse) {\n            this.requestCBHash_[curReqNum] = onResponse;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var queryId = query.queryIdentifier();\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\n        this.listens_[pathString] = this.listens_[pathString] || {};\n        (0, _assert.assert)(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n        (0, _assert.assert)(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\n        var listenSpec = {\n            onComplete: onComplete,\n            hashFn: currentHashFn,\n            query: query,\n            tag: tag\n        };\n        this.listens_[pathString][queryId] = listenSpec;\n        if (this.connected_) {\n            this.sendListen_(listenSpec);\n        }\n    };\n    /**\n     * @param {!{onComplete(),\n     *           hashFn():!string,\n     *           query: !Query,\n     *           tag: ?number}} listenSpec\n     * @private\n     */\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n        var _this = this;\n        var query = listenSpec.query;\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/p: pathString };\n        var action = 'q';\n        // Only bother to send query if it's non-default.\n        if (listenSpec.tag) {\n            req['q'] = query.queryObject();\n            req['t'] = listenSpec.tag;\n        }\n        req['h'] = listenSpec.hashFn();\n        this.sendRequest(action, req, function (message) {\n            var payload = message['d'];\n            var status = message['s'];\n            // print warnings in any case...\n            PersistentConnection.warnOnListenWarnings_(payload, query);\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\n            // only trigger actions if the listen hasn't been removed and readded\n            if (currentListenSpec === listenSpec) {\n                _this.log_('listen response', message);\n                if (status !== 'ok') {\n                    _this.removeListen_(pathString, queryId);\n                }\n                if (listenSpec.onComplete) {\n                    listenSpec.onComplete(status, payload);\n                }\n            }\n        });\n    };\n    /**\n     * @param {*} payload\n     * @param {!Query} query\n     * @private\n     */\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n        if (payload && (typeof payload === 'undefined' ? 'undefined' : _typeof(payload)) === 'object' && (0, _obj.contains)(payload, 'w')) {\n            var warnings = (0, _obj.safeGet)(payload, 'w');\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n                var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n                var indexPath = query.path.toString();\n                (0, _util.warn)('Using an unspecified index. Consider adding ' + indexSpec + ' at ' + indexPath + ' to your security rules for better performance');\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\n        this.authToken_ = token;\n        this.log_('Auth token refreshed');\n        if (this.authToken_) {\n            this.tryAuth();\n        } else {\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n            //the credential so we dont become authenticated next time we connect.\n            if (this.connected_) {\n                this.sendRequest('unauth', {}, function () {});\n            }\n        }\n        this.reduceReconnectDelayIfAdminCredential_(token);\n    };\n    /**\n     * @param {!string} credential\n     * @private\n     */\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n        var isFirebaseSecret = credential && credential.length === 40;\n        if (isFirebaseSecret || (0, _jwt.isAdmin)(credential)) {\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n        }\n    };\n    /**\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n     * a auth revoked (the connection is closed).\n     */\n    PersistentConnection.prototype.tryAuth = function () {\n        var _this = this;\n        if (this.connected_ && this.authToken_) {\n            var token_1 = this.authToken_;\n            var authMethod = (0, _jwt.isValidFormat)(token_1) ? 'auth' : 'gauth';\n            var requestData = { cred: token_1 };\n            if (this.authOverride_ === null) {\n                requestData['noauth'] = true;\n            } else if (_typeof(this.authOverride_) === 'object') {\n                requestData['authvar'] = this.authOverride_;\n            }\n            this.sendRequest(authMethod, requestData, function (res) {\n                var status = res['s'];\n                var data = res['d'] || 'error';\n                if (_this.authToken_ === token_1) {\n                    if (status === 'ok') {\n                        _this.invalidAuthTokenCount_ = 0;\n                    } else {\n                        // Triggers reconnect and force refresh for auth token\n                        _this.onAuthRevoked_(status, data);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.unlisten = function (query, tag) {\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n        (0, _assert.assert)(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && this.connected_) {\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n        }\n    };\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/p: pathString };\n        var action = 'n';\n        // Only bother sending queryId if it's non-default.\n        if (tag) {\n            req['q'] = queryObj;\n            req['t'] = tag;\n        }\n        this.sendRequest(action, req);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\n        } else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'o',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\n        } else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'om',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\n        } else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'oc',\n                data: null,\n                onComplete: onComplete\n            });\n        }\n    };\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n        var request = { /*path*/p: pathString, /*data*/d: data };\n        this.log_('onDisconnect ' + action, request);\n        this.sendRequest(action, request, function (response) {\n            if (onComplete) {\n                setTimeout(function () {\n                    onComplete(response['s'], response['d']);\n                }, Math.floor(0));\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n        this.putInternal('p', pathString, data, onComplete, hash);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n        this.putInternal('m', pathString, data, onComplete, hash);\n    };\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n        var request = {\n            /*path*/p: pathString,\n            /*data*/d: data\n        };\n        if (hash !== undefined) request['h'] = hash;\n        // TODO: Only keep track of the most recent put for a given path?\n        this.outstandingPuts_.push({\n            action: action,\n            request: request,\n            onComplete: onComplete\n        });\n        this.outstandingPutCount_++;\n        var index = this.outstandingPuts_.length - 1;\n        if (this.connected_) {\n            this.sendPut_(index);\n        } else {\n            this.log_('Buffering put: ' + pathString);\n        }\n    };\n    PersistentConnection.prototype.sendPut_ = function (index) {\n        var _this = this;\n        var action = this.outstandingPuts_[index].action;\n        var request = this.outstandingPuts_[index].request;\n        var onComplete = this.outstandingPuts_[index].onComplete;\n        this.outstandingPuts_[index].queued = this.connected_;\n        this.sendRequest(action, request, function (message) {\n            _this.log_(action + ' response', message);\n            delete _this.outstandingPuts_[index];\n            _this.outstandingPutCount_--;\n            // Clean up array occasionally.\n            if (_this.outstandingPutCount_ === 0) {\n                _this.outstandingPuts_ = [];\n            }\n            if (onComplete) onComplete(message['s'], message['d']);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.reportStats = function (stats) {\n        var _this = this;\n        // If we're not connected, we just drop the stats.\n        if (this.connected_) {\n            var request = { /*counters*/c: stats };\n            this.log_('reportStats', request);\n            this.sendRequest( /*stats*/'s', request, function (result) {\n                var status = result['s'];\n                if (status !== 'ok') {\n                    var errorReason = result['d'];\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n                }\n            });\n        }\n    };\n    /**\n     * @param {*} message\n     * @private\n     */\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\n        if ('r' in message) {\n            // this is a response\n            this.log_('from server: ' + (0, _json.stringify)(message));\n            var reqNum = message['r'];\n            var onResponse = this.requestCBHash_[reqNum];\n            if (onResponse) {\n                delete this.requestCBHash_[reqNum];\n                onResponse(message['b']);\n            }\n        } else if ('error' in message) {\n            throw 'A server-side error has occurred: ' + message['error'];\n        } else if ('a' in message) {\n            // a and b are action and body, respectively\n            this.onDataPush_(message['a'], message['b']);\n        }\n    };\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\n        this.log_('handleServerMessage', action, body);\n        if (action === 'd') this.onDataUpdate_(body['p'], body['d'],\n        /*isMerge*/false, body['t']);else if (action === 'm') this.onDataUpdate_(body['p'], body['d'],\n        /*isMerge=*/true, body['t']);else if (action === 'c') this.onListenRevoked_(body['p'], body['q']);else if (action === 'ac') this.onAuthRevoked_(body['s'], body['d']);else if (action === 'sd') this.onSecurityDebugPacket_(body);else (0, _util.error)('Unrecognized action received from server: ' + (0, _json.stringify)(action) + '\\nAre you using the latest client?');\n    };\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n        this.log_('connection ready');\n        this.connected_ = true;\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\n        this.handleTimestamp_(timestamp);\n        this.lastSessionId = sessionId;\n        if (this.firstConnection_) {\n            this.sendConnectStats_();\n        }\n        this.restoreState_();\n        this.firstConnection_ = false;\n        this.onConnectStatus_(true);\n    };\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n        var _this = this;\n        (0, _assert.assert)(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n        if (this.establishConnectionTimer_) {\n            clearTimeout(this.establishConnectionTimer_);\n        }\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n        this.establishConnectionTimer_ = setTimeout(function () {\n            _this.establishConnectionTimer_ = null;\n            _this.establishConnection_();\n        }, Math.floor(timeout));\n    };\n    /**\n     * @param {boolean} visible\n     * @private\n     */\n    PersistentConnection.prototype.onVisible_ = function (visible) {\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n        if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n            this.log_('Window became visible.  Reducing delay.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        this.visible_ = visible;\n    };\n    PersistentConnection.prototype.onOnline_ = function (online) {\n        if (online) {\n            this.log_('Browser went online.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        } else {\n            this.log_('Browser went offline.  Killing connection.');\n            if (this.realtime_) {\n                this.realtime_.close();\n            }\n        }\n    };\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n        this.log_('data client disconnected');\n        this.connected_ = false;\n        this.realtime_ = null;\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n        this.cancelSentTransactions_();\n        // Clear out the pending requests.\n        this.requestCBHash_ = {};\n        if (this.shouldReconnect_()) {\n            if (!this.visible_) {\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\n                this.reconnectDelay_ = this.maxReconnectDelay_;\n                this.lastConnectionAttemptTime_ = new Date().getTime();\n            } else if (this.lastConnectionEstablishedTime_) {\n                // If we've been connected long enough, reset reconnect delay to minimum.\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n                this.lastConnectionEstablishedTime_ = null;\n            }\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n            reconnectDelay = Math.random() * reconnectDelay;\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n            this.scheduleConnect_(reconnectDelay);\n            // Adjust reconnect delay for next time.\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n        }\n        this.onConnectStatus_(false);\n    };\n    PersistentConnection.prototype.establishConnection_ = function () {\n        if (this.shouldReconnect_()) {\n            this.log_('Making a connection attempt');\n            this.lastConnectionAttemptTime_ = new Date().getTime();\n            this.lastConnectionEstablishedTime_ = null;\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\n            var onReady_1 = this.onReady_.bind(this);\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n            var self_1 = this;\n            var lastSessionId_1 = this.lastSessionId;\n            var canceled_1 = false;\n            var connection_1 = null;\n            var closeFn_1 = function closeFn_1() {\n                if (connection_1) {\n                    connection_1.close();\n                } else {\n                    canceled_1 = true;\n                    onDisconnect_1();\n                }\n            };\n            var sendRequestFn = function sendRequestFn(msg) {\n                (0, _assert.assert)(connection_1, \"sendRequest call when we're not connected not allowed.\");\n                connection_1.sendRequest(msg);\n            };\n            this.realtime_ = {\n                close: closeFn_1,\n                sendRequest: sendRequestFn\n            };\n            var forceRefresh = this.forceTokenRefresh_;\n            this.forceTokenRefresh_ = false;\n            // First fetch auth token, and establish connection after fetching the token was successful\n            this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n                if (!canceled_1) {\n                    (0, _util.log)('getToken() completed. Creating connection.');\n                    self_1.authToken_ = result && result.accessToken;\n                    connection_1 = new _Connection.Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1,\n                    /* onKill= */function (reason) {\n                        (0, _util.warn)(reason + ' (' + self_1.repoInfo_.toString() + ')');\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n                    }, lastSessionId_1);\n                } else {\n                    (0, _util.log)('getToken() completed but was canceled');\n                }\n            }).then(null, function (error) {\n                self_1.log_('Failed to get token: ' + error);\n                if (!canceled_1) {\n                    if (_constants.CONSTANTS.NODE_ADMIN) {\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\n                        // But getToken() may also just have temporarily failed, so we still want to\n                        // continue retrying.\n                        (0, _util.warn)(error);\n                    }\n                    closeFn_1();\n                }\n            });\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.interrupt = function (reason) {\n        (0, _util.log)('Interrupting connection for reason: ' + reason);\n        this.interruptReasons_[reason] = true;\n        if (this.realtime_) {\n            this.realtime_.close();\n        } else {\n            if (this.establishConnectionTimer_) {\n                clearTimeout(this.establishConnectionTimer_);\n                this.establishConnectionTimer_ = null;\n            }\n            if (this.connected_) {\n                this.onRealtimeDisconnect_();\n            }\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.resume = function (reason) {\n        (0, _util.log)('Resuming connection for reason: ' + reason);\n        delete this.interruptReasons_[reason];\n        if ((0, _obj.isEmpty)(this.interruptReasons_)) {\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n    };\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n        var delta = timestamp - new Date().getTime();\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\n    };\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            var put = this.outstandingPuts_[i];\n            if (put && 'h' in put.request && put.queued) {\n                if (put.onComplete) put.onComplete('disconnect');\n                delete this.outstandingPuts_[i];\n                this.outstandingPutCount_--;\n            }\n        }\n        // Clean up array occasionally.\n        if (this.outstandingPutCount_ === 0) this.outstandingPuts_ = [];\n    };\n    /**\n     * @param {!string} pathString\n     * @param {Array.<*>=} query\n     * @private\n     */\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n        var queryId;\n        if (!query) {\n            queryId = 'default';\n        } else {\n            queryId = query.map(function (q) {\n                return (0, _util.ObjectToUniqueKey)(q);\n            }).join('$');\n        }\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && listen.onComplete) listen.onComplete('permission_denied');\n    };\n    /**\n     * @param {!string} pathString\n     * @param {!string} queryId\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\n     * @private\n     */\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n        var normalizedPathString = new _Path.Path(pathString).toString(); // normalize path.\n        var listen;\n        if (this.listens_[normalizedPathString] !== undefined) {\n            listen = this.listens_[normalizedPathString][queryId];\n            delete this.listens_[normalizedPathString][queryId];\n            if ((0, _obj.getCount)(this.listens_[normalizedPathString]) === 0) {\n                delete this.listens_[normalizedPathString];\n            }\n        } else {\n            // all listens for this path has already been removed\n            listen = undefined;\n        }\n        return listen;\n    };\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n        (0, _util.log)('Auth token revoked: ' + statusCode + '/' + explanation);\n        this.authToken_ = null;\n        this.forceTokenRefresh_ = true;\n        this.realtime_.close();\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n            // We'll wait a couple times before logging the warning / increasing the\n            // retry period since oauth tokens will report as \"invalid\" if they're\n            // just expired. Plus there may be transient issues that resolve themselves.\n            this.invalidAuthTokenCount_++;\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n                // Set a long reconnect delay because recovery is unlikely\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n                // Notify the auth token provider that the token is invalid, which will log\n                // a warning\n                this.authTokenProvider_.notifyForInvalidToken();\n            }\n        }\n    };\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n        if (this.securityDebugCallback_) {\n            this.securityDebugCallback_(body);\n        } else {\n            if ('msg' in body && typeof console !== 'undefined') {\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n            }\n        }\n    };\n    PersistentConnection.prototype.restoreState_ = function () {\n        var _this = this;\n        //Re-authenticate ourselves if we have a credential stored.\n        this.tryAuth();\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\n        // make sure to send listens before puts.\n        (0, _obj.forEach)(this.listens_, function (pathString, queries) {\n            (0, _obj.forEach)(queries, function (key, listenSpec) {\n                _this.sendListen_(listenSpec);\n            });\n        });\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            if (this.outstandingPuts_[i]) this.sendPut_(i);\n        }\n        while (this.onDisconnectRequestQueue_.length) {\n            var request = this.onDisconnectRequestQueue_.shift();\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n        }\n    };\n    /**\n     * Sends client stats for first connection\n     * @private\n     */\n    PersistentConnection.prototype.sendConnectStats_ = function () {\n        var stats = {};\n        var clientName = 'js';\n        if (_constants.CONSTANTS.NODE_ADMIN) {\n            clientName = 'admin_node';\n        } else if (_constants.CONSTANTS.NODE_CLIENT) {\n            clientName = 'node';\n        }\n        stats['sdk.' + clientName + '.' + _app2.default.SDK_VERSION.replace(/\\./g, '-')] = 1;\n        if ((0, _environment.isMobileCordova)()) {\n            stats['framework.cordova'] = 1;\n        } else if ((0, _environment.isReactNative)()) {\n            stats['framework.reactnative'] = 1;\n        }\n        this.reportStats(stats);\n    };\n    /**\n     * @return {boolean}\n     * @private\n     */\n    PersistentConnection.prototype.shouldReconnect_ = function () {\n        var online = _OnlineMonitor.OnlineMonitor.getInstance().currentlyOnline();\n        return (0, _obj.isEmpty)(this.interruptReasons_) && online;\n    };\n    /**\n     * @private\n     */\n    PersistentConnection.nextPersistentConnectionId_ = 0;\n    /**\n     * Counter for number of connections created. Mainly used for tagging in the logs\n     * @type {number}\n     * @private\n     */\n    PersistentConnection.nextConnectionId_ = 0;\n    return PersistentConnection;\n}(_ServerActions.ServerActions);\nexports.PersistentConnection = PersistentConnection;\n\n\n},{\"../../app\":1,\"../../utils/assert\":135,\"../../utils/constants\":136,\"../../utils/environment\":139,\"../../utils/json\":142,\"../../utils/jwt\":143,\"../../utils/obj\":144,\"../realtime/Connection\":83,\"./ServerActions\":23,\"./util/OnlineMonitor\":58,\"./util/Path\":59,\"./util/VisibilityMonitor\":63,\"./util/util\":65}],18:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ReadonlyRestClient = undefined;\n\nvar _assert = require('../../utils/assert');\n\nvar _util = require('./util/util');\n\nvar _json = require('../../utils/json');\n\nvar _obj = require('../../utils/obj');\n\nvar _util2 = require('../../utils/util');\n\nvar _ServerActions = require('./ServerActions');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nvar ReadonlyRestClient = function (_super) {\n    __extends(ReadonlyRestClient, _super);\n    /**\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param {AuthTokenProvider} authTokenProvider_\n     * @implements {ServerActions}\n     */\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        /** @private {function(...[*])} */\n        _this.log_ = (0, _util.logWrapper)('p:rest:');\n        /**\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n         * that's been removed. :-/\n         *\n         * @private {!Object.<string, !Object>}\n         */\n        _this.listens_ = {};\n        return _this;\n    }\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {!Query} query\n     * @param {?number=} tag\n     * @return {string}\n     * @private\n     */\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\n        if (tag !== undefined) {\n            return 'tag$' + tag;\n        } else {\n            (0, _assert.assert)(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n            return query.path.toString();\n        }\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var _this = this;\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\n        // Mark this listener so we can tell if it's removed.\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        var thisListen = {};\n        this.listens_[listenId] = thisListen;\n        var queryStringParamaters = query.getQueryParams().toRestQueryStringParameters();\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error, result) {\n            var data = result;\n            if (error === 404) {\n                data = null;\n                error = null;\n            }\n            if (error === null) {\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/false, tag);\n            }\n            if ((0, _obj.safeGet)(_this.listens_, listenId) === thisListen) {\n                var status_1;\n                if (!error) {\n                    status_1 = 'ok';\n                } else if (error == 401) {\n                    status_1 = 'permission_denied';\n                } else {\n                    status_1 = 'rest_error:' + error;\n                }\n                onComplete(status_1, null);\n            }\n        });\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        delete this.listens_[listenId];\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\n        // no-op since we just always call getToken.\n    };\n    /**\n     * Performs a REST request to the given path, with the provided query string parameters,\n     * and any auth credentials we have.\n     *\n     * @param {!string} pathString\n     * @param {!Object.<string, *>} queryStringParameters\n     * @param {?function(?number, *=)} callback\n     * @private\n     */\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n        var _this = this;\n        if (queryStringParameters === void 0) {\n            queryStringParameters = {};\n        }\n        queryStringParameters['format'] = 'export';\n        this.authTokenProvider_.getToken( /*forceRefresh=*/false).then(function (authTokenData) {\n            var authToken = authTokenData && authTokenData.accessToken;\n            if (authToken) {\n                queryStringParameters['auth'] = authToken;\n            }\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + (0, _util2.querystring)(queryStringParameters);\n            _this.log_('Sending REST request for ' + url);\n            var xhr = new XMLHttpRequest();\n            xhr.onreadystatechange = function () {\n                if (callback && xhr.readyState === 4) {\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n                    var res = null;\n                    if (xhr.status >= 200 && xhr.status < 300) {\n                        try {\n                            res = (0, _json.jsonEval)(xhr.responseText);\n                        } catch (e) {\n                            (0, _util.warn)('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n                        }\n                        callback(null, res);\n                    } else {\n                        // 401 and 404 are expected.\n                        if (xhr.status !== 401 && xhr.status !== 404) {\n                            (0, _util.warn)('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n                        }\n                        callback(xhr.status);\n                    }\n                    callback = null;\n                }\n            };\n            xhr.open('GET', url, /*asynchronous=*/true);\n            xhr.send();\n        });\n    };\n    return ReadonlyRestClient;\n}(_ServerActions.ServerActions);\nexports.ReadonlyRestClient = ReadonlyRestClient;\n\n\n},{\"../../utils/assert\":135,\"../../utils/json\":142,\"../../utils/obj\":144,\"../../utils/util\":148,\"./ServerActions\":23,\"./util/util\":65}],19:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Repo = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nvar _ServerValues = require('./util/ServerValues');\n\nvar _nodeFromJSON = require('./snap/nodeFromJSON');\n\nvar _Path = require('./util/Path');\n\nvar _SparseSnapshotTree = require('./SparseSnapshotTree');\n\nvar _SyncTree = require('./SyncTree');\n\nvar _SnapshotHolder = require('./SnapshotHolder');\n\nvar _json = require('../../utils/json');\n\nvar _util = require('./util/util');\n\nvar _obj = require('../../utils/obj');\n\nvar _AuthTokenProvider = require('./AuthTokenProvider');\n\nvar _StatsManager = require('./stats/StatsManager');\n\nvar _StatsReporter = require('./stats/StatsReporter');\n\nvar _StatsListener = require('./stats/StatsListener');\n\nvar _EventQueue = require('./view/EventQueue');\n\nvar _PersistentConnection = require('./PersistentConnection');\n\nvar _ReadonlyRestClient = require('./ReadonlyRestClient');\n\nvar _Database = require('../api/Database');\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\n * A connection to a single data repository.\n */\nvar Repo = function () {\n    /**\n     * @param {!RepoInfo} repoInfo_\n     * @param {boolean} forceRestClient\n     * @param {!FirebaseApp} app\n     */\n    function Repo(repoInfo_, forceRestClient, app) {\n        var _this = this;\n        this.repoInfo_ = repoInfo_;\n        this.app = app;\n        this.dataUpdateCount = 0;\n        this.statsListener_ = null;\n        this.eventQueue_ = new _EventQueue.EventQueue();\n        this.nextWriteId_ = 1;\n        this.interceptServerDataCallback_ = null;\n        // A list of data pieces and paths to be set when this client disconnects.\n        this.onDisconnect_ = new _SparseSnapshotTree.SparseSnapshotTree();\n        /**\n         * TODO: This should be @private but it's used by test_access.js and internal.js\n         * @type {?PersistentConnection}\n         */\n        this.persistentConnection_ = null;\n        /** @type {!AuthTokenProvider} */\n        var authTokenProvider = new _AuthTokenProvider.AuthTokenProvider(app);\n        this.stats_ = _StatsManager.StatsManager.getCollection(repoInfo_);\n        if (forceRestClient || (0, _util.beingCrawled)()) {\n            this.server_ = new _ReadonlyRestClient.ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\n        } else {\n            var authOverride = app.options['databaseAuthVariableOverride'];\n            // Validate authOverride\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\n                if ((typeof authOverride === 'undefined' ? 'undefined' : _typeof(authOverride)) !== 'object') {\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n                }\n                try {\n                    (0, _json.stringify)(authOverride);\n                } catch (e) {\n                    throw new Error('Invalid authOverride provided: ' + e);\n                }\n            }\n            this.persistentConnection_ = new _PersistentConnection.PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n            this.server_ = this.persistentConnection_;\n        }\n        authTokenProvider.addTokenChangeListener(function (token) {\n            _this.server_.refreshAuthToken(token);\n        });\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n        this.statsReporter_ = _StatsManager.StatsManager.getOrCreateReporter(repoInfo_, function () {\n            return new _StatsReporter.StatsReporter(_this.stats_, _this.server_);\n        });\n        this.transactions_init_();\n        // Used for .info.\n        this.infoData_ = new _SnapshotHolder.SnapshotHolder();\n        this.infoSyncTree_ = new _SyncTree.SyncTree({\n            startListening: function startListening(query, tag, currentHashFn, onComplete) {\n                var infoEvents = [];\n                var node = _this.infoData_.getNode(query.path);\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n                // on initial data...\n                if (!node.isEmpty()) {\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n                    setTimeout(function () {\n                        onComplete('ok');\n                    }, 0);\n                }\n                return infoEvents;\n            },\n            stopListening: function stopListening() {}\n        });\n        this.updateInfo_('connected', false);\n        this.serverSyncTree_ = new _SyncTree.SyncTree({\n            startListening: function startListening(query, tag, currentHashFn, onComplete) {\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n                    var events = onComplete(status, data);\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n                });\n                // No synchronous events for network-backed sync trees\n                return [];\n            },\n            stopListening: function stopListening(query, tag) {\n                _this.server_.unlisten(query, tag);\n            }\n        });\n    }\n    /**\n     * @return {string}  The URL corresponding to the root of this Firebase.\n     */\n    Repo.prototype.toString = function () {\n        return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n    };\n    /**\n     * @return {!string} The namespace represented by the repo.\n     */\n    Repo.prototype.name = function () {\n        return this.repoInfo_.namespace;\n    };\n    /**\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\n     */\n    Repo.prototype.serverTime = function () {\n        var offsetNode = this.infoData_.getNode(new _Path.Path('.info/serverTimeOffset'));\n        var offset = offsetNode.val() || 0;\n        return new Date().getTime() + offset;\n    };\n    /**\n     * Generate ServerValues using some variables from the repo object.\n     * @return {!Object}\n     */\n    Repo.prototype.generateServerValues = function () {\n        return (0, _ServerValues.generateWithValues)({\n            timestamp: this.serverTime()\n        });\n    };\n    /**\n     * Called by realtime when we get new messages from the server.\n     *\n     * @private\n     * @param {string} pathString\n     * @param {*} data\n     * @param {boolean} isMerge\n     * @param {?number} tag\n     */\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n        // For testing.\n        this.dataUpdateCount++;\n        var path = new _Path.Path(pathString);\n        data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;\n        var events = [];\n        if (tag) {\n            if (isMerge) {\n                var taggedChildren = (0, _obj.map)(data, function (raw) {\n                    return (0, _nodeFromJSON.nodeFromJSON)(raw);\n                });\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n            } else {\n                var taggedSnap = (0, _nodeFromJSON.nodeFromJSON)(data);\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n            }\n        } else if (isMerge) {\n            var changedChildren = (0, _obj.map)(data, function (raw) {\n                return (0, _nodeFromJSON.nodeFromJSON)(raw);\n            });\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n        } else {\n            var snap = (0, _nodeFromJSON.nodeFromJSON)(data);\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n        }\n        var affectedPath = path;\n        if (events.length > 0) {\n            // Since we have a listener outstanding for each transaction, receiving any events\n            // is a proxy for some change having occurred.\n            affectedPath = this.rerunTransactions_(path);\n        }\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n    };\n    /**\n     * TODO: This should be @private but it's used by test_access.js and internal.js\n     * @param {?function(!string, *):*} callback\n     * @private\n     */\n    Repo.prototype.interceptServerData_ = function (callback) {\n        this.interceptServerDataCallback_ = callback;\n    };\n    /**\n     * @param {!boolean} connectStatus\n     * @private\n     */\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\n        this.updateInfo_('connected', connectStatus);\n        if (connectStatus === false) {\n            this.runOnDisconnectEvents_();\n        }\n    };\n    /**\n     * @param {!Object} updates\n     * @private\n     */\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\n        var _this = this;\n        (0, _util.each)(updates, function (value, key) {\n            _this.updateInfo_(key, value);\n        });\n    };\n    /**\n     *\n     * @param {!string} pathString\n     * @param {*} value\n     * @private\n     */\n    Repo.prototype.updateInfo_ = function (pathString, value) {\n        var path = new _Path.Path('/.info/' + pathString);\n        var newNode = (0, _nodeFromJSON.nodeFromJSON)(value);\n        this.infoData_.updateSnapshot(path, newNode);\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n    };\n    /**\n     * @return {!number}\n     * @private\n     */\n    Repo.prototype.getNextWriteId_ = function () {\n        return this.nextWriteId_++;\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} newVal\n     * @param {number|string|null} newPriority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n        var _this = this;\n        this.log_('set', {\n            path: path.toString(),\n            value: newVal,\n            priority: newPriority\n        });\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n        // (b) store unresolved paths on JSON parse\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = (0, _nodeFromJSON.nodeFromJSON)(newVal, newPriority);\n        var newNode = (0, _ServerValues.resolveDeferredValueSnapshot)(newNodeUnresolved, serverValues);\n        var writeId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n        this.eventQueue_.queueEvents(events);\n        this.server_.put(path.toString(), newNodeUnresolved.val( /*export=*/true), function (status, errorReason) {\n            var success = status === 'ok';\n            if (!success) {\n                (0, _util.warn)('set at ' + path + ' failed: ' + status);\n            }\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n        var affectedPath = this.abortTransactions_(path);\n        this.rerunTransactions_(affectedPath);\n        // We queued the events above, so just flush the queue here\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n    };\n    /**\n     * @param {!Path} path\n     * @param {!Object} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\n        // Start with our existing data and merge each child into it.\n        var empty = true;\n        var serverValues = this.generateServerValues();\n        var changedChildren = {};\n        (0, _obj.forEach)(childrenToMerge, function (changedKey, changedValue) {\n            empty = false;\n            var newNodeUnresolved = (0, _nodeFromJSON.nodeFromJSON)(changedValue);\n            changedChildren[changedKey] = (0, _ServerValues.resolveDeferredValueSnapshot)(newNodeUnresolved, serverValues);\n        });\n        if (!empty) {\n            var writeId_1 = this.getNextWriteId_();\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n            this.eventQueue_.queueEvents(events);\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n                var success = status === 'ok';\n                if (!success) {\n                    (0, _util.warn)('update at ' + path + ' failed: ' + status);\n                }\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\n            });\n            (0, _obj.forEach)(childrenToMerge, function (changedPath) {\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\n                _this.rerunTransactions_(affectedPath);\n            });\n            // We queued the events above, so just flush the queue here\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\n        } else {\n            (0, _util.log)(\"update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n        }\n    };\n    /**\n     * Applies all of the changes stored up in the onDisconnect_ tree.\n     * @private\n     */\n    Repo.prototype.runOnDisconnectEvents_ = function () {\n        var _this = this;\n        this.log_('onDisconnectEvents');\n        var serverValues = this.generateServerValues();\n        var resolvedOnDisconnectTree = (0, _ServerValues.resolveDeferredValueTree)(this.onDisconnect_, serverValues);\n        var events = [];\n        resolvedOnDisconnectTree.forEachTree(_Path.Path.Empty, function (path, snap) {\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n            var affectedPath = _this.abortTransactions_(path);\n            _this.rerunTransactions_(affectedPath);\n        });\n        this.onDisconnect_ = new _SparseSnapshotTree.SparseSnapshotTree();\n        this.eventQueue_.raiseEventsForChangedPath(_Path.Path.Empty, events);\n    };\n    /**\n     * @param {!Path} path\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n        var _this = this;\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.forget(path);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n        var _this = this;\n        var newNode = (0, _nodeFromJSON.nodeFromJSON)(value);\n        this.server_.onDisconnectPut(path.toString(), newNode.val( /*export=*/true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {*} priority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n        var _this = this;\n        var newNode = (0, _nodeFromJSON.nodeFromJSON)(value, priority);\n        this.server_.onDisconnectPut(path.toString(), newNode.val( /*export=*/true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        if ((0, _obj.isEmpty)(childrenToMerge)) {\n            (0, _util.log)(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n            return;\n        }\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n            if (status === 'ok') {\n                (0, _obj.forEach)(childrenToMerge, function (childName, childNode) {\n                    var newChildNode = (0, _nodeFromJSON.nodeFromJSON)(childNode);\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\n                });\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     */\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n        } else {\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    /**\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration\n     */\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n        // a little bit by handling the return values anyways.\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n        } else {\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    Repo.prototype.interrupt = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.resume = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.resume(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.stats = function (showDelta) {\n        if (showDelta === void 0) {\n            showDelta = false;\n        }\n        if (typeof console === 'undefined') return;\n        var stats;\n        if (showDelta) {\n            if (!this.statsListener_) this.statsListener_ = new _StatsListener.StatsListener(this.stats_);\n            stats = this.statsListener_.get();\n        } else {\n            stats = this.stats_.get();\n        }\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n            return Math.max(currentValue.length, previousValue);\n        }, 0);\n        (0, _obj.forEach)(stats, function (stat, value) {\n            // pad stat names to be the same length (plus 2 extra spaces).\n            for (var i = stat.length; i < longestName + 2; i++) {\n                stat += ' ';\n            }console.log(stat + value);\n        });\n    };\n    Repo.prototype.statsIncrementCounter = function (metric) {\n        this.stats_.incrementCounter(metric);\n        this.statsReporter_.includeStat(metric);\n    };\n    /**\n     * @param {...*} var_args\n     * @private\n     */\n    Repo.prototype.log_ = function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        var prefix = '';\n        if (this.persistentConnection_) {\n            prefix = this.persistentConnection_.id + ':';\n        }\n        _util.log.apply(void 0, [prefix].concat(var_args));\n    };\n    /**\n     * @param {?function(?Error, *=)} callback\n     * @param {!string} status\n     * @param {?string=} errorReason\n     */\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n        if (callback) {\n            (0, _util.exceptionGuard)(function () {\n                if (status == 'ok') {\n                    callback(null);\n                } else {\n                    var code = (status || 'error').toUpperCase();\n                    var message = code;\n                    if (errorReason) message += ': ' + errorReason;\n                    var error = new Error(message);\n                    error.code = code;\n                    callback(error);\n                }\n            });\n        }\n    };\n    Object.defineProperty(Repo.prototype, \"database\", {\n        get: function get() {\n            return this.__database || (this.__database = new _Database.Database(this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Repo;\n}();\nexports.Repo = Repo;\n\n\n},{\"../../utils/json\":142,\"../../utils/obj\":144,\"../api/Database\":8,\"./AuthTokenProvider\":15,\"./PersistentConnection\":17,\"./ReadonlyRestClient\":18,\"./SnapshotHolder\":24,\"./SparseSnapshotTree\":25,\"./SyncTree\":27,\"./snap/nodeFromJSON\":45,\"./stats/StatsListener\":48,\"./stats/StatsManager\":49,\"./stats/StatsReporter\":50,\"./util/Path\":59,\"./util/ServerValues\":60,\"./util/util\":65,\"./view/EventQueue\":73}],20:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RepoInfo = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nvar _assert = require('../../utils/assert');\n\nvar _obj = require('../../utils/obj');\n\nvar _storage = require('./storage/storage');\n\nvar _Constants = require('../realtime/Constants');\n\n/**\n * A class that holds metadata about a Repo object\n *\n * @constructor\n */\nvar RepoInfo = function () {\n    /**\n     * @param {string} host Hostname portion of the url for the repo\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\n     * @param {string} namespace The namespace represented by the repo\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\n     * @param {string=} persistenceKey Override the default session persistence storage key\n     */\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\n        if (persistenceKey === void 0) {\n            persistenceKey = '';\n        }\n        this.secure = secure;\n        this.namespace = namespace;\n        this.webSocketOnly = webSocketOnly;\n        this.persistenceKey = persistenceKey;\n        this.host = host.toLowerCase();\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\n        this.internalHost = _storage.PersistentStorage.get('host:' + host) || this.host;\n    }\n    RepoInfo.prototype.needsQueryParam = function () {\n        return this.host !== this.internalHost;\n    };\n    RepoInfo.prototype.isCacheableHost = function () {\n        return this.internalHost.substr(0, 2) === 's-';\n    };\n    RepoInfo.prototype.isDemoHost = function () {\n        return this.domain === 'firebaseio-demo.com';\n    };\n    RepoInfo.prototype.isCustomHost = function () {\n        return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';\n    };\n    RepoInfo.prototype.updateHost = function (newHost) {\n        if (newHost !== this.internalHost) {\n            this.internalHost = newHost;\n            if (this.isCacheableHost()) {\n                _storage.PersistentStorage.set('host:' + this.host, this.internalHost);\n            }\n        }\n    };\n    /**\n     * Returns the websocket URL for this repo\n     * @param {string} type of connection\n     * @param {Object} params list\n     * @return {string} The URL for this repo\n     */\n    RepoInfo.prototype.connectionURL = function (type, params) {\n        (0, _assert.assert)(typeof type === 'string', 'typeof type must == string');\n        (0, _assert.assert)((typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object', 'typeof params must == object');\n        var connURL;\n        if (type === _Constants.WEBSOCKET) {\n            connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n        } else if (type === _Constants.LONG_POLLING) {\n            connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n        } else {\n            throw new Error('Unknown connection type: ' + type);\n        }\n        if (this.needsQueryParam()) {\n            params['ns'] = this.namespace;\n        }\n        var pairs = [];\n        (0, _obj.forEach)(params, function (key, value) {\n            pairs.push(key + '=' + value);\n        });\n        return connURL + pairs.join('&');\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toString = function () {\n        var str = this.toURLString();\n        if (this.persistenceKey) {\n            str += '<' + this.persistenceKey + '>';\n        }\n        return str;\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toURLString = function () {\n        return (this.secure ? 'https://' : 'http://') + this.host;\n    };\n    return RepoInfo;\n}();\nexports.RepoInfo = RepoInfo;\n\n\n},{\"../../utils/assert\":135,\"../../utils/obj\":144,\"../realtime/Constants\":84,\"./storage/storage\":53}],21:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RepoManager = undefined;\n\nvar _obj = require('../../utils/obj');\n\nvar _Repo = require('./Repo');\n\nvar _util = require('./util/util');\n\nvar _parser = require('./util/libs/parser');\n\nvar _validation = require('./util/validation');\n\nrequire('./Repo_transaction');\n\n/** @const {string} */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar DATABASE_URL_OPTION = 'databaseURL';\nvar _staticInstance;\n/**\n * Creates and caches Repo instances.\n */\nvar RepoManager = function () {\n    function RepoManager() {\n        /**\n         * @private {!Object.<string, !Repo>}\n         */\n        this.repos_ = {};\n        /**\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\n         * @private {boolean}\n         */\n        this.useRestClient_ = false;\n    }\n    RepoManager.getInstance = function () {\n        if (!_staticInstance) {\n            _staticInstance = new RepoManager();\n        }\n        return _staticInstance;\n    };\n    // TODO(koss): Remove these functions unless used in tests?\n    RepoManager.prototype.interrupt = function () {\n        for (var repo in this.repos_) {\n            this.repos_[repo].interrupt();\n        }\n    };\n    RepoManager.prototype.resume = function () {\n        for (var repo in this.repos_) {\n            this.repos_[repo].resume();\n        }\n    };\n    /**\n     * This function should only ever be called to CREATE a new database instance.\n     *\n     * @param {!FirebaseApp} app\n     * @return {!Database}\n     */\n    RepoManager.prototype.databaseFromApp = function (app) {\n        var dbUrl = app.options[DATABASE_URL_OPTION];\n        if (dbUrl === undefined) {\n            (0, _util.fatal)(\"Can't determine Firebase Database URL.  Be sure to include \" + DATABASE_URL_OPTION + ' option when calling firebase.intializeApp().');\n        }\n        var parsedUrl = (0, _parser.parseRepoInfo)(dbUrl);\n        var repoInfo = parsedUrl.repoInfo;\n        (0, _validation.validateUrl)('Invalid Firebase Database URL', 1, parsedUrl);\n        if (!parsedUrl.path.isEmpty()) {\n            (0, _util.fatal)('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n        }\n        var repo = this.createRepo(repoInfo, app);\n        return repo.database;\n    };\n    /**\n     * Remove the repo and make sure it is disconnected.\n     *\n     * @param {!Repo} repo\n     */\n    RepoManager.prototype.deleteRepo = function (repo) {\n        // This should never happen...\n        if ((0, _obj.safeGet)(this.repos_, repo.app.name) !== repo) {\n            (0, _util.fatal)('Database ' + repo.app.name + ' has already been deleted.');\n        }\n        repo.interrupt();\n        delete this.repos_[repo.app.name];\n    };\n    /**\n     * Ensures a repo doesn't already exist and then creates one using the\n     * provided app.\n     *\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\n     * @param {!FirebaseApp} app\n     * @return {!Repo} The Repo object for the specified server / repoName.\n     */\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\n        var repo = (0, _obj.safeGet)(this.repos_, app.name);\n        if (repo) {\n            (0, _util.fatal)('FIREBASE INTERNAL ERROR: Database initialized multiple times.');\n        }\n        repo = new _Repo.Repo(repoInfo, this.useRestClient_, app);\n        this.repos_[app.name] = repo;\n        return repo;\n    };\n    /**\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n     * @param {boolean} forceRestClient\n     */\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\n        this.useRestClient_ = forceRestClient;\n    };\n    return RepoManager;\n}();\nexports.RepoManager = RepoManager;\n\n\n},{\"../../utils/obj\":144,\"./Repo\":19,\"./Repo_transaction\":22,\"./util/libs/parser\":64,\"./util/util\":65,\"./util/validation\":66}],22:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TransactionStatus = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nvar _assert = require('../../utils/assert');\n\nvar _Reference = require('../api/Reference');\n\nvar _DataSnapshot = require('../api/DataSnapshot');\n\nvar _Path = require('./util/Path');\n\nvar _Tree = require('./util/Tree');\n\nvar _PriorityIndex = require('./snap/indexes/PriorityIndex');\n\nvar _util = require('./util/util');\n\nvar _ServerValues = require('./util/ServerValues');\n\nvar _validation = require('./util/validation');\n\nvar _obj = require('../../utils/obj');\n\nvar _nodeFromJSON = require('./snap/nodeFromJSON');\n\nvar _ChildrenNode = require('./snap/ChildrenNode');\n\nvar _Repo = require('./Repo');\n\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n/**\n * @enum {number}\n */\nvar TransactionStatus = exports.TransactionStatus = undefined;\n(function (TransactionStatus) {\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n    // mismatched hash.\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n    // or rejected yet).\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n    // removed when we get a chance to prune completed ones.\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n    // If it comes back as unsuccessful, we'll abort it.\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\n    // Temporary state used to mark transactions that need to be aborted.\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus || (exports.TransactionStatus = TransactionStatus = {}));\n/**\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\n * @type {number}\n * @const\n * @private\n */\n_Repo.Repo.MAX_TRANSACTION_RETRIES_ = 25;\n/**\n * Setup the transaction data structures\n * @private\n */\n_Repo.Repo.prototype.transactions_init_ = function () {\n    /**\n     * Stores queues of outstanding transactions for Firebase locations.\n     *\n     * @type {!Tree.<Array.<!Transaction>>}\n     * @private\n     */\n    this.transactionQueueTree_ = new _Tree.Tree();\n};\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\n *\n * @param {!Path} path Path at which to do transaction.\n * @param {function(*):*} transactionUpdate Update callback.\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\n */\n_Repo.Repo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n    this.log_('transaction on ' + path);\n    // Add a watch to make sure we get server updates.\n    var valueCallback = function valueCallback() {};\n    var watchRef = new _Reference.Reference(this, path);\n    watchRef.on('value', valueCallback);\n    var unwatcher = function unwatcher() {\n        watchRef.off('value', valueCallback);\n    };\n    // Initialize transaction.\n    var transaction = {\n        path: path,\n        update: transactionUpdate,\n        onComplete: onComplete,\n        // One of TransactionStatus enums.\n        status: null,\n        // Used when combining transactions at different locations to figure out which one goes first.\n        order: (0, _util.LUIDGenerator)(),\n        // Whether to raise local events for this transaction.\n        applyLocally: applyLocally,\n        // Count of how many times we've retried the transaction.\n        retryCount: 0,\n        // Function to call to clean up our .on() listener.\n        unwatcher: unwatcher,\n        // Stores why a transaction was aborted.\n        abortReason: null,\n        currentWriteId: null,\n        currentInputSnapshot: null,\n        currentOutputSnapshotRaw: null,\n        currentOutputSnapshotResolved: null\n    };\n    // Run transaction initially.\n    var currentState = this.getLatestState_(path);\n    transaction.currentInputSnapshot = currentState;\n    var newVal = transaction.update(currentState.val());\n    if (newVal === undefined) {\n        // Abort transaction.\n        transaction.unwatcher();\n        transaction.currentOutputSnapshotRaw = null;\n        transaction.currentOutputSnapshotResolved = null;\n        if (transaction.onComplete) {\n            // We just set the input snapshot, so this cast should be safe\n            var snapshot = new _DataSnapshot.DataSnapshot(transaction.currentInputSnapshot, new _Reference.Reference(this, transaction.path), _PriorityIndex.PRIORITY_INDEX);\n            transaction.onComplete(null, false, snapshot);\n        }\n    } else {\n        (0, _validation.validateFirebaseData)('transaction failed: Data returned ', newVal, transaction.path);\n        // Mark as run and add to our queue.\n        transaction.status = TransactionStatus.RUN;\n        var queueNode = this.transactionQueueTree_.subTree(path);\n        var nodeQueue = queueNode.getValue() || [];\n        nodeQueue.push(transaction);\n        queueNode.setValue(nodeQueue);\n        // Update visibleData and raise events\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\n        // start new transactions from the event callbacks.\n        var priorityForNode = void 0;\n        if ((typeof newVal === 'undefined' ? 'undefined' : _typeof(newVal)) === 'object' && newVal !== null && (0, _obj.contains)(newVal, '.priority')) {\n            priorityForNode = (0, _obj.safeGet)(newVal, '.priority');\n            (0, _assert.assert)((0, _validation.isValidPriority)(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n        } else {\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || _ChildrenNode.ChildrenNode.EMPTY_NODE;\n            priorityForNode = currentNode.getPriority().val();\n        }\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = (0, _nodeFromJSON.nodeFromJSON)(newVal, priorityForNode);\n        var newNode = (0, _ServerValues.resolveDeferredValueSnapshot)(newNodeUnresolved, serverValues);\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n        transaction.currentOutputSnapshotResolved = newNode;\n        transaction.currentWriteId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n        this.sendReadyTransactions_();\n    }\n};\n/**\n * @param {!Path} path\n * @param {Array.<number>=} excludeSets A specific set to exclude\n * @return {Node}\n * @private\n */\n_Repo.Repo.prototype.getLatestState_ = function (path, excludeSets) {\n    return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || _ChildrenNode.ChildrenNode.EMPTY_NODE;\n};\n/**\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\n * complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively with a particular\n * transactionQueueTree node to recurse through the tree.\n *\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\n * @private\n */\n_Repo.Repo.prototype.sendReadyTransactions_ = function (node) {\n    var _this = this;\n    if (node === void 0) {\n        node = this.transactionQueueTree_;\n    }\n    // Before recursing, make sure any completed transactions are removed.\n    if (!node) {\n        this.pruneCompletedTransactionsBelowNode_(node);\n    }\n    if (node.getValue() !== null) {\n        var queue = this.buildTransactionQueue_(node);\n        (0, _assert.assert)(queue.length > 0, 'Sending zero length transaction queue');\n        var allRun = queue.every(function (transaction) {\n            return transaction.status === TransactionStatus.RUN;\n        });\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\n        if (allRun) {\n            this.sendTransactionQueue_(node.path(), queue);\n        }\n    } else if (node.hasChildren()) {\n        node.forEachChild(function (childNode) {\n            _this.sendReadyTransactions_(childNode);\n        });\n    }\n};\n/**\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\n *\n * @param {!Path} path The location of the queue.\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\n * @private\n */\n_Repo.Repo.prototype.sendTransactionQueue_ = function (path, queue) {\n    var _this = this;\n    // Mark transactions as sent and increment retry count!\n    var setsToIgnore = queue.map(function (txn) {\n        return txn.currentWriteId;\n    });\n    var latestState = this.getLatestState_(path, setsToIgnore);\n    var snapToSend = latestState;\n    var latestHash = latestState.hash();\n    for (var i = 0; i < queue.length; i++) {\n        var txn = queue[i];\n        (0, _assert.assert)(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n        txn.status = TransactionStatus.SENT;\n        txn.retryCount++;\n        var relativePath = _Path.Path.relativePath(path, txn.path);\n        // If we've gotten to this point, the output snapshot must be defined.\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\n    }\n    var dataToSend = snapToSend.val(true);\n    var pathToSend = path;\n    // Send the put.\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n        _this.log_('transaction put response', {\n            path: pathToSend.toString(),\n            status: status\n        });\n        var events = [];\n        if (status === 'ok') {\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n            // the callback could trigger more transactions or sets.\n            var callbacks = [];\n            for (var i = 0; i < queue.length; i++) {\n                queue[i].status = TransactionStatus.COMPLETED;\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n                if (queue[i].onComplete) {\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\n                    var node = queue[i].currentOutputSnapshotResolved;\n                    var ref = new _Reference.Reference(_this, queue[i].path);\n                    var snapshot = new _DataSnapshot.DataSnapshot(node, ref, _PriorityIndex.PRIORITY_INDEX);\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n                }\n                queue[i].unwatcher();\n            }\n            // Now remove the completed transactions.\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\n            // There may be pending transactions that we can now send.\n            _this.sendReadyTransactions_();\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\n            // Finally, trigger onComplete callbacks.\n            for (var i = 0; i < callbacks.length; i++) {\n                (0, _util.exceptionGuard)(callbacks[i]);\n            }\n        } else {\n            // transactions are no longer sent.  Update their status appropriately.\n            if (status === 'datastale') {\n                for (var i = 0; i < queue.length; i++) {\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) queue[i].status = TransactionStatus.NEEDS_ABORT;else queue[i].status = TransactionStatus.RUN;\n                }\n            } else {\n                (0, _util.warn)('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n                for (var i = 0; i < queue.length; i++) {\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\n                    queue[i].abortReason = status;\n                }\n            }\n            _this.rerunTransactions_(path);\n        }\n    }, latestHash);\n};\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\n * be raised for.\n *\n * @param {!Path} changedPath The path in mergedData that changed.\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\n * @private\n */\n_Repo.Repo.prototype.rerunTransactions_ = function (changedPath) {\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n    var path = rootMostTransactionNode.path();\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n    this.rerunTransactionQueue_(queue, path);\n    return path;\n};\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\n *\n * @param {Array.<Transaction>} queue The queue of transactions to run.\n * @param {!Path} path The path the queue is for.\n * @private\n */\n_Repo.Repo.prototype.rerunTransactionQueue_ = function (queue, path) {\n    if (queue.length === 0) {\n        return; // Nothing to do!\n    }\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    var callbacks = [];\n    var events = [];\n    // Ignore all of the sets we're going to re-run.\n    var txnsToRerun = queue.filter(function (q) {\n        return q.status === TransactionStatus.RUN;\n    });\n    var setsToIgnore = txnsToRerun.map(function (q) {\n        return q.currentWriteId;\n    });\n    for (var i = 0; i < queue.length; i++) {\n        var transaction = queue[i];\n        var relativePath = _Path.Path.relativePath(path, transaction.path);\n        var abortTransaction = false,\n            abortReason = void 0;\n        (0, _assert.assert)(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n            abortTransaction = true;\n            abortReason = transaction.abortReason;\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        } else if (transaction.status === TransactionStatus.RUN) {\n            if (transaction.retryCount >= _Repo.Repo.MAX_TRANSACTION_RETRIES_) {\n                abortTransaction = true;\n                abortReason = 'maxretry';\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n            } else {\n                // This code reruns a transaction\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n                transaction.currentInputSnapshot = currentNode;\n                var newData = queue[i].update(currentNode.val());\n                if (newData !== undefined) {\n                    (0, _validation.validateFirebaseData)('transaction failed: Data returned ', newData, transaction.path);\n                    var newDataNode = (0, _nodeFromJSON.nodeFromJSON)(newData);\n                    var hasExplicitPriority = (typeof newData === 'undefined' ? 'undefined' : _typeof(newData)) === 'object' && newData != null && (0, _obj.contains)(newData, '.priority');\n                    if (!hasExplicitPriority) {\n                        // Keep the old priority if there wasn't a priority explicitly specified.\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n                    }\n                    var oldWriteId = transaction.currentWriteId;\n                    var serverValues = this.generateServerValues();\n                    var newNodeResolved = (0, _ServerValues.resolveDeferredValueSnapshot)(newDataNode, serverValues);\n                    transaction.currentOutputSnapshotRaw = newDataNode;\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\n                    transaction.currentWriteId = this.getNextWriteId_();\n                    // Mutates setsToIgnore in place\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n                } else {\n                    abortTransaction = true;\n                    abortReason = 'nodata';\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n                }\n            }\n        }\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n        events = [];\n        if (abortTransaction) {\n            // Abort.\n            queue[i].status = TransactionStatus.COMPLETED;\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n            // So defer the unwatcher until we're done.\n            (function (unwatcher) {\n                setTimeout(unwatcher, Math.floor(0));\n            })(queue[i].unwatcher);\n            if (queue[i].onComplete) {\n                if (abortReason === 'nodata') {\n                    var ref = new _Reference.Reference(this, queue[i].path);\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\n                    var snapshot = new _DataSnapshot.DataSnapshot(lastInput, ref, _PriorityIndex.PRIORITY_INDEX);\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n                } else {\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n                }\n            }\n        }\n    }\n    // Clean up completed transactions.\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\n    // Now fire callbacks, now that we're in a good, known state.\n    for (var i = 0; i < callbacks.length; i++) {\n        (0, _util.exceptionGuard)(callbacks[i]);\n    }\n    // Try to send the transaction result to the server.\n    this.sendReadyTransactions_();\n};\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\n * the node for the given path if there are no pending transactions on any ancestor.\n *\n * @param {!Path} path The location to start at.\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\n * @private\n */\n_Repo.Repo.prototype.getAncestorTransactionNode_ = function (path) {\n    var front;\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n    var transactionNode = this.transactionQueueTree_;\n    while ((front = path.getFront()) !== null && transactionNode.getValue() === null) {\n        transactionNode = transactionNode.subTree(front);\n        path = path.popFront();\n    }\n    return transactionNode;\n};\n/**\n * Builds the queue of all transactions at or below the specified transactionNode.\n *\n * @param {!Tree.<Array.<Transaction>>} transactionNode\n * @return {Array.<Transaction>} The generated queue.\n * @private\n */\n_Repo.Repo.prototype.buildTransactionQueue_ = function (transactionNode) {\n    // Walk any child transaction queues and aggregate them into a single queue.\n    var transactionQueue = [];\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\n    // Sort them by the order the transactions were created.\n    transactionQueue.sort(function (a, b) {\n        return a.order - b.order;\n    });\n    return transactionQueue;\n};\n/**\n * @param {!Tree.<Array.<Transaction>>} node\n * @param {Array.<Transaction>} queue\n * @private\n */\n_Repo.Repo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n    var _this = this;\n    var nodeQueue = node.getValue();\n    if (nodeQueue !== null) {\n        for (var i = 0; i < nodeQueue.length; i++) {\n            queue.push(nodeQueue[i]);\n        }\n    }\n    node.forEachChild(function (child) {\n        _this.aggregateTransactionQueuesForNode_(child, queue);\n    });\n};\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n *\n * @param {!Tree.<Array.<!Transaction>>} node\n * @private\n */\n_Repo.Repo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n    var _this = this;\n    var queue = node.getValue();\n    if (queue) {\n        var to = 0;\n        for (var from = 0; from < queue.length; from++) {\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\n                queue[to] = queue[from];\n                to++;\n            }\n        }\n        queue.length = to;\n        node.setValue(queue.length > 0 ? queue : null);\n    }\n    node.forEachChild(function (childNode) {\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\n    });\n};\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\n * since we consider them incompatible with transactions.\n *\n * @param {!Path} path Path for which we want to abort related transactions.\n * @return {!Path}\n * @private\n */\n_Repo.Repo.prototype.abortTransactions_ = function (path) {\n    var _this = this;\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\n    var transactionNode = this.transactionQueueTree_.subTree(path);\n    transactionNode.forEachAncestor(function (node) {\n        _this.abortTransactionsOnNode_(node);\n    });\n    this.abortTransactionsOnNode_(transactionNode);\n    transactionNode.forEachDescendant(function (node) {\n        _this.abortTransactionsOnNode_(node);\n    });\n    return affectedPath;\n};\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\n * @private\n */\n_Repo.Repo.prototype.abortTransactionsOnNode_ = function (node) {\n    var queue = node.getValue();\n    if (queue !== null) {\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n        // the callback could trigger more transactions or sets.\n        var callbacks = [];\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n        // can be immediately aborted and removed.\n        var events = [];\n        var lastSent = -1;\n        for (var i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n                // Already marked.  No action needed.\n            } else if (queue[i].status === TransactionStatus.SENT) {\n                (0, _assert.assert)(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n                lastSent = i;\n                // Mark transaction for abort when it comes back.\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n                queue[i].abortReason = 'set';\n            } else {\n                (0, _assert.assert)(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\n                // We can abort it immediately.\n                queue[i].unwatcher();\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n                if (queue[i].onComplete) {\n                    var snapshot = null;\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n                }\n            }\n        }\n        if (lastSent === -1) {\n            // We're not waiting for any sent transactions.  We can clear the queue.\n            node.setValue(null);\n        } else {\n            // Remove the transactions we aborted.\n            queue.length = lastSent + 1;\n        }\n        // Now fire the callbacks.\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n        for (var i = 0; i < callbacks.length; i++) {\n            (0, _util.exceptionGuard)(callbacks[i]);\n        }\n    }\n};\n\n\n},{\"../../utils/assert\":135,\"../../utils/obj\":144,\"../api/DataSnapshot\":7,\"../api/Reference\":10,\"./Repo\":19,\"./snap/ChildrenNode\":34,\"./snap/indexes/PriorityIndex\":43,\"./snap/nodeFromJSON\":45,\"./util/Path\":59,\"./util/ServerValues\":60,\"./util/Tree\":62,\"./util/util\":65,\"./util/validation\":66}],23:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nvar ServerActions = function () {\n  function ServerActions() {}\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, string)=} onComplete\n   * @param {string=} hash\n   */\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, ?string)} onComplete\n   * @param {string=} hash\n   */\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param {string} token The authentication token\n   */\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, string)=} onComplete\n   */\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, string)=} onComplete\n   */\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n  /**\n   * @param {string} pathString\n   * @param {function(string, string)=} onComplete\n   */\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n  /**\n   * @param {Object.<string, *>} stats\n   */\n  ServerActions.prototype.reportStats = function (stats) {};\n  return ServerActions;\n}();\nexports.ServerActions = ServerActions;\n\n\n},{}],24:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SnapshotHolder = undefined;\n\nvar _ChildrenNode = require('./snap/ChildrenNode');\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n *\n * @constructor\n */\nvar SnapshotHolder = function () {\n    function SnapshotHolder() {\n        this.rootNode_ = _ChildrenNode.ChildrenNode.EMPTY_NODE;\n    }\n    SnapshotHolder.prototype.getNode = function (path) {\n        return this.rootNode_.getChild(path);\n    };\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n    };\n    return SnapshotHolder;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.SnapshotHolder = SnapshotHolder;\n\n\n},{\"./snap/ChildrenNode\":34}],25:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SparseSnapshotTree = undefined;\n\nvar _Path = require('./util/Path');\n\nvar _PriorityIndex = require('./snap/indexes/PriorityIndex');\n\nvar _CountedSet = require('./util/CountedSet');\n\n/**\n * Helper class to store a sparse set of snapshots.\n *\n * @constructor\n */\nvar SparseSnapshotTree = function () {\n    function SparseSnapshotTree() {\n        /**\n         * @private\n         * @type {Node}\n         */\n        this.value_ = null;\n        /**\n         * @private\n         * @type {CountedSet}\n         */\n        this.children_ = null;\n    }\n    /**\n     * Gets the node stored at the given path if one exists.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @return {?Node} The retrieved node, or null.\n     */\n    SparseSnapshotTree.prototype.find = function (path) {\n        if (this.value_ != null) {\n            return this.value_.getChild(path);\n        } else if (!path.isEmpty() && this.children_ != null) {\n            var childKey = path.getFront();\n            path = path.popFront();\n            if (this.children_.contains(childKey)) {\n                var childTree = this.children_.get(childKey);\n                return childTree.find(path);\n            } else {\n                return null;\n            }\n        } else {\n            return null;\n        }\n    };\n    /**\n     * Stores the given node at the specified path. If there is already a node\n     * at a shallower path, it merges the new data into that snapshot node.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @param {!Node} data The new data, or null.\n     */\n    SparseSnapshotTree.prototype.remember = function (path, data) {\n        if (path.isEmpty()) {\n            this.value_ = data;\n            this.children_ = null;\n        } else if (this.value_ !== null) {\n            this.value_ = this.value_.updateChild(path, data);\n        } else {\n            if (this.children_ == null) {\n                this.children_ = new _CountedSet.CountedSet();\n            }\n            var childKey = path.getFront();\n            if (!this.children_.contains(childKey)) {\n                this.children_.add(childKey, new SparseSnapshotTree());\n            }\n            var child = this.children_.get(childKey);\n            path = path.popFront();\n            child.remember(path, data);\n        }\n    };\n    /**\n     * Purge the data at path from the cache.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @return {boolean} True if this node should now be removed.\n     */\n    SparseSnapshotTree.prototype.forget = function (path) {\n        if (path.isEmpty()) {\n            this.value_ = null;\n            this.children_ = null;\n            return true;\n        } else {\n            if (this.value_ !== null) {\n                if (this.value_.isLeafNode()) {\n                    // We're trying to forget a node that doesn't exist\n                    return false;\n                } else {\n                    var value = this.value_;\n                    this.value_ = null;\n                    var self_1 = this;\n                    value.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, tree) {\n                        self_1.remember(new _Path.Path(key), tree);\n                    });\n                    return this.forget(path);\n                }\n            } else if (this.children_ !== null) {\n                var childKey = path.getFront();\n                path = path.popFront();\n                if (this.children_.contains(childKey)) {\n                    var safeToRemove = this.children_.get(childKey).forget(path);\n                    if (safeToRemove) {\n                        this.children_.remove(childKey);\n                    }\n                }\n                if (this.children_.isEmpty()) {\n                    this.children_ = null;\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return true;\n            }\n        }\n    };\n    /**\n     * Recursively iterates through all of the stored tree and calls the\n     * callback on each one.\n     *\n     * @param {!Path} prefixPath Path to look up node for.\n     * @param {!Function} func The function to invoke for each tree.\n     */\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n        if (this.value_ !== null) {\n            func(prefixPath, this.value_);\n        } else {\n            this.forEachChild(function (key, tree) {\n                var path = new _Path.Path(prefixPath.toString() + '/' + key);\n                tree.forEachTree(path, func);\n            });\n        }\n    };\n    /**\n     * Iterates through each immediate child and triggers the callback.\n     *\n     * @param {!Function} func The function to invoke for each child.\n     */\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\n        if (this.children_ !== null) {\n            this.children_.each(function (key, tree) {\n                func(key, tree);\n            });\n        }\n    };\n    return SparseSnapshotTree;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.SparseSnapshotTree = SparseSnapshotTree;\n\n\n},{\"./snap/indexes/PriorityIndex\":43,\"./util/CountedSet\":54,\"./util/Path\":59}],26:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SyncPoint = undefined;\n\nvar _CacheNode = require('./view/CacheNode');\n\nvar _ChildrenNode = require('./snap/ChildrenNode');\n\nvar _assert = require('../../utils/assert');\n\nvar _obj = require('../../utils/obj');\n\nvar _ViewCache = require('./view/ViewCache');\n\nvar _View = require('./view/View');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __referenceConstructor;\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nvar SyncPoint = function () {\n    function SyncPoint() {\n        /**\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\n         * queryId and the value is the View for that query.\n         *\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n         *\n         * @type {!Object.<!string, !View>}\n         * @private\n         */\n        this.views_ = {};\n    }\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n        get: function get() {\n            (0, _assert.assert)(__referenceConstructor, 'Reference.ts has not been loaded');\n            return __referenceConstructor;\n        },\n        set: function set(val) {\n            (0, _assert.assert)(!__referenceConstructor, '__referenceConstructor has already been defined');\n            __referenceConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {boolean}\n     */\n    SyncPoint.prototype.isEmpty = function () {\n        return (0, _obj.isEmpty)(this.views_);\n    };\n    /**\n     *\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} optCompleteServerCache\n     * @return {!Array.<!Event>}\n     */\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n        var queryId = operation.source.queryId;\n        if (queryId !== null) {\n            var view = (0, _obj.safeGet)(this.views_, queryId);\n            (0, _assert.assert)(view != null, 'SyncTree gave us an op for an invalid query.');\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\n        } else {\n            var events_1 = [];\n            (0, _obj.forEach)(this.views_, function (key, view) {\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n            });\n            return events_1;\n        }\n    };\n    /**\n     * Add an event callback for the specified query.\n     *\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache Complete server cache, if we have it.\n     * @param {boolean} serverCacheComplete\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n        var queryId = query.queryIdentifier();\n        var view = (0, _obj.safeGet)(this.views_, queryId);\n        if (!view) {\n            // TODO: make writesCache take flag for complete server node\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n            var eventCacheComplete = false;\n            if (eventCache) {\n                eventCacheComplete = true;\n            } else if (serverCache instanceof _ChildrenNode.ChildrenNode) {\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\n                eventCacheComplete = false;\n            } else {\n                eventCache = _ChildrenNode.ChildrenNode.EMPTY_NODE;\n                eventCacheComplete = false;\n            }\n            var viewCache = new _ViewCache.ViewCache(new _CacheNode.CacheNode /** @type {!Node} */ /** @type {!Node} */(eventCache, eventCacheComplete, false), new _CacheNode.CacheNode(serverCache, serverCacheComplete, false));\n            view = new _View.View(query, viewCache);\n            this.views_[queryId] = view;\n        }\n        // This is guaranteed to exist now, we just created anything that was missing\n        view.addEventRegistration(eventRegistration);\n        return view.getInitialEvents(eventRegistration);\n    };\n    /**\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n     *\n     * If query is the default query, we'll check all views for the specified eventRegistration.\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n     *\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\n     */\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n        var queryId = query.queryIdentifier();\n        var removed = [];\n        var cancelEvents = [];\n        var hadCompleteView = this.hasCompleteView();\n        if (queryId === 'default') {\n            // When you do ref.off(...), we search all views for the registration to remove.\n            var self_1 = this;\n            (0, _obj.forEach)(this.views_, function (viewQueryId, view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete self_1.views_[viewQueryId];\n                    // We'll deal with complete views later.\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            });\n        } else {\n            // remove the callback from the specific view.\n            var view = (0, _obj.safeGet)(this.views_, queryId);\n            if (view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete this.views_[queryId];\n                    // We'll deal with complete views later.\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            }\n        }\n        if (hadCompleteView && !this.hasCompleteView()) {\n            // We removed our last complete view.\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n        }\n        return { removed: removed, events: cancelEvents };\n    };\n    /**\n     * @return {!Array.<!View>}\n     */\n    SyncPoint.prototype.getQueryViews = function () {\n        var _this = this;\n        var values = Object.keys(this.views_).map(function (key) {\n            return _this.views_[key];\n        });\n        return values.filter(function (view) {\n            return !view.getQuery().getQueryParams().loadsAllData();\n        });\n    };\n    /**\n     *\n     * @param {!Path} path The path to the desired complete snapshot\n     * @return {?Node} A complete cache, if it exists\n     */\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\n        var serverCache = null;\n        (0, _obj.forEach)(this.views_, function (key, view) {\n            serverCache = serverCache || view.getCompleteServerCache(path);\n        });\n        return serverCache;\n    };\n    /**\n     * @param {!Query} query\n     * @return {?View}\n     */\n    SyncPoint.prototype.viewForQuery = function (query) {\n        var params = query.getQueryParams();\n        if (params.loadsAllData()) {\n            return this.getCompleteView();\n        } else {\n            var queryId = query.queryIdentifier();\n            return (0, _obj.safeGet)(this.views_, queryId);\n        }\n    };\n    /**\n     * @param {!Query} query\n     * @return {boolean}\n     */\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\n        return this.viewForQuery(query) != null;\n    };\n    /**\n     * @return {boolean}\n     */\n    SyncPoint.prototype.hasCompleteView = function () {\n        return this.getCompleteView() != null;\n    };\n    /**\n     * @return {?View}\n     */\n    SyncPoint.prototype.getCompleteView = function () {\n        var completeView = (0, _obj.findValue)(this.views_, function (view) {\n            return view.getQuery().getQueryParams().loadsAllData();\n        });\n        return completeView || null;\n    };\n    return SyncPoint;\n}();\nexports.SyncPoint = SyncPoint;\n\n\n},{\"../../utils/assert\":135,\"../../utils/obj\":144,\"./snap/ChildrenNode\":34,\"./view/CacheNode\":67,\"./view/View\":76,\"./view/ViewCache\":77}],27:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SyncTree = undefined;\n\nvar _assert = require('../../utils/assert');\n\nvar _util = require('./util/util');\n\nvar _AckUserWrite = require('./operation/AckUserWrite');\n\nvar _ChildrenNode = require('./snap/ChildrenNode');\n\nvar _obj = require('../../utils/obj');\n\nvar _ImmutableTree = require('./util/ImmutableTree');\n\nvar _ListenComplete = require('./operation/ListenComplete');\n\nvar _Merge = require('./operation/Merge');\n\nvar _Operation = require('./operation/Operation');\n\nvar _Overwrite = require('./operation/Overwrite');\n\nvar _Path = require('./util/Path');\n\nvar _SyncPoint = require('./SyncPoint');\n\nvar _WriteTree = require('./WriteTree');\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n * @constructor\n */\nvar SyncTree = function () {\n    /**\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\n     *   to server data.\n     */\n    function SyncTree(listenProvider_) {\n        this.listenProvider_ = listenProvider_;\n        /**\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n         * @type {!ImmutableTree.<!SyncPoint>}\n         * @private\n         */\n        this.syncPointTree_ = _ImmutableTree.ImmutableTree.Empty;\n        /**\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n         * @type {!WriteTree}\n         * @private\n         */\n        this.pendingWriteTree_ = new _WriteTree.WriteTree();\n        this.tagToQueryMap_ = {};\n        this.queryToTagMap_ = {};\n    }\n    /**\n     * Apply the data changes for a user-generated set() or transaction() call.\n     *\n     * @param {!Path} path\n     * @param {!Node} newData\n     * @param {number} writeId\n     * @param {boolean=} visible\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n        // Record pending write.\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n        if (!visible) {\n            return [];\n        } else {\n            return this.applyOperationToSyncPoints_(new _Overwrite.Overwrite(_Operation.OperationSource.User, path, newData));\n        }\n    };\n    /**\n     * Apply the data from a user-generated update() call\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} writeId\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n        // Record pending merge.\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n        var changeTree = _ImmutableTree.ImmutableTree.fromObject(changedChildren);\n        return this.applyOperationToSyncPoints_(new _Merge.Merge(_Operation.OperationSource.User, path, changeTree));\n    };\n    /**\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n     *\n     * @param {!number} writeId\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n        if (revert === void 0) {\n            revert = false;\n        }\n        var write = this.pendingWriteTree_.getWrite(writeId);\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n        if (!needToReevaluate) {\n            return [];\n        } else {\n            var affectedTree_1 = _ImmutableTree.ImmutableTree.Empty;\n            if (write.snap != null) {\n                // overwrite\n                affectedTree_1 = affectedTree_1.set(_Path.Path.Empty, true);\n            } else {\n                (0, _obj.forEach)(write.children, function (pathString, node) {\n                    affectedTree_1 = affectedTree_1.set(new _Path.Path(pathString), node);\n                });\n            }\n            return this.applyOperationToSyncPoints_(new _AckUserWrite.AckUserWrite(write.path, affectedTree_1, revert));\n        }\n    };\n    /**\n     * Apply new server data for the specified path..\n     *\n     * @param {!Path} path\n     * @param {!Node} newData\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n        return this.applyOperationToSyncPoints_(new _Overwrite.Overwrite(_Operation.OperationSource.Server, path, newData));\n    };\n    /**\n     * Apply new server data to be merged in at the specified path.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n        var changeTree = _ImmutableTree.ImmutableTree.fromObject(changedChildren);\n        return this.applyOperationToSyncPoints_(new _Merge.Merge(_Operation.OperationSource.Server, path, changeTree));\n    };\n    /**\n     * Apply a listen complete for a query\n     *\n     * @param {!Path} path\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyListenComplete = function (path) {\n        return this.applyOperationToSyncPoints_(new _ListenComplete.ListenComplete(_Operation.OperationSource.Server, path));\n    };\n    /**\n     * Apply new server data for the specified tagged query.\n     *\n     * @param {!Path} path\n     * @param {!Node} snap\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey != null) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path,\n                queryId = r.queryId;\n            var relativePath = _Path.Path.relativePath(queryPath, path);\n            var op = new _Overwrite.Overwrite(_Operation.OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\n            return this.applyTaggedOperation_(queryPath, op);\n        } else {\n            // Query must have been removed already\n            return [];\n        }\n    };\n    /**\n     * Apply server data to be merged in for the specified tagged query.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path,\n                queryId = r.queryId;\n            var relativePath = _Path.Path.relativePath(queryPath, path);\n            var changeTree = _ImmutableTree.ImmutableTree.fromObject(changedChildren);\n            var op = new _Merge.Merge(_Operation.OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\n            return this.applyTaggedOperation_(queryPath, op);\n        } else {\n            // We've already removed the query. No big deal, ignore the update\n            return [];\n        }\n    };\n    /**\n     * Apply a listen complete for a tagged query\n     *\n     * @param {!Path} path\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path,\n                queryId = r.queryId;\n            var relativePath = _Path.Path.relativePath(queryPath, path);\n            var op = new _ListenComplete.ListenComplete(_Operation.OperationSource.forServerTaggedQuery(queryId), relativePath);\n            return this.applyTaggedOperation_(queryPath, op);\n        } else {\n            // We've already removed the query. No big deal, ignore the update\n            return [];\n        }\n    };\n    /**\n     * Add an event callback for the specified query.\n     *\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n        var path = query.path;\n        var serverCache = null;\n        var foundAncestorDefaultView = false;\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n            var relativePath = _Path.Path.relativePath(pathToSyncPoint, path);\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n            foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();\n        });\n        var syncPoint = this.syncPointTree_.get(path);\n        if (!syncPoint) {\n            syncPoint = new _SyncPoint.SyncPoint();\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n        } else {\n            foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();\n            serverCache = serverCache || syncPoint.getCompleteServerCache(_Path.Path.Empty);\n        }\n        var serverCacheComplete;\n        if (serverCache != null) {\n            serverCacheComplete = true;\n        } else {\n            serverCacheComplete = false;\n            serverCache = _ChildrenNode.ChildrenNode.EMPTY_NODE;\n            var subtree = this.syncPointTree_.subtree(path);\n            subtree.foreachChild(function (childName, childSyncPoint) {\n                var completeCache = childSyncPoint.getCompleteServerCache(_Path.Path.Empty);\n                if (completeCache) {\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\n                }\n            });\n        }\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n            // We need to track a tag for this query\n            var queryKey = SyncTree.makeQueryKey_(query);\n            (0, _assert.assert)(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\n            var tag = SyncTree.getNextQueryTag_();\n            this.queryToTagMap_[queryKey] = tag;\n            // Coerce to string to avoid sparse arrays.\n            this.tagToQueryMap_['_' + tag] = queryKey;\n        }\n        var writesCache = this.pendingWriteTree_.childWrites(path);\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\n            events = events.concat(this.setupListener_(query, view));\n        }\n        return events;\n    };\n    /**\n     * Remove event callback(s).\n     *\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n     *\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n     */\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n        var _this = this;\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\n        var path = query.path;\n        var maybeSyncPoint = this.syncPointTree_.get(path);\n        var cancelEvents = [];\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n        // not loadsAllData().\n        if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {\n            /**\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\n             */\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n            if (maybeSyncPoint.isEmpty()) {\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\n            }\n            var removed = removedAndEvents.removed;\n            cancelEvents = removedAndEvents.events;\n            // We may have just removed one of many listeners and can short-circuit this whole process\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n            // properly set up.\n            //\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n            // queryId === 'default'\n            var removingDefault = -1 !== removed.findIndex(function (query) {\n                return query.getQueryParams().loadsAllData();\n            });\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n                return parentSyncPoint.hasCompleteView();\n            });\n            if (removingDefault && !covered) {\n                var subtree = this.syncPointTree_.subtree(path);\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\n                // removal\n                if (!subtree.isEmpty()) {\n                    // We need to fold over our subtree and collect the listeners to send\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\n                    // Ok, we've collected all the listens we need. Set them up.\n                    for (var i = 0; i < newViews.length; ++i) {\n                        var view = newViews[i],\n                            newQuery = view.getQuery();\n                        var listener = this.createListenerForView_(view);\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n                    }\n                } else {\n                    // There's nothing below us, so nothing we need to start listening on\n                }\n            }\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\n            if (!covered && removed.length > 0 && !cancelError) {\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n                // default. Otherwise, we need to iterate through and cancel each individual query\n                if (removingDefault) {\n                    // We don't tag default listeners\n                    var defaultTag = null;\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n                } else {\n                    removed.forEach(function (queryToRemove) {\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n                    });\n                }\n            }\n            // Now, clear all of the tags we're tracking for the removed listens\n            this.removeTags_(removed);\n        } else {\n            // No-op, this listener must've been already removed\n        }\n        return cancelEvents;\n    };\n    /**\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\n     * it, but as this is only used by transaction code, that should always be the case anyways.\n     *\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n     * @param {!Path} path The path to the data we want\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\n     * @return {?Node}\n     */\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n        var includeHiddenSets = true;\n        var writeTree = this.pendingWriteTree_;\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n            var relativePath = _Path.Path.relativePath(pathSoFar, path);\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\n            if (serverCache) {\n                return serverCache;\n            }\n        });\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n    };\n    /**\n     * This collapses multiple unfiltered views into a single view, since we only need a single\n     * listener for them.\n     *\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\n     * @return {!Array.<!View>}\n     * @private\n     */\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n                var completeView = maybeChildSyncPoint.getCompleteView();\n                return [completeView];\n            } else {\n                // No complete view here, flatten any deeper listens into an array\n                var views_1 = [];\n                if (maybeChildSyncPoint) {\n                    views_1 = maybeChildSyncPoint.getQueryViews();\n                }\n                (0, _obj.forEach)(childMap, function (key, childViews) {\n                    views_1 = views_1.concat(childViews);\n                });\n                return views_1;\n            }\n        });\n    };\n    /**\n     * @param {!Array.<!Query>} queries\n     * @private\n     */\n    SyncTree.prototype.removeTags_ = function (queries) {\n        for (var j = 0; j < queries.length; ++j) {\n            var removedQuery = queries[j];\n            if (!removedQuery.getQueryParams().loadsAllData()) {\n                // We should have a tag for this\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\n                delete this.queryToTagMap_[removedQueryKey];\n                delete this.tagToQueryMap_['_' + removedQueryTag];\n            }\n        }\n    };\n    /**\n     * Normalizes a query to a query we send the server for listening\n     * @param {!Query} query\n     * @return {!Query} The normalized query\n     * @private\n     */\n    SyncTree.queryForListening_ = function (query) {\n        if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n            // We treat queries that load all data as default queries\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n            // from Query\n            return query.getRef();\n        } else {\n            return query;\n        }\n    };\n    /**\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\n     *\n     * @param {!Query} query\n     * @param {!View} view\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\n     * @private\n     */\n    SyncTree.prototype.setupListener_ = function (query, view) {\n        var path = query.path;\n        var tag = this.tagForQuery_(query);\n        var listener = this.createListenerForView_(view);\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n        var subtree = this.syncPointTree_.subtree(path);\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n        // may need to shadow other listens as well.\n        if (tag) {\n            (0, _assert.assert)(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n        } else {\n            // Shadow everything at or below this location, this is a default listener.\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n                if (!relativePath.isEmpty() && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\n                } else {\n                    // No default listener here, flatten any deeper queries into an array\n                    var queries_1 = [];\n                    if (maybeChildSyncPoint) {\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {\n                            return view.getQuery();\n                        }));\n                    }\n                    (0, _obj.forEach)(childMap, function (key, childQueries) {\n                        queries_1 = queries_1.concat(childQueries);\n                    });\n                    return queries_1;\n                }\n            });\n            for (var i = 0; i < queriesToStop.length; ++i) {\n                var queryToStop = queriesToStop[i];\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n            }\n        }\n        return events;\n    };\n    /**\n     *\n     * @param {!View} view\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\n     * @private\n     */\n    SyncTree.prototype.createListenerForView_ = function (view) {\n        var _this = this;\n        var query = view.getQuery();\n        var tag = this.tagForQuery_(query);\n        return {\n            hashFn: function hashFn() {\n                var cache = view.getServerCache() || _ChildrenNode.ChildrenNode.EMPTY_NODE;\n                return cache.hash();\n            },\n            onComplete: function onComplete(status) {\n                if (status === 'ok') {\n                    if (tag) {\n                        return _this.applyTaggedListenComplete(query.path, tag);\n                    } else {\n                        return _this.applyListenComplete(query.path);\n                    }\n                } else {\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n                    var error = (0, _util.errorForServerCode)(status, query);\n                    return _this.removeEventRegistration(query,\n                    /*eventRegistration*/null, error);\n                }\n            }\n        };\n    };\n    /**\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n     * @private\n     * @param {!Query} query\n     * @return {string}\n     */\n    SyncTree.makeQueryKey_ = function (query) {\n        return query.path.toString() + '$' + query.queryIdentifier();\n    };\n    /**\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n     * @private\n     * @param {!string} queryKey\n     * @return {{queryId: !string, path: !Path}}\n     */\n    SyncTree.parseQueryKey_ = function (queryKey) {\n        var splitIndex = queryKey.indexOf('$');\n        (0, _assert.assert)(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n        return {\n            queryId: queryKey.substr(splitIndex + 1),\n            path: new _Path.Path(queryKey.substr(0, splitIndex))\n        };\n    };\n    /**\n     * Return the query associated with the given tag, if we have one\n     * @param {!number} tag\n     * @return {?string}\n     * @private\n     */\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\n        return this.tagToQueryMap_['_' + tag];\n    };\n    /**\n     * Return the tag associated with the given query.\n     * @param {!Query} query\n     * @return {?number}\n     * @private\n     */\n    SyncTree.prototype.tagForQuery_ = function (query) {\n        var queryKey = SyncTree.makeQueryKey_(query);\n        return (0, _obj.safeGet)(this.queryToTagMap_, queryKey);\n    };\n    /**\n     * Static accessor for query tags.\n     * @return {number}\n     * @private\n     */\n    SyncTree.getNextQueryTag_ = function () {\n        return SyncTree.nextQueryTag_++;\n    };\n    /**\n     * A helper method to apply tagged operations\n     *\n     * @param {!Path} queryPath\n     * @param {!Operation} operation\n     * @return {!Array.<!Event>}\n     * @private\n     */\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n        var syncPoint = this.syncPointTree_.get(queryPath);\n        (0, _assert.assert)(syncPoint, \"Missing sync point for query tag that we're tracking\");\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n        return syncPoint.applyOperation(operation, writesCache,\n        /*serverCache=*/null);\n    };\n    /**\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n     *\n     * NOTES:\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n        * - We call applyOperation() on each SyncPoint passing three things:\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n     *   3. A snapshot Node with cached server data, if we have it.\n        * - We concatenate all of the events returned by each SyncPoint and return the result.\n     *\n     * @param {!Operation} operation\n     * @return {!Array.<!Event>}\n     * @private\n     */\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n        return this.applyOperationHelper_(operation, this.syncPointTree_,\n        /*serverCache=*/null, this.pendingWriteTree_.childWrites(_Path.Path.Empty));\n    };\n    /**\n     * Recursive helper for applyOperationToSyncPoints_\n     *\n     * @private\n     * @param {!Operation} operation\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\n     * @param {?Node} serverCache\n     * @param {!WriteTreeRef} writesCache\n     * @return {!Array.<!Event>}\n     */\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n        if (operation.path.isEmpty()) {\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n        } else {\n            var syncPoint = syncPointTree.get(_Path.Path.Empty);\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\n            if (serverCache == null && syncPoint != null) {\n                serverCache = syncPoint.getCompleteServerCache(_Path.Path.Empty);\n            }\n            var events = [];\n            var childName = operation.path.getFront();\n            var childOperation = operation.operationForChild(childName);\n            var childTree = syncPointTree.children.get(childName);\n            if (childTree && childOperation) {\n                var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n                var childWritesCache = writesCache.child(childName);\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n            }\n            if (syncPoint) {\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n            }\n            return events;\n        }\n    };\n    /**\n     * Recursive helper for applyOperationToSyncPoints_\n     *\n     * @private\n     * @param {!Operation} operation\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\n     * @param {?Node} serverCache\n     * @param {!WriteTreeRef} writesCache\n     * @return {!Array.<!Event>}\n     */\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n        var _this = this;\n        var syncPoint = syncPointTree.get(_Path.Path.Empty);\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\n        if (serverCache == null && syncPoint != null) {\n            serverCache = syncPoint.getCompleteServerCache(_Path.Path.Empty);\n        }\n        var events = [];\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\n            var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n            var childWritesCache = writesCache.child(childName);\n            var childOperation = operation.operationForChild(childName);\n            if (childOperation) {\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n            }\n        });\n        if (syncPoint) {\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n        }\n        return events;\n    };\n    /**\n     * Static tracker for next query tag.\n     * @type {number}\n     * @private\n     */\n    SyncTree.nextQueryTag_ = 1;\n    return SyncTree;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.SyncTree = SyncTree;\n\n\n},{\"../../utils/assert\":135,\"../../utils/obj\":144,\"./SyncPoint\":26,\"./WriteTree\":28,\"./operation/AckUserWrite\":29,\"./operation/ListenComplete\":30,\"./operation/Merge\":31,\"./operation/Operation\":32,\"./operation/Overwrite\":33,\"./snap/ChildrenNode\":34,\"./util/ImmutableTree\":56,\"./util/Path\":59,\"./util/util\":65}],28:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.WriteTreeRef = exports.WriteTree = undefined;\n\nvar _obj = require('../../utils/obj');\n\nvar _assert = require('../../utils/assert');\n\nvar _Path = require('./util/Path');\n\nvar _CompoundWrite = require('./CompoundWrite');\n\nvar _PriorityIndex = require('./snap/indexes/PriorityIndex');\n\nvar _ChildrenNode = require('./snap/ChildrenNode');\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n *\n * @constructor\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar WriteTree = function () {\n    function WriteTree() {\n        /**\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\n         * applyLocally=false or writes that are completely shadowed by other writes.\n         *\n         * @type {!CompoundWrite}\n         * @private\n         */\n        this.visibleWrites_ = _CompoundWrite.CompoundWrite.Empty;\n        /**\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n         * used by transactions).\n         *\n         * @type {!Array.<!WriteRecord>}\n         * @private\n         */\n        this.allWrites_ = [];\n        this.lastWriteId_ = -1;\n    }\n    /**\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n     *\n     * @param {!Path} path\n     * @return {!WriteTreeRef}\n     */\n    WriteTree.prototype.childWrites = function (path) {\n        return new WriteTreeRef(path, this);\n    };\n    /**\n     * Record a new overwrite from user code.\n     *\n     * @param {!Path} path\n     * @param {!Node} snap\n     * @param {!number} writeId\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\n     */\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n        (0, _assert.assert)(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n        if (visible === undefined) {\n            visible = true;\n        }\n        this.allWrites_.push({\n            path: path,\n            snap: snap,\n            writeId: writeId,\n            visible: visible\n        });\n        if (visible) {\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n        }\n        this.lastWriteId_ = writeId;\n    };\n    /**\n     * Record a new merge from user code.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} writeId\n     */\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n        (0, _assert.assert)(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n        this.allWrites_.push({\n            path: path,\n            children: changedChildren,\n            writeId: writeId,\n            visible: true\n        });\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n        this.lastWriteId_ = writeId;\n    };\n    /**\n     * @param {!number} writeId\n     * @return {?WriteRecord}\n     */\n    WriteTree.prototype.getWrite = function (writeId) {\n        for (var i = 0; i < this.allWrites_.length; i++) {\n            var record = this.allWrites_[i];\n            if (record.writeId === writeId) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n     *\n     * @param {!number} writeId\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\n     * events as a result).\n     */\n    WriteTree.prototype.removeWrite = function (writeId) {\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n        // out of order.\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n        var _this = this;\n        var idx = this.allWrites_.findIndex(function (s) {\n            return s.writeId === writeId;\n        });\n        (0, _assert.assert)(idx >= 0, 'removeWrite called with nonexistent writeId.');\n        var writeToRemove = this.allWrites_[idx];\n        this.allWrites_.splice(idx, 1);\n        var removedWriteWasVisible = writeToRemove.visible;\n        var removedWriteOverlapsWithOtherWrites = false;\n        var i = this.allWrites_.length - 1;\n        while (removedWriteWasVisible && i >= 0) {\n            var currentWrite = this.allWrites_[i];\n            if (currentWrite.visible) {\n                if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n                    // The removed write was completely shadowed by a subsequent write.\n                    removedWriteWasVisible = false;\n                } else if (writeToRemove.path.contains(currentWrite.path)) {\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\n                    removedWriteOverlapsWithOtherWrites = true;\n                }\n            }\n            i--;\n        }\n        if (!removedWriteWasVisible) {\n            return false;\n        } else if (removedWriteOverlapsWithOtherWrites) {\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\n            this.resetTree_();\n            return true;\n        } else {\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n            if (writeToRemove.snap) {\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n            } else {\n                var children = writeToRemove.children;\n                (0, _obj.forEach)(children, function (childName) {\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n                });\n            }\n            return true;\n        }\n    };\n    /**\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n     * No server data is considered.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTree.prototype.getCompleteWriteData = function (path) {\n        return this.visibleWrites_.getCompleteNode(path);\n    };\n    /**\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n     * writes), attempt to calculate a complete snapshot for the given path\n     *\n     * @param {!Path} treePath\n     * @param {?Node} completeServerCache\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n        if (!writeIdsToExclude && !includeHiddenWrites) {\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n            if (shadowingNode != null) {\n                return shadowingNode;\n            } else {\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n                if (subMerge.isEmpty()) {\n                    return completeServerCache;\n                } else if (completeServerCache == null && !subMerge.hasCompleteWrite(_Path.Path.Empty)) {\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n                    return null;\n                } else {\n                    var layeredCache = completeServerCache || _ChildrenNode.ChildrenNode.EMPTY_NODE;\n                    return subMerge.apply(layeredCache);\n                }\n            }\n        } else {\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\n            if (!includeHiddenWrites && merge.isEmpty()) {\n                return completeServerCache;\n            } else {\n                // If the server cache is null, and we don't have a complete cache, we need to return null\n                if (!includeHiddenWrites && completeServerCache == null && !merge.hasCompleteWrite(_Path.Path.Empty)) {\n                    return null;\n                } else {\n                    var filter = function filter(write) {\n                        return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (write.path.contains(treePath) || treePath.contains(write.path));\n                    };\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n                    var layeredCache = completeServerCache || _ChildrenNode.ChildrenNode.EMPTY_NODE;\n                    return mergeAtPath.apply(layeredCache);\n                }\n            }\n        }\n    };\n    /**\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n     * Used when creating new views, to pre-fill their complete event children snapshot.\n     *\n     * @param {!Path} treePath\n     * @param {?ChildrenNode} completeServerChildren\n     * @return {!ChildrenNode}\n     */\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n        var completeChildren = _ChildrenNode.ChildrenNode.EMPTY_NODE;\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n        if (topLevelSet) {\n            if (!topLevelSet.isLeafNode()) {\n                // we're shadowing everything. Return the children.\n                topLevelSet.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (childName, childSnap) {\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n                });\n            }\n            return completeChildren;\n        } else if (completeServerChildren) {\n            // Layer any children we have on top of this\n            // We know we don't have a top-level set, so just enumerate existing children\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n            completeServerChildren.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (childName, childNode) {\n                var node = merge_1.childCompoundWrite(new _Path.Path(childName)).apply(childNode);\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\n            });\n            // Add any complete children we have from the set\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n            });\n            return completeChildren;\n        } else {\n            // We don't have anything to layer on top of. Layer on any children we have\n            // Note that we can return an empty snap if we have a defined delete\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\n            merge.getCompleteChildren().forEach(function (namedNode) {\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n            });\n            return completeChildren;\n        }\n    };\n    /**\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\n     * applied to the event cache.\n     *\n     * Possibilities:\n     *\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n     *\n     * 2. Some write is completely shadowing. No events to be raised\n     *\n     * 3. Is partially shadowed. Events\n     *\n     * Either existingEventSnap or existingServerSnap must exist\n     *\n     * @param {!Path} treePath\n     * @param {!Path} childPath\n     * @param {?Node} existingEventSnap\n     * @param {?Node} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n        (0, _assert.assert)(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n        var path = treePath.child(childPath);\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\n            // At this point we can probably guarantee that we're in case 2, meaning no events\n            // May need to check visibility while doing the findRootMostValueAndPath call\n            return null;\n        } else {\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\n            if (childMerge.isEmpty()) {\n                // We're not shadowing at all. Case 1\n                return existingServerSnap.getChild(childPath);\n            } else {\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n                // However this is tricky to find out, since user updates don't necessary change the server\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n                // only check if the updates change the serverNode.\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n                return childMerge.apply(existingServerSnap.getChild(childPath));\n            }\n        }\n    };\n    /**\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\n     * complete child for this ChildKey.\n     *\n     * @param {!Path} treePath\n     * @param {!string} childKey\n     * @param {!CacheNode} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n        var path = treePath.child(childKey);\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n        if (shadowingNode != null) {\n            return shadowingNode;\n        } else {\n            if (existingServerSnap.isCompleteForChild(childKey)) {\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n            } else {\n                return null;\n            }\n        }\n    };\n    /**\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n     * a higher path, this will return the child of that write relative to the write and this path.\n     * Returns null if there is no write at this path.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTree.prototype.shadowingWrite = function (path) {\n        return this.visibleWrites_.getCompleteNode(path);\n    };\n    /**\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n     * the window, but may now be in the window.\n     *\n     * @param {!Path} treePath\n     * @param {?Node} completeServerData\n     * @param {!NamedNode} startPost\n     * @param {!number} count\n     * @param {boolean} reverse\n     * @param {!Index} index\n     * @return {!Array.<!NamedNode>}\n     */\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n        var toIterate;\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\n        var shadowingNode = merge.getCompleteNode(_Path.Path.Empty);\n        if (shadowingNode != null) {\n            toIterate = shadowingNode;\n        } else if (completeServerData != null) {\n            toIterate = merge.apply(completeServerData);\n        } else {\n            // no children to iterate on\n            return [];\n        }\n        toIterate = toIterate.withIndex(index);\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n            var nodes = [];\n            var cmp = index.getCompare();\n            var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n            var next = iter.getNext();\n            while (next && nodes.length < count) {\n                if (cmp(next, startPost) !== 0) {\n                    nodes.push(next);\n                }\n                next = iter.getNext();\n            }\n            return nodes;\n        } else {\n            return [];\n        }\n    };\n    /**\n     * @param {!WriteRecord} writeRecord\n     * @param {!Path} path\n     * @return {boolean}\n     * @private\n     */\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n        if (writeRecord.snap) {\n            return writeRecord.path.contains(path);\n        } else {\n            // findKey can return undefined, so use !! to coerce to boolean\n            return !!(0, _obj.findKey)(writeRecord.children, function (childSnap, childName) {\n                return writeRecord.path.child(childName).contains(path);\n            });\n        }\n    };\n    /**\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n     * @private\n     */\n    WriteTree.prototype.resetTree_ = function () {\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, _Path.Path.Empty);\n        if (this.allWrites_.length > 0) {\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n        } else {\n            this.lastWriteId_ = -1;\n        }\n    };\n    /**\n     * The default filter used when constructing the tree. Keep everything that's visible.\n     *\n     * @param {!WriteRecord} write\n     * @return {boolean}\n     * @private\n     */\n    WriteTree.DefaultFilter_ = function (write) {\n        return write.visible;\n    };\n    /**\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n     * event data at that path.\n     *\n     * @param {!Array.<!WriteRecord>} writes\n     * @param {!function(!WriteRecord):boolean} filter\n     * @param {!Path} treeRoot\n     * @return {!CompoundWrite}\n     * @private\n     */\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n        var compoundWrite = _CompoundWrite.CompoundWrite.Empty;\n        for (var i = 0; i < writes.length; ++i) {\n            var write = writes[i];\n            // Theory, a later set will either:\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n            if (filter(write)) {\n                var writePath = write.path;\n                var relativePath = void 0;\n                if (write.snap) {\n                    if (treeRoot.contains(writePath)) {\n                        relativePath = _Path.Path.relativePath(treeRoot, writePath);\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n                    } else if (writePath.contains(treeRoot)) {\n                        relativePath = _Path.Path.relativePath(writePath, treeRoot);\n                        compoundWrite = compoundWrite.addWrite(_Path.Path.Empty, write.snap.getChild(relativePath));\n                    } else {\n                        // There is no overlap between root path and write path, ignore write\n                    }\n                } else if (write.children) {\n                    if (treeRoot.contains(writePath)) {\n                        relativePath = _Path.Path.relativePath(treeRoot, writePath);\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n                    } else if (writePath.contains(treeRoot)) {\n                        relativePath = _Path.Path.relativePath(writePath, treeRoot);\n                        if (relativePath.isEmpty()) {\n                            compoundWrite = compoundWrite.addWrites(_Path.Path.Empty, write.children);\n                        } else {\n                            var child = (0, _obj.safeGet)(write.children, relativePath.getFront());\n                            if (child) {\n                                // There exists a child in this node that matches the root path\n                                var deepNode = child.getChild(relativePath.popFront());\n                                compoundWrite = compoundWrite.addWrite(_Path.Path.Empty, deepNode);\n                            }\n                        }\n                    } else {\n                        // There is no overlap between root path and write path, ignore write\n                    }\n                } else {\n                    throw (0, _assert.assertionError)('WriteRecord should have .snap or .children');\n                }\n            }\n        }\n        return compoundWrite;\n    };\n    return WriteTree;\n}();\nexports.WriteTree = WriteTree;\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n * @constructor\n */\n\nvar WriteTreeRef = function () {\n    /**\n     * @param {!Path} path\n     * @param {!WriteTree} writeTree\n     */\n    function WriteTreeRef(path, writeTree) {\n        this.treePath_ = path;\n        this.writeTree_ = writeTree;\n    }\n    /**\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n     * can lead to a more expensive calculation.\n     *\n     * @param {?Node} completeServerCache\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n    };\n    /**\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n     * mix of the given server data and write data.\n     *\n     * @param {?ChildrenNode} completeServerChildren\n     * @return {!ChildrenNode}\n     */\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n    };\n    /**\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n     * if anything, needs to be applied to the event cache.\n     *\n     * Possibilities:\n     *\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n     *\n     * 2. Some write is completely shadowing. No events to be raised\n     *\n     * 3. Is partially shadowed. Events should be raised\n     *\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n     *\n     * @param {!Path} path\n     * @param {?Node} existingEventSnap\n     * @param {?Node} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n    };\n    /**\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n     * a higher path, this will return the child of that write relative to the write and this path.\n     * Returns null if there is no write at this path.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n    };\n    /**\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n     * the window, but may now be in the window\n     *\n     * @param {?Node} completeServerData\n     * @param {!NamedNode} startPost\n     * @param {!number} count\n     * @param {boolean} reverse\n     * @param {!Index} index\n     * @return {!Array.<!NamedNode>}\n     */\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n    };\n    /**\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\n     * complete child for this ChildKey.\n     *\n     * @param {!string} childKey\n     * @param {!CacheNode} existingServerCache\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n    };\n    /**\n     * Return a WriteTreeRef for a child.\n     *\n     * @param {string} childName\n     * @return {!WriteTreeRef}\n     */\n    WriteTreeRef.prototype.child = function (childName) {\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n    };\n    return WriteTreeRef;\n}();\nexports.WriteTreeRef = WriteTreeRef;\n\n\n},{\"../../utils/assert\":135,\"../../utils/obj\":144,\"./CompoundWrite\":16,\"./snap/ChildrenNode\":34,\"./snap/indexes/PriorityIndex\":43,\"./util/Path\":59}],29:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.AckUserWrite = undefined;\n\nvar _assert = require('../../../utils/assert');\n\nvar _Path = require('../util/Path');\n\nvar _Operation = require('./Operation');\n\nvar AckUserWrite = function () {\n    /**\n     *\n     * @param {!Path} path\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\n     * @param {!boolean} revert\n     */\n    function AckUserWrite(\n    /**@inheritDoc */path,\n    /**@inheritDoc */affectedTree,\n    /**@inheritDoc */revert) {\n        this.path = path;\n        this.affectedTree = affectedTree;\n        this.revert = revert;\n        /** @inheritDoc */\n        this.type = _Operation.OperationType.ACK_USER_WRITE;\n        /** @inheritDoc */\n        this.source = _Operation.OperationSource.User;\n    }\n    /**\n     * @inheritDoc\n     */\n    AckUserWrite.prototype.operationForChild = function (childName) {\n        if (!this.path.isEmpty()) {\n            (0, _assert.assert)(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n        } else if (this.affectedTree.value != null) {\n            (0, _assert.assert)(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\n            // All child locations are affected as well; just return same operation.\n            return this;\n        } else {\n            var childTree = this.affectedTree.subtree(new _Path.Path(childName));\n            return new AckUserWrite(_Path.Path.Empty, childTree, this.revert);\n        }\n    };\n    return AckUserWrite;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.AckUserWrite = AckUserWrite;\n\n\n},{\"../../../utils/assert\":135,\"../util/Path\":59,\"./Operation\":32}],30:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ListenComplete = undefined;\n\nvar _Path = require('../util/Path');\n\nvar _Operation = require('./Operation');\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @constructor\n * @implements {Operation}\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar ListenComplete = function () {\n    function ListenComplete(source, path) {\n        this.source = source;\n        this.path = path;\n        /** @inheritDoc */\n        this.type = _Operation.OperationType.LISTEN_COMPLETE;\n    }\n    ListenComplete.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new ListenComplete(this.source, _Path.Path.Empty);\n        } else {\n            return new ListenComplete(this.source, this.path.popFront());\n        }\n    };\n    return ListenComplete;\n}();\nexports.ListenComplete = ListenComplete;\n\n\n},{\"../util/Path\":59,\"./Operation\":32}],31:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Merge = undefined;\n\nvar _Operation = require('./Operation');\n\nvar _Overwrite = require('./Overwrite');\n\nvar _Path = require('../util/Path');\n\nvar _assert = require('../../../utils/assert');\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!ImmutableTree.<!Node>} children\n * @constructor\n * @implements {Operation}\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar Merge = function () {\n    function Merge(\n    /**@inheritDoc */source,\n    /**@inheritDoc */path,\n    /**@inheritDoc */children) {\n        this.source = source;\n        this.path = path;\n        this.children = children;\n        /** @inheritDoc */\n        this.type = _Operation.OperationType.MERGE;\n    }\n    /**\n     * @inheritDoc\n     */\n    Merge.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            var childTree = this.children.subtree(new _Path.Path(childName));\n            if (childTree.isEmpty()) {\n                // This child is unaffected\n                return null;\n            } else if (childTree.value) {\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n                return new _Overwrite.Overwrite(this.source, _Path.Path.Empty, childTree.value);\n            } else {\n                // This is a merge at a deeper level\n                return new Merge(this.source, _Path.Path.Empty, childTree);\n            }\n        } else {\n            (0, _assert.assert)(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n            return new Merge(this.source, this.path.popFront(), this.children);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Merge.prototype.toString = function () {\n        return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n    };\n    return Merge;\n}();\nexports.Merge = Merge;\n\n\n},{\"../../../utils/assert\":135,\"../util/Path\":59,\"./Operation\":32,\"./Overwrite\":33}],32:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperationSource = exports.OperationType = undefined;\n\nvar _assert = require(\"../../../utils/assert\");\n\n/**\n *\n * @enum\n */\nvar OperationType = exports.OperationType = undefined; /**\n                                                       * Copyright 2017 Google Inc.\n                                                       *\n                                                       * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                       * you may not use this file except in compliance with the License.\n                                                       * You may obtain a copy of the License at\n                                                       *\n                                                       *   http://www.apache.org/licenses/LICENSE-2.0\n                                                       *\n                                                       * Unless required by applicable law or agreed to in writing, software\n                                                       * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                       * See the License for the specific language governing permissions and\n                                                       * limitations under the License.\n                                                       */\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (exports.OperationType = OperationType = {}));\n/**\n * @param {boolean} fromUser\n * @param {boolean} fromServer\n * @param {?string} queryId\n * @param {boolean} tagged\n * @constructor\n */\nvar OperationSource = function () {\n  function OperationSource(fromUser, fromServer, queryId, tagged) {\n    this.fromUser = fromUser;\n    this.fromServer = fromServer;\n    this.queryId = queryId;\n    this.tagged = tagged;\n    (0, _assert.assert)(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\n   * @const\n   * @type {!OperationSource}\n   */\n  OperationSource.User = new OperationSource(\n  /*fromUser=*/true, false, null,\n  /*tagged=*/false);\n  /**\n   * @const\n   * @type {!OperationSource}\n   */\n  OperationSource.Server = new OperationSource(false,\n  /*fromServer=*/true, null,\n  /*tagged=*/false);\n  /**\n   * @param {string} queryId\n   * @return {!OperationSource}\n   */\n  OperationSource.forServerTaggedQuery = function (queryId) {\n    return new OperationSource(false,\n    /*fromServer=*/true, queryId,\n    /*tagged=*/true);\n  };\n  return OperationSource;\n}();\nexports.OperationSource = OperationSource;\n\n\n},{\"../../../utils/assert\":135}],33:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Overwrite = undefined;\n\nvar _Operation = require('./Operation');\n\nvar _Path = require('../util/Path');\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!Node} snap\n * @constructor\n * @implements {Operation}\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar Overwrite = function () {\n    function Overwrite(source, path, snap) {\n        this.source = source;\n        this.path = path;\n        this.snap = snap;\n        /** @inheritDoc */\n        this.type = _Operation.OperationType.OVERWRITE;\n    }\n    Overwrite.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new Overwrite(this.source, _Path.Path.Empty, this.snap.getImmediateChild(childName));\n        } else {\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\n        }\n    };\n    return Overwrite;\n}();\nexports.Overwrite = Overwrite;\n\n\n},{\"../util/Path\":59,\"./Operation\":32}],34:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MAX_NODE = exports.MaxNode = exports.ChildrenNode = undefined;\n\nvar _assert = require('../../../utils/assert');\n\nvar _util = require('../util/util');\n\nvar _SortedMap = require('../util/SortedMap');\n\nvar _Node = require('./Node');\n\nvar _snap = require('./snap');\n\nvar _PriorityIndex = require('./indexes/PriorityIndex');\n\nvar _KeyIndex = require('./indexes/KeyIndex');\n\nvar _IndexMap = require('./IndexMap');\n\nvar _LeafNode = require('./LeafNode');\n\nvar _comparators = require('./comparators');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\nvar EMPTY_NODE;\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n *\n * @constructor\n * @implements {Node}\n */\nvar ChildrenNode = function () {\n    /**\n     *\n     * @param {!SortedMap.<string, !Node>} children_ List of children\n     * of this node..\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\n     * @param {!IndexMap} indexMap_\n     */\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\n        this.children_ = children_;\n        this.priorityNode_ = priorityNode_;\n        this.indexMap_ = indexMap_;\n        this.lazyHash_ = null;\n        /**\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n         * class instead of an empty ChildrenNode.\n         */\n        if (this.priorityNode_) {\n            (0, _snap.validatePriorityNode)(this.priorityNode_);\n        }\n        if (this.children_.isEmpty()) {\n            (0, _assert.assert)(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n        }\n    }\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n        get: function get() {\n            return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new _SortedMap.SortedMap(_comparators.NAME_COMPARATOR), null, _IndexMap.IndexMap.Default));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @inheritDoc */\n    ChildrenNode.prototype.isLeafNode = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getPriority = function () {\n        return this.priorityNode_ || EMPTY_NODE;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n        if (this.children_.isEmpty()) {\n            // Don't allow priorities on empty nodes\n            return this;\n        } else {\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\n        // Hack to treat priority as a regular child\n        if (childName === '.priority') {\n            return this.getPriority();\n        } else {\n            var child = this.children_.get(childName);\n            return child === null ? EMPTY_NODE : child;\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getChild = function (path) {\n        var front = path.getFront();\n        if (front === null) return this;\n        return this.getImmediateChild(front).getChild(path.popFront());\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.hasChild = function (childName) {\n        return this.children_.get(childName) !== null;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n        (0, _assert.assert)(newChildNode, 'We should always be passing snapshot nodes');\n        if (childName === '.priority') {\n            return this.updatePriority(newChildNode);\n        } else {\n            var namedNode = new _Node.NamedNode(childName, newChildNode);\n            var newChildren = void 0,\n                newIndexMap = void 0,\n                newPriority = void 0;\n            if (newChildNode.isEmpty()) {\n                newChildren = this.children_.remove(childName);\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n            } else {\n                newChildren = this.children_.insert(childName, newChildNode);\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n            }\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n        var front = path.getFront();\n        if (front === null) {\n            return newChildNode;\n        } else {\n            (0, _assert.assert)(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n            return this.updateImmediateChild(front, newImmediateChild);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.isEmpty = function () {\n        return this.children_.isEmpty();\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.numChildren = function () {\n        return this.children_.count();\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.val = function (exportFormat) {\n        if (this.isEmpty()) return null;\n        var obj = {};\n        var numKeys = 0,\n            maxKey = 0,\n            allIntegerKeys = true;\n        this.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {\n            obj[key] = childNode.val(exportFormat);\n            numKeys++;\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n                maxKey = Math.max(maxKey, Number(key));\n            } else {\n                allIntegerKeys = false;\n            }\n        });\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n            // convert to array.\n            var array = [];\n            for (var key in obj) {\n                array[key] = obj[key];\n            }return array;\n        } else {\n            if (exportFormat && !this.getPriority().isEmpty()) {\n                obj['.priority'] = this.getPriority().val();\n            }\n            return obj;\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.hash = function () {\n        if (this.lazyHash_ === null) {\n            var toHash_1 = '';\n            if (!this.getPriority().isEmpty()) toHash_1 += 'priority:' + (0, _snap.priorityHashText)(this.getPriority().val()) + ':';\n            this.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {\n                var childHash = childNode.hash();\n                if (childHash !== '') toHash_1 += ':' + key + ':' + childHash;\n            });\n            this.lazyHash_ = toHash_1 === '' ? '' : (0, _util.sha1)(toHash_1);\n        }\n        return this.lazyHash_;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n        var idx = this.resolveIndex_(index);\n        if (idx) {\n            var predecessor = idx.getPredecessorKey(new _Node.NamedNode(childName, childNode));\n            return predecessor ? predecessor.name : null;\n        } else {\n            return this.children_.getPredecessorKey(childName);\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?string}\n     */\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            var minKey = idx.minKey();\n            return minKey && minKey.name;\n        } else {\n            return this.children_.minKey();\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?NamedNode}\n     */\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n        var minKey = this.getFirstChildName(indexDefinition);\n        if (minKey) {\n            return new _Node.NamedNode(minKey, this.children_.get(minKey));\n        } else {\n            return null;\n        }\n    };\n    /**\n     * Given an index, return the key name of the largest value we have, according to that index\n     * @param {!Index} indexDefinition\n     * @return {?string}\n     */\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            var maxKey = idx.maxKey();\n            return maxKey && maxKey.name;\n        } else {\n            return this.children_.maxKey();\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?NamedNode}\n     */\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n        var maxKey = this.getLastChildName(indexDefinition);\n        if (maxKey) {\n            return new _Node.NamedNode(maxKey, this.children_.get(maxKey));\n        } else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.forEachChild = function (index, action) {\n        var idx = this.resolveIndex_(index);\n        if (idx) {\n            return idx.inorderTraversal(function (wrappedNode) {\n                return action(wrappedNode.name, wrappedNode.node);\n            });\n        } else {\n            return this.children_.inorderTraversal(action);\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {SortedMapIterator}\n     */\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n    };\n    /**\n     *\n     * @param {!NamedNode} startPost\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            return idx.getIteratorFrom(startPost, function (key) {\n                return key;\n            });\n        } else {\n            var iterator = this.children_.getIteratorFrom(startPost.name, _Node.NamedNode.Wrap);\n            var next = iterator.peek();\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\n                iterator.getNext();\n                next = iterator.peek();\n            }\n            return iterator;\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n    };\n    /**\n     * @param {!NamedNode} endPost\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            return idx.getReverseIteratorFrom(endPost, function (key) {\n                return key;\n            });\n        } else {\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, _Node.NamedNode.Wrap);\n            var next = iterator.peek();\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\n                iterator.getNext();\n                next = iterator.peek();\n            }\n            return iterator;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.compareTo = function (other) {\n        if (this.isEmpty()) {\n            if (other.isEmpty()) {\n                return 0;\n            } else {\n                return -1;\n            }\n        } else if (other.isLeafNode() || other.isEmpty()) {\n            return 1;\n        } else if (other === MAX_NODE) {\n            return -1;\n        } else {\n            // Must be another node with children.\n            return 0;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\n        if (indexDefinition === _KeyIndex.KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n            return this;\n        } else {\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.isIndexed = function (index) {\n        return index === _KeyIndex.KEY_INDEX || this.indexMap_.hasIndex(index);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        } else if (other.isLeafNode()) {\n            return false;\n        } else {\n            var otherChildrenNode = other;\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n                return false;\n            } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n                var thisIter = this.getIterator(_PriorityIndex.PRIORITY_INDEX);\n                var otherIter = otherChildrenNode.getIterator(_PriorityIndex.PRIORITY_INDEX);\n                var thisCurrent = thisIter.getNext();\n                var otherCurrent = otherIter.getNext();\n                while (thisCurrent && otherCurrent) {\n                    if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n                        return false;\n                    }\n                    thisCurrent = thisIter.getNext();\n                    otherCurrent = otherIter.getNext();\n                }\n                return thisCurrent === null && otherCurrent === null;\n            } else {\n                return false;\n            }\n        }\n    };\n    /**\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n     * instead.\n     *\n     * @private\n     * @param {!Index} indexDefinition\n     * @return {?SortedMap.<NamedNode, Node>}\n     */\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n        if (indexDefinition === _KeyIndex.KEY_INDEX) {\n            return null;\n        } else {\n            return this.indexMap_.get(indexDefinition.toString());\n        }\n    };\n    /**\n     * @private\n     * @type {RegExp}\n     */\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n    return ChildrenNode;\n}();\nexports.ChildrenNode = ChildrenNode;\n/**\n * @constructor\n * @extends {ChildrenNode}\n * @private\n */\n\nvar MaxNode = function (_super) {\n    __extends(MaxNode, _super);\n    function MaxNode() {\n        return _super.call(this, new _SortedMap.SortedMap(_comparators.NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, _IndexMap.IndexMap.Default) || this;\n    }\n    MaxNode.prototype.compareTo = function (other) {\n        if (other === this) {\n            return 0;\n        } else {\n            return 1;\n        }\n    };\n    MaxNode.prototype.equals = function (other) {\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\n        return other === this;\n    };\n    MaxNode.prototype.getPriority = function () {\n        return this;\n    };\n    MaxNode.prototype.getImmediateChild = function (childName) {\n        return ChildrenNode.EMPTY_NODE;\n    };\n    MaxNode.prototype.isEmpty = function () {\n        return false;\n    };\n    return MaxNode;\n}(ChildrenNode);\nexports.MaxNode = MaxNode;\n/**\n * Marker that will sort higher than any other snapshot.\n * @type {!MAX_NODE}\n * @const\n */\n\nvar MAX_NODE = exports.MAX_NODE = new MaxNode();\nObject.defineProperties(_Node.NamedNode, {\n    MIN: {\n        value: new _Node.NamedNode(_util.MIN_NAME, ChildrenNode.EMPTY_NODE)\n    },\n    MAX: {\n        value: new _Node.NamedNode(_util.MAX_NAME, MAX_NODE)\n    }\n});\n/**\n * Reference Extensions\n */\n_KeyIndex.KeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\n_LeafNode.LeafNode.__childrenNodeConstructor = ChildrenNode;\n(0, _snap.setMaxNode)(MAX_NODE);\n(0, _PriorityIndex.setMaxNode)(MAX_NODE);\n\n\n},{\"../../../utils/assert\":135,\"../util/SortedMap\":61,\"../util/util\":65,\"./IndexMap\":35,\"./LeafNode\":36,\"./Node\":37,\"./comparators\":39,\"./indexes/KeyIndex\":41,\"./indexes/PriorityIndex\":43,\"./snap\":46}],35:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IndexMap = undefined;\n\nvar _assert = require('../../../utils/assert');\n\nvar _childSet = require('./childSet');\n\nvar _obj = require('../../../utils/obj');\n\nvar _Node = require('./Node');\n\nvar _PriorityIndex = require('./indexes/PriorityIndex');\n\nvar _KeyIndex = require('./indexes/KeyIndex');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar _defaultIndexMap;\nvar fallbackObject = {};\n/**\n *\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\n * @param {Object.<string, Index>} indexSet\n * @constructor\n */\nvar IndexMap = function () {\n    function IndexMap(indexes_, indexSet_) {\n        this.indexes_ = indexes_;\n        this.indexSet_ = indexSet_;\n    }\n    Object.defineProperty(IndexMap, \"Default\", {\n        /**\n         * The default IndexMap for nodes without a priority\n         * @type {!IndexMap}\n         * @const\n         */\n        get: function get() {\n            (0, _assert.assert)(fallbackObject && _PriorityIndex.PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n            _defaultIndexMap = _defaultIndexMap || new IndexMap({ '.priority': fallbackObject }, { '.priority': _PriorityIndex.PRIORITY_INDEX });\n            return _defaultIndexMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @param {!string} indexKey\n     * @return {?SortedMap.<NamedNode, Node>}\n     */\n    IndexMap.prototype.get = function (indexKey) {\n        var sortedMap = (0, _obj.safeGet)(this.indexes_, indexKey);\n        if (!sortedMap) throw new Error('No index defined for ' + indexKey);\n        if (sortedMap === fallbackObject) {\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n            // regular child map\n            return null;\n        } else {\n            return sortedMap;\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {boolean}\n     */\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\n        return (0, _obj.contains)(this.indexSet_, indexDefinition.toString());\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n        (0, _assert.assert)(indexDefinition !== _KeyIndex.KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n        var childList = [];\n        var sawIndexedValue = false;\n        var iter = existingChildren.getIterator(_Node.NamedNode.Wrap);\n        var next = iter.getNext();\n        while (next) {\n            sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n            childList.push(next);\n            next = iter.getNext();\n        }\n        var newIndex;\n        if (sawIndexedValue) {\n            newIndex = (0, _childSet.buildChildSet)(childList, indexDefinition.getCompare());\n        } else {\n            newIndex = fallbackObject;\n        }\n        var indexName = indexDefinition.toString();\n        var newIndexSet = (0, _obj.clone)(this.indexSet_);\n        newIndexSet[indexName] = indexDefinition;\n        var newIndexes = (0, _obj.clone)(this.indexes_);\n        newIndexes[indexName] = newIndex;\n        return new IndexMap(newIndexes, newIndexSet);\n    };\n    /**\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\n     * @param {!NamedNode} namedNode\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n        var _this = this;\n        var newIndexes = (0, _obj.map)(this.indexes_, function (indexedChildren, indexName) {\n            var index = (0, _obj.safeGet)(_this.indexSet_, indexName);\n            (0, _assert.assert)(index, 'Missing index implementation for ' + indexName);\n            if (indexedChildren === fallbackObject) {\n                // Check to see if we need to index everything\n                if (index.isDefinedOn(namedNode.node)) {\n                    // We need to build this index\n                    var childList = [];\n                    var iter = existingChildren.getIterator(_Node.NamedNode.Wrap);\n                    var next = iter.getNext();\n                    while (next) {\n                        if (next.name != namedNode.name) {\n                            childList.push(next);\n                        }\n                        next = iter.getNext();\n                    }\n                    childList.push(namedNode);\n                    return (0, _childSet.buildChildSet)(childList, index.getCompare());\n                } else {\n                    // No change, this remains a fallback\n                    return fallbackObject;\n                }\n            } else {\n                var existingSnap = existingChildren.get(namedNode.name);\n                var newChildren = indexedChildren;\n                if (existingSnap) {\n                    newChildren = newChildren.remove(new _Node.NamedNode(namedNode.name, existingSnap));\n                }\n                return newChildren.insert(namedNode, namedNode.node);\n            }\n        });\n        return new IndexMap(newIndexes, this.indexSet_);\n    };\n    /**\n     * Create a new IndexMap instance with the given value removed\n     * @param {!NamedNode} namedNode\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n        var newIndexes = (0, _obj.map)(this.indexes_, function (indexedChildren) {\n            if (indexedChildren === fallbackObject) {\n                // This is the fallback. Just return it, nothing to do in this case\n                return indexedChildren;\n            } else {\n                var existingSnap = existingChildren.get(namedNode.name);\n                if (existingSnap) {\n                    return indexedChildren.remove(new _Node.NamedNode(namedNode.name, existingSnap));\n                } else {\n                    // No record of this child\n                    return indexedChildren;\n                }\n            }\n        });\n        return new IndexMap(newIndexes, this.indexSet_);\n    };\n    return IndexMap;\n}();\nexports.IndexMap = IndexMap;\n\n\n},{\"../../../utils/assert\":135,\"../../../utils/obj\":144,\"./Node\":37,\"./childSet\":38,\"./indexes/KeyIndex\":41,\"./indexes/PriorityIndex\":43}],36:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeafNode = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nvar _assert = require('../../../utils/assert');\n\nvar _util = require('../util/util');\n\nvar _snap = require('./snap');\n\nvar __childrenNodeConstructor;\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nvar LeafNode = function () {\n    /**\n     * @implements {Node}\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\n     *                                         The object type is possible in the event of a deferred value\n     * @param {!Node=} priorityNode_ The priority of this node.\n     */\n    function LeafNode(value_, priorityNode_) {\n        if (priorityNode_ === void 0) {\n            priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n        this.value_ = value_;\n        this.priorityNode_ = priorityNode_;\n        this.lazyHash_ = null;\n        (0, _assert.assert)(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n        (0, _snap.validatePriorityNode)(this.priorityNode_);\n    }\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n        get: function get() {\n            return __childrenNodeConstructor;\n        },\n        set: function set(val) {\n            __childrenNodeConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @inheritDoc */\n    LeafNode.prototype.isLeafNode = function () {\n        return true;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getPriority = function () {\n        return this.priorityNode_;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\n        return new LeafNode(this.value_, newPriorityNode);\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getImmediateChild = function (childName) {\n        // Hack to treat priority as a regular child\n        if (childName === '.priority') {\n            return this.priorityNode_;\n        } else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getChild = function (path) {\n        if (path.isEmpty()) {\n            return this;\n        } else if (path.getFront() === '.priority') {\n            return this.priorityNode_;\n        } else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.hasChild = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n        return null;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n        if (childName === '.priority') {\n            return this.updatePriority(newChildNode);\n        } else if (newChildNode.isEmpty() && childName !== '.priority') {\n            return this;\n        } else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\n        var front = path.getFront();\n        if (front === null) {\n            return newChildNode;\n        } else if (newChildNode.isEmpty() && front !== '.priority') {\n            return this;\n        } else {\n            (0, _assert.assert)(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.isEmpty = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.numChildren = function () {\n        return 0;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.forEachChild = function (index, action) {\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.val = function (exportFormat) {\n        if (exportFormat && !this.getPriority().isEmpty()) return {\n            '.value': this.getValue(),\n            '.priority': this.getPriority().val()\n        };else return this.getValue();\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.hash = function () {\n        if (this.lazyHash_ === null) {\n            var toHash = '';\n            if (!this.priorityNode_.isEmpty()) toHash += 'priority:' + (0, _snap.priorityHashText)(this.priorityNode_.val()) + ':';\n            var type = _typeof(this.value_);\n            toHash += type + ':';\n            if (type === 'number') {\n                toHash += (0, _util.doubleToIEEE754String)(this.value_);\n            } else {\n                toHash += this.value_;\n            }\n            this.lazyHash_ = (0, _util.sha1)(toHash);\n        }\n        return this.lazyHash_;\n    };\n    /**\n     * Returns the value of the leaf node.\n     * @return {Object|string|number|boolean} The value of the node.\n     */\n    LeafNode.prototype.getValue = function () {\n        return this.value_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.compareTo = function (other) {\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n            return 1;\n        } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n            return -1;\n        } else {\n            (0, _assert.assert)(other.isLeafNode(), 'Unknown node type');\n            return this.compareToLeafNode_(other);\n        }\n    };\n    /**\n     * Comparison specifically for two leaf nodes\n     * @param {!LeafNode} otherLeaf\n     * @return {!number}\n     * @private\n     */\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n        var otherLeafType = _typeof(otherLeaf.value_);\n        var thisLeafType = _typeof(this.value_);\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n        (0, _assert.assert)(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n        (0, _assert.assert)(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n        if (otherIndex === thisIndex) {\n            // Same type, compare values\n            if (thisLeafType === 'object') {\n                // Deferred value nodes are all equal, but we should also never get to this point...\n                return 0;\n            } else {\n                // Note that this works because true > false, all others are number or string comparisons\n                if (this.value_ < otherLeaf.value_) {\n                    return -1;\n                } else if (this.value_ === otherLeaf.value_) {\n                    return 0;\n                } else {\n                    return 1;\n                }\n            }\n        } else {\n            return thisIndex - otherIndex;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.withIndex = function () {\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.isIndexed = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.equals = function (other) {\n        /**\n         * @inheritDoc\n         */\n        if (other === this) {\n            return true;\n        } else if (other.isLeafNode()) {\n            var otherLeaf = other;\n            return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n        } else {\n            return false;\n        }\n    };\n    /**\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n     * the same type, the comparison falls back to their value\n     * @type {Array.<!string>}\n     * @const\n     */\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n    return LeafNode;\n}();\nexports.LeafNode = LeafNode;\n\n\n},{\"../../../utils/assert\":135,\"../util/util\":65,\"./snap\":46}],37:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n *\n * @param {!string} name\n * @param {!Node} node\n * @constructor\n * @struct\n */\nvar NamedNode = function () {\n    function NamedNode(name, node) {\n        this.name = name;\n        this.node = node;\n    }\n    /**\n     *\n     * @param {!string} name\n     * @param {!Node} node\n     * @return {NamedNode}\n     */\n    NamedNode.Wrap = function (name, node) {\n        return new NamedNode(name, node);\n    };\n    return NamedNode;\n}();\nexports.NamedNode = NamedNode;\n\n\n},{}],38:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.buildChildSet = undefined;\n\nvar _SortedMap = require('../util/SortedMap');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar LOG_2 = Math.log(2);\n/**\n * @constructor\n */\nvar Base12Num = function () {\n    /**\n     * @param {number} length\n     */\n    function Base12Num(length) {\n        var logBase2 = function logBase2(num) {\n            return parseInt(Math.log(num) / LOG_2, 10);\n        };\n        var bitMask = function bitMask(bits) {\n            return parseInt(Array(bits + 1).join('1'), 2);\n        };\n        this.count = logBase2(length + 1);\n        this.current_ = this.count - 1;\n        var mask = bitMask(this.count);\n        this.bits_ = length + 1 & mask;\n    }\n    /**\n     * @return {boolean}\n     */\n    Base12Num.prototype.nextBitIsOne = function () {\n        //noinspection JSBitwiseOperatorUsage\n        var result = !(this.bits_ & 0x1 << this.current_);\n        this.current_--;\n        return result;\n    };\n    return Base12Num;\n}();\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @template K, V\n * @param {Array.<!NamedNode>} childList Unsorted list of children\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\n *                                                        type is not NamedNode\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\n * @return {SortedMap.<K, V>}\n */\nvar buildChildSet = exports.buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n    childList.sort(cmp);\n    var buildBalancedTree = function buildBalancedTree(low, high) {\n        var length = high - low;\n        var namedNode;\n        var key;\n        if (length == 0) {\n            return null;\n        } else if (length == 1) {\n            namedNode = childList[low];\n            key = keyFn ? keyFn(namedNode) : namedNode;\n            return new _SortedMap.LLRBNode(key, namedNode.node, _SortedMap.LLRBNode.BLACK, null, null);\n        } else {\n            var middle = parseInt(length / 2, 10) + low;\n            var left = buildBalancedTree(low, middle);\n            var right = buildBalancedTree(middle + 1, high);\n            namedNode = childList[middle];\n            key = keyFn ? keyFn(namedNode) : namedNode;\n            return new _SortedMap.LLRBNode(key, namedNode.node, _SortedMap.LLRBNode.BLACK, left, right);\n        }\n    };\n    var buildFrom12Array = function buildFrom12Array(base12) {\n        var node = null;\n        var root = null;\n        var index = childList.length;\n        var buildPennant = function buildPennant(chunkSize, color) {\n            var low = index - chunkSize;\n            var high = index;\n            index -= chunkSize;\n            var childTree = buildBalancedTree(low + 1, high);\n            var namedNode = childList[low];\n            var key = keyFn ? keyFn(namedNode) : namedNode;\n            attachPennant(new _SortedMap.LLRBNode(key, namedNode.node, color, null, childTree));\n        };\n        var attachPennant = function attachPennant(pennant) {\n            if (node) {\n                node.left = pennant;\n                node = pennant;\n            } else {\n                root = pennant;\n                node = pennant;\n            }\n        };\n        for (var i = 0; i < base12.count; ++i) {\n            var isOne = base12.nextBitIsOne();\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\n            if (isOne) {\n                buildPennant(chunkSize, _SortedMap.LLRBNode.BLACK);\n            } else {\n                // current == 2\n                buildPennant(chunkSize, _SortedMap.LLRBNode.BLACK);\n                buildPennant(chunkSize, _SortedMap.LLRBNode.RED);\n            }\n        }\n        return root;\n    };\n    var base12 = new Base12Num(childList.length);\n    var root = buildFrom12Array(base12);\n    return new _SortedMap.SortedMap(mapSortFn || cmp, root);\n};\n\n\n},{\"../util/SortedMap\":61}],39:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.NAME_ONLY_COMPARATOR = NAME_ONLY_COMPARATOR;\nexports.NAME_COMPARATOR = NAME_COMPARATOR;\n\nvar _util = require('../util/util');\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n    return (0, _util.nameCompare)(left.name, right.name);\n} /**\n  * Copyright 2017 Google Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\nfunction NAME_COMPARATOR(left, right) {\n    return (0, _util.nameCompare)(left, right);\n}\n\n\n},{\"../util/util\":65}],40:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Index = undefined;\n\nvar _Node = require('../Node');\n\nvar _util = require('../../util/util');\n\n/**\n *\n * @constructor\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar Index = function () {\n  function Index() {}\n  /**\n   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\n   * this index\n   */\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   * @param {!Node} oldNode\n   * @param {!Node} newNode\n   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new _Node.NamedNode(_util.MIN_NAME, oldNode);\n    var newWrapped = new _Node.NamedNode(_util.MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\n   * @return {!NamedNode} a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  Index.prototype.minPost = function () {\n    return _Node.NamedNode.MIN;\n  };\n  return Index;\n}();\nexports.Index = Index;\n\n\n},{\"../../util/util\":65,\"../Node\":37}],41:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.KEY_INDEX = exports.KeyIndex = undefined;\n\nvar _Index = require('./Index');\n\nvar _Node = require('../Node');\n\nvar _util = require('../../util/util');\n\nvar _assert = require('../../../../utils/assert');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\nvar __EMPTY_NODE;\nvar KeyIndex = function (_super) {\n    __extends(KeyIndex, _super);\n    function KeyIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n        get: function get() {\n            return __EMPTY_NODE;\n        },\n        set: function set(val) {\n            __EMPTY_NODE = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.compare = function (a, b) {\n        return (0, _util.nameCompare)(a.name, b.name);\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.isDefinedOn = function (node) {\n        // We could probably return true here (since every node has a key), but it's never called\n        // so just leaving unimplemented for now.\n        throw (0, _assert.assertionError)('KeyIndex.isDefinedOn not expected to be called.');\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return false; // The key for a node never changes.\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.minPost = function () {\n        return _Node.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.maxPost = function () {\n        // TODO: This should really be created once and cached in a static property, but\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n        return new _Node.NamedNode(_util.MAX_NAME, __EMPTY_NODE);\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    KeyIndex.prototype.makePost = function (indexValue, name) {\n        (0, _assert.assert)(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n        return new _Node.NamedNode(indexValue, __EMPTY_NODE);\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    KeyIndex.prototype.toString = function () {\n        return '.key';\n    };\n    return KeyIndex;\n}(_Index.Index);\nexports.KeyIndex = KeyIndex;\nvar KEY_INDEX = exports.KEY_INDEX = new KeyIndex();\n\n\n},{\"../../../../utils/assert\":135,\"../../util/util\":65,\"../Node\":37,\"./Index\":40}],42:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PathIndex = undefined;\n\nvar _assert = require('../../../../utils/assert');\n\nvar _util = require('../../util/util');\n\nvar _Index = require('./Index');\n\nvar _ChildrenNode = require('../ChildrenNode');\n\nvar _Node = require('../Node');\n\nvar _nodeFromJSON = require('../nodeFromJSON');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n/**\n * @param {!Path} indexPath\n * @constructor\n * @extends {Index}\n */\nvar PathIndex = function (_super) {\n    __extends(PathIndex, _super);\n    function PathIndex(indexPath_) {\n        var _this = _super.call(this) || this;\n        _this.indexPath_ = indexPath_;\n        (0, _assert.assert)(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n        return _this;\n    }\n    /**\n     * @param {!Node} snap\n     * @return {!Node}\n     * @protected\n     */\n    PathIndex.prototype.extractChild = function (snap) {\n        return snap.getChild(this.indexPath_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.isDefinedOn = function (node) {\n        return !node.getChild(this.indexPath_).isEmpty();\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.compare = function (a, b) {\n        var aChild = this.extractChild(a.node);\n        var bChild = this.extractChild(b.node);\n        var indexCmp = aChild.compareTo(bChild);\n        if (indexCmp === 0) {\n            return (0, _util.nameCompare)(a.name, b.name);\n        } else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.makePost = function (indexValue, name) {\n        var valueNode = (0, _nodeFromJSON.nodeFromJSON)(indexValue);\n        var node = _ChildrenNode.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n        return new _Node.NamedNode(name, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.maxPost = function () {\n        var node = _ChildrenNode.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, _ChildrenNode.MAX_NODE);\n        return new _Node.NamedNode(_util.MAX_NAME, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.toString = function () {\n        return this.indexPath_.slice().join('/');\n    };\n    return PathIndex;\n}(_Index.Index);\nexports.PathIndex = PathIndex;\n\n\n},{\"../../../../utils/assert\":135,\"../../util/util\":65,\"../ChildrenNode\":34,\"../Node\":37,\"../nodeFromJSON\":45,\"./Index\":40}],43:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PRIORITY_INDEX = exports.PriorityIndex = undefined;\nexports.setNodeFromJSON = setNodeFromJSON;\nexports.setMaxNode = setMaxNode;\n\nvar _Index = require('./Index');\n\nvar _util = require('../../util/util');\n\nvar _Node = require('../Node');\n\nvar _LeafNode = require('../LeafNode');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\nvar nodeFromJSON;\nvar MAX_NODE;\nfunction setNodeFromJSON(val) {\n    nodeFromJSON = val;\n}\nfunction setMaxNode(val) {\n    MAX_NODE = val;\n}\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nvar PriorityIndex = function (_super) {\n    __extends(PriorityIndex, _super);\n    function PriorityIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.compare = function (a, b) {\n        var aPriority = a.node.getPriority();\n        var bPriority = b.node.getPriority();\n        var indexCmp = aPriority.compareTo(bPriority);\n        if (indexCmp === 0) {\n            return (0, _util.nameCompare)(a.name, b.name);\n        } else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.isDefinedOn = function (node) {\n        return !node.getPriority().isEmpty();\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.getPriority().equals(newNode.getPriority());\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.minPost = function () {\n        return _Node.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.maxPost = function () {\n        return new _Node.NamedNode(_util.MAX_NAME, new _LeafNode.LeafNode('[PRIORITY-POST]', MAX_NODE));\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\n        var priorityNode = nodeFromJSON(indexValue);\n        return new _Node.NamedNode(name, new _LeafNode.LeafNode('[PRIORITY-POST]', priorityNode));\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    PriorityIndex.prototype.toString = function () {\n        return '.priority';\n    };\n    return PriorityIndex;\n}(_Index.Index);\nexports.PriorityIndex = PriorityIndex;\nvar PRIORITY_INDEX = exports.PRIORITY_INDEX = new PriorityIndex();\n\n\n},{\"../../util/util\":65,\"../LeafNode\":36,\"../Node\":37,\"./Index\":40}],44:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.VALUE_INDEX = exports.ValueIndex = undefined;\n\nvar _Index = require('./Index');\n\nvar _Node = require('../Node');\n\nvar _util = require('../../util/util');\n\nvar _nodeFromJSON = require('../nodeFromJSON');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nvar ValueIndex = function (_super) {\n    __extends(ValueIndex, _super);\n    function ValueIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.compare = function (a, b) {\n        var indexCmp = a.node.compareTo(b.node);\n        if (indexCmp === 0) {\n            return (0, _util.nameCompare)(a.name, b.name);\n        } else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.isDefinedOn = function (node) {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.equals(newNode);\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.minPost = function () {\n        return _Node.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.maxPost = function () {\n        return _Node.NamedNode.MAX;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    ValueIndex.prototype.makePost = function (indexValue, name) {\n        var valueNode = (0, _nodeFromJSON.nodeFromJSON)(indexValue);\n        return new _Node.NamedNode(name, valueNode);\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    ValueIndex.prototype.toString = function () {\n        return '.value';\n    };\n    return ValueIndex;\n}(_Index.Index);\nexports.ValueIndex = ValueIndex;\nvar VALUE_INDEX = exports.VALUE_INDEX = new ValueIndex();\n\n\n},{\"../../util/util\":65,\"../Node\":37,\"../nodeFromJSON\":45,\"./Index\":40}],45:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nexports.nodeFromJSON = nodeFromJSON;\n\nvar _ChildrenNode = require('./ChildrenNode');\n\nvar _LeafNode = require('./LeafNode');\n\nvar _Node = require('./Node');\n\nvar _obj = require('../../../utils/obj');\n\nvar _assert = require('../../../utils/assert');\n\nvar _childSet = require('./childSet');\n\nvar _comparators = require('./comparators');\n\nvar _IndexMap = require('./IndexMap');\n\nvar _PriorityIndex = require('./indexes/PriorityIndex');\n\nvar USE_HINZE = true;\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param {*} json JSON to create a node for.\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n * @return {!Node}\n */\nfunction nodeFromJSON(json, priority) {\n    if (priority === void 0) {\n        priority = null;\n    }\n    if (json === null) {\n        return _ChildrenNode.ChildrenNode.EMPTY_NODE;\n    }\n    if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object' && '.priority' in json) {\n        priority = json['.priority'];\n    }\n    (0, _assert.assert)(priority === null || typeof priority === 'string' || typeof priority === 'number' || (typeof priority === 'undefined' ? 'undefined' : _typeof(priority)) === 'object' && '.sv' in priority, 'Invalid priority type found: ' + (typeof priority === 'undefined' ? 'undefined' : _typeof(priority)));\n    if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object' && '.value' in json && json['.value'] !== null) {\n        json = json['.value'];\n    }\n    // Valid leaf nodes include non-objects or server-value wrapper objects\n    if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) !== 'object' || '.sv' in json) {\n        var jsonLeaf = json;\n        return new _LeafNode.LeafNode(jsonLeaf, nodeFromJSON(priority));\n    }\n    if (!(json instanceof Array) && USE_HINZE) {\n        var children_1 = [];\n        var childrenHavePriority_1 = false;\n        var hinzeJsonObj_1 = json;\n        (0, _obj.forEach)(hinzeJsonObj_1, function (key, child) {\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\n                // Ignore metadata nodes\n                var childNode = nodeFromJSON(hinzeJsonObj_1[key]);\n                if (!childNode.isEmpty()) {\n                    childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n                    children_1.push(new _Node.NamedNode(key, childNode));\n                }\n            }\n        });\n        if (children_1.length == 0) {\n            return _ChildrenNode.ChildrenNode.EMPTY_NODE;\n        }\n        var childSet = (0, _childSet.buildChildSet)(children_1, _comparators.NAME_ONLY_COMPARATOR, function (namedNode) {\n            return namedNode.name;\n        }, _comparators.NAME_COMPARATOR);\n        if (childrenHavePriority_1) {\n            var sortedChildSet = (0, _childSet.buildChildSet)(children_1, _PriorityIndex.PRIORITY_INDEX.getCompare());\n            return new _ChildrenNode.ChildrenNode(childSet, nodeFromJSON(priority), new _IndexMap.IndexMap({ '.priority': sortedChildSet }, { '.priority': _PriorityIndex.PRIORITY_INDEX }));\n        } else {\n            return new _ChildrenNode.ChildrenNode(childSet, nodeFromJSON(priority), _IndexMap.IndexMap.Default);\n        }\n    } else {\n        var node_1 = _ChildrenNode.ChildrenNode.EMPTY_NODE;\n        var jsonObj_1 = json;\n        (0, _obj.forEach)(jsonObj_1, function (key, childData) {\n            if ((0, _obj.contains)(jsonObj_1, key)) {\n                if (key.substring(0, 1) !== '.') {\n                    // ignore metadata nodes.\n                    var childNode = nodeFromJSON(childData);\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) node_1 = node_1.updateImmediateChild(key, childNode);\n                }\n            }\n        });\n        return node_1.updatePriority(nodeFromJSON(priority));\n    }\n}\n(0, _PriorityIndex.setNodeFromJSON)(nodeFromJSON);\n\n\n},{\"../../../utils/assert\":135,\"../../../utils/obj\":144,\"./ChildrenNode\":34,\"./IndexMap\":35,\"./LeafNode\":36,\"./Node\":37,\"./childSet\":38,\"./comparators\":39,\"./indexes/PriorityIndex\":43}],46:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.validatePriorityNode = exports.priorityHashText = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nexports.setMaxNode = setMaxNode;\n\nvar _assert = require('../../../utils/assert');\n\nvar _util = require('../util/util');\n\nvar _obj = require('../../../utils/obj');\n\nvar MAX_NODE;\nfunction setMaxNode(val) {\n    MAX_NODE = val;\n}\n/**\n * @param {(!string|!number)} priority\n * @return {!string}\n */\nvar priorityHashText = exports.priorityHashText = function priorityHashText(priority) {\n    if (typeof priority === 'number') return 'number:' + (0, _util.doubleToIEEE754String)(priority);else return 'string:' + priority;\n};\n/**\n * Validates that a priority snapshot Node is valid.\n *\n * @param {!Node} priorityNode\n */\nvar validatePriorityNode = exports.validatePriorityNode = function validatePriorityNode(priorityNode) {\n    if (priorityNode.isLeafNode()) {\n        var val = priorityNode.val();\n        (0, _assert.assert)(typeof val === 'string' || typeof val === 'number' || (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && (0, _obj.contains)(val, '.sv'), 'Priority must be a string or number.');\n    } else {\n        (0, _assert.assert)(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n    }\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n    (0, _assert.assert)(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n\n\n},{\"../../../utils/assert\":135,\"../../../utils/obj\":144,\"../util/util\":65}],47:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StatsCollection = undefined;\n\nvar _deep_copy = require('../../../utils/deep_copy');\n\nvar _obj = require('../../../utils/obj');\n\n/**\n * Tracks a collection of stats.\n *\n * @constructor\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar StatsCollection = function () {\n    function StatsCollection() {\n        this.counters_ = {};\n    }\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\n        if (amount === void 0) {\n            amount = 1;\n        }\n        if (!(0, _obj.contains)(this.counters_, name)) this.counters_[name] = 0;\n        this.counters_[name] += amount;\n    };\n    StatsCollection.prototype.get = function () {\n        return (0, _deep_copy.deepCopy)(this.counters_);\n    };\n    return StatsCollection;\n}();\nexports.StatsCollection = StatsCollection;\n\n\n},{\"../../../utils/deep_copy\":138,\"../../../utils/obj\":144}],48:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StatsListener = undefined;\n\nvar _obj = require('../../../utils/obj');\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n * @constructor\n */\nvar StatsListener = function () {\n    function StatsListener(collection_) {\n        this.collection_ = collection_;\n        this.last_ = null;\n    }\n    StatsListener.prototype.get = function () {\n        var newStats = this.collection_.get();\n        var delta = (0, _obj.clone)(newStats);\n        if (this.last_) {\n            (0, _obj.forEach)(this.last_, function (stat, value) {\n                delta[stat] = delta[stat] - value;\n            });\n        }\n        this.last_ = newStats;\n        return delta;\n    };\n    return StatsListener;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.StatsListener = StatsListener;\n\n\n},{\"../../../utils/obj\":144}],49:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StatsManager = undefined;\n\nvar _StatsCollection = require('./StatsCollection');\n\nvar StatsManager = function () {\n    function StatsManager() {}\n    StatsManager.getCollection = function (repoInfo) {\n        var hashString = repoInfo.toString();\n        if (!this.collections_[hashString]) {\n            this.collections_[hashString] = new _StatsCollection.StatsCollection();\n        }\n        return this.collections_[hashString];\n    };\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n        var hashString = repoInfo.toString();\n        if (!this.reporters_[hashString]) {\n            this.reporters_[hashString] = creatorFunction();\n        }\n        return this.reporters_[hashString];\n    };\n    StatsManager.collections_ = {};\n    StatsManager.reporters_ = {};\n    return StatsManager;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.StatsManager = StatsManager;\n\n\n},{\"./StatsCollection\":47}],50:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StatsReporter = undefined;\n\nvar _obj = require('../../../utils/obj');\n\nvar _util = require('../util/util');\n\nvar _StatsListener = require('./StatsListener');\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nvar FIRST_STATS_MIN_TIME = 10 * 1000; /**\n                                      * Copyright 2017 Google Inc.\n                                      *\n                                      * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                      * you may not use this file except in compliance with the License.\n                                      * You may obtain a copy of the License at\n                                      *\n                                      *   http://www.apache.org/licenses/LICENSE-2.0\n                                      *\n                                      * Unless required by applicable law or agreed to in writing, software\n                                      * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                      * See the License for the specific language governing permissions and\n                                      * limitations under the License.\n                                      */\n\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\n// We'll continue to report stats on average every 5 minutes.\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\n * @constructor\n */\nvar StatsReporter = function () {\n    /**\n     * @param collection\n     * @param server_\n     */\n    function StatsReporter(collection, server_) {\n        this.server_ = server_;\n        this.statsToReport_ = {};\n        this.statsListener_ = new _StatsListener.StatsListener(collection);\n        var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n        (0, _util.setTimeoutNonBlocking)(this.reportStats_.bind(this), Math.floor(timeout));\n    }\n    StatsReporter.prototype.includeStat = function (stat) {\n        this.statsToReport_[stat] = true;\n    };\n    StatsReporter.prototype.reportStats_ = function () {\n        var _this = this;\n        var stats = this.statsListener_.get();\n        var reportedStats = {};\n        var haveStatsToReport = false;\n        (0, _obj.forEach)(stats, function (stat, value) {\n            if (value > 0 && (0, _obj.contains)(_this.statsToReport_, stat)) {\n                reportedStats[stat] = value;\n                haveStatsToReport = true;\n            }\n        });\n        if (haveStatsToReport) {\n            this.server_.reportStats(reportedStats);\n        }\n        // queue our next run.\n        (0, _util.setTimeoutNonBlocking)(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n    };\n    return StatsReporter;\n}();\nexports.StatsReporter = StatsReporter;\n\n\n},{\"../../../utils/obj\":144,\"../util/util\":65,\"./StatsListener\":48}],51:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DOMStorageWrapper = undefined;\n\nvar _json = require('../../../utils/json');\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n * @constructor\n */\nvar DOMStorageWrapper = function () {\n    /**\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\n     */\n    function DOMStorageWrapper(domStorage_) {\n        this.domStorage_ = domStorage_;\n        // Use a prefix to avoid collisions with other stuff saved by the app.\n        this.prefix_ = 'firebase:';\n    }\n    /**\n     * @param {string} key The key to save the value under\n     * @param {?Object} value The value being stored, or null to remove the key.\n     */\n    DOMStorageWrapper.prototype.set = function (key, value) {\n        if (value == null) {\n            this.domStorage_.removeItem(this.prefixedName_(key));\n        } else {\n            this.domStorage_.setItem(this.prefixedName_(key), (0, _json.stringify)(value));\n        }\n    };\n    /**\n     * @param {string} key\n     * @return {*} The value that was stored under this key, or null\n     */\n    DOMStorageWrapper.prototype.get = function (key) {\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n        if (storedVal == null) {\n            return null;\n        } else {\n            return (0, _json.jsonEval)(storedVal);\n        }\n    };\n    /**\n     * @param {string} key\n     */\n    DOMStorageWrapper.prototype.remove = function (key) {\n        this.domStorage_.removeItem(this.prefixedName_(key));\n    };\n    /**\n     * @param {string} name\n     * @return {string}\n     */\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n        return this.prefix_ + name;\n    };\n    DOMStorageWrapper.prototype.toString = function () {\n        return this.domStorage_.toString();\n    };\n    return DOMStorageWrapper;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.DOMStorageWrapper = DOMStorageWrapper;\n\n\n},{\"../../../utils/json\":142}],52:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MemoryStorage = undefined;\n\nvar _obj = require('../../../utils/obj');\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n *\n * @constructor\n */\nvar MemoryStorage = function () {\n    function MemoryStorage() {\n        this.cache_ = {};\n        this.isInMemoryStorage = true;\n    }\n    MemoryStorage.prototype.set = function (key, value) {\n        if (value == null) {\n            delete this.cache_[key];\n        } else {\n            this.cache_[key] = value;\n        }\n    };\n    MemoryStorage.prototype.get = function (key) {\n        if ((0, _obj.contains)(this.cache_, key)) {\n            return this.cache_[key];\n        }\n        return null;\n    };\n    MemoryStorage.prototype.remove = function (key) {\n        delete this.cache_[key];\n    };\n    return MemoryStorage;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.MemoryStorage = MemoryStorage;\n\n\n},{\"../../../utils/obj\":144}],53:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SessionStorage = exports.PersistentStorage = undefined;\n\nvar _DOMStorageWrapper = require('./DOMStorageWrapper');\n\nvar _MemoryStorage = require('./MemoryStorage');\n\n/**\n* Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n* TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n* to reflect this type\n*\n* @param {string} domStorageName Name of the underlying storage object\n*   (e.g. 'localStorage' or 'sessionStorage').\n* @return {?} Turning off type information until a common interface is defined.\n*/\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar createStoragefor = function createStoragefor(domStorageName) {\n    try {\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n        // so it must be inside the try/catch.\n        if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n            // Need to test cache. Just because it's here doesn't mean it works\n            var domStorage = window[domStorageName];\n            domStorage.setItem('firebase:sentinel', 'cache');\n            domStorage.removeItem('firebase:sentinel');\n            return new _DOMStorageWrapper.DOMStorageWrapper(domStorage);\n        }\n    } catch (e) {}\n    // Failed to create wrapper.  Just return in-memory storage.\n    // TODO: log?\n    return new _MemoryStorage.MemoryStorage();\n};\n/** A storage object that lasts across sessions */\nvar PersistentStorage = exports.PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\nvar SessionStorage = exports.SessionStorage = createStoragefor('sessionStorage');\n\n\n},{\"./DOMStorageWrapper\":51,\"./MemoryStorage\":52}],54:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CountedSet = undefined;\n\nvar _obj = require('../../../utils/obj');\n\n/**\n * Implements a set with a count of elements.\n *\n * @template K, V\n */\nvar CountedSet = function () {\n    function CountedSet() {\n        this.set = {};\n    }\n    /**\n     * @param {!K} item\n     * @param {V} val\n     */\n    CountedSet.prototype.add = function (item, val) {\n        this.set[item] = val !== null ? val : true;\n    };\n    /**\n     * @param {!K} key\n     * @return {boolean}\n     */\n    CountedSet.prototype.contains = function (key) {\n        return (0, _obj.contains)(this.set, key);\n    };\n    /**\n     * @param {!K} item\n     * @return {V}\n     */\n    CountedSet.prototype.get = function (item) {\n        return this.contains(item) ? this.set[item] : undefined;\n    };\n    /**\n     * @param {!K} item\n     */\n    CountedSet.prototype.remove = function (item) {\n        delete this.set[item];\n    };\n    /**\n     * Deletes everything in the set\n     */\n    CountedSet.prototype.clear = function () {\n        this.set = {};\n    };\n    /**\n     * True if there's nothing in the set\n     * @return {boolean}\n     */\n    CountedSet.prototype.isEmpty = function () {\n        return (0, _obj.isEmpty)(this.set);\n    };\n    /**\n     * @return {number} The number of items in the set\n     */\n    CountedSet.prototype.count = function () {\n        return (0, _obj.getCount)(this.set);\n    };\n    /**\n     * Run a function on each k,v pair in the set\n     * @param {function(K, V)} fn\n     */\n    CountedSet.prototype.each = function (fn) {\n        (0, _obj.forEach)(this.set, function (k, v) {\n            return fn(k, v);\n        });\n    };\n    /**\n     * Mostly for debugging\n     * @return {Array.<K>} The keys present in this CountedSet\n     */\n    CountedSet.prototype.keys = function () {\n        var keys = [];\n        (0, _obj.forEach)(this.set, function (k) {\n            keys.push(k);\n        });\n        return keys;\n    };\n    return CountedSet;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.CountedSet = CountedSet;\n\n\n},{\"../../../utils/obj\":144}],55:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.EventEmitter = undefined;\n\nvar _assert = require('../../../utils/assert');\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nvar EventEmitter = function () {\n    /**\n     * @param {!Array.<string>} allowedEvents_\n     */\n    function EventEmitter(allowedEvents_) {\n        this.allowedEvents_ = allowedEvents_;\n        this.listeners_ = {};\n        (0, _assert.assert)(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n    }\n    /**\n     * To be called by derived classes to trigger events.\n     * @param {!string} eventType\n     * @param {...*} var_args\n     */\n    EventEmitter.prototype.trigger = function (eventType) {\n        var var_args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            var_args[_i - 1] = arguments[_i];\n        }\n        if (Array.isArray(this.listeners_[eventType])) {\n            // Clone the list, since callbacks could add/remove listeners.\n            var listeners = this.listeners_[eventType].slice();\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i].callback.apply(listeners[i].context, var_args);\n            }\n        }\n    };\n    EventEmitter.prototype.on = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\n        this.listeners_[eventType].push({ callback: callback, context: context });\n        var eventData = this.getInitialEvent(eventType);\n        if (eventData) {\n            callback.apply(context, eventData);\n        }\n    };\n    EventEmitter.prototype.off = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        var listeners = this.listeners_[eventType] || [];\n        for (var i = 0; i < listeners.length; i++) {\n            if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n                listeners.splice(i, 1);\n                return;\n            }\n        }\n    };\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\n        (0, _assert.assert)(this.allowedEvents_.find(function (et) {\n            return et === eventType;\n        }), 'Unknown event: ' + eventType);\n    };\n    return EventEmitter;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.EventEmitter = EventEmitter;\n\n\n},{\"../../../utils/assert\":135}],56:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ImmutableTree = undefined;\n\nvar _SortedMap = require('./SortedMap');\n\nvar _Path = require('./Path');\n\nvar _util = require('./util');\n\nvar _obj = require('../../../utils/obj');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar emptyChildrenSingleton;\n/**\n * Singleton empty children collection.\n *\n * @const\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\n */\nvar EmptyChildren = function EmptyChildren() {\n    if (!emptyChildrenSingleton) {\n        emptyChildrenSingleton = new _SortedMap.SortedMap(_util.stringCompare);\n    }\n    return emptyChildrenSingleton;\n};\n/**\n * A tree with immutable elements.\n */\nvar ImmutableTree = function () {\n    /**\n     * @template T\n     * @param {?T} value\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\n     */\n    function ImmutableTree(value, children) {\n        if (children === void 0) {\n            children = EmptyChildren();\n        }\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @template T\n     * @param {!Object.<string, !T>} obj\n     * @return {!ImmutableTree.<!T>}\n     */\n    ImmutableTree.fromObject = function (obj) {\n        var tree = ImmutableTree.Empty;\n        (0, _obj.forEach)(obj, function (childPath, childSnap) {\n            tree = tree.set(new _Path.Path(childPath), childSnap);\n        });\n        return tree;\n    };\n    /**\n     * True if the value is empty and there are no children\n     * @return {boolean}\n     */\n    ImmutableTree.prototype.isEmpty = function () {\n        return this.value === null && this.children.isEmpty();\n    };\n    /**\n     * Given a path and predicate, return the first node and the path to that node\n     * where the predicate returns true.\n     *\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\n     * on the way back out, it may be better to pass down a pathSoFar obj.\n     *\n     * @param {!Path} relativePath The remainder of the path\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\n     *   node\n     * @return {?{path:!Path, value:!T}}\n     */\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n        if (this.value != null && predicate(this.value)) {\n            return { path: _Path.Path.Empty, value: this.value };\n        } else {\n            if (relativePath.isEmpty()) {\n                return null;\n            } else {\n                var front = relativePath.getFront();\n                var child = this.children.get(front);\n                if (child !== null) {\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n                    if (childExistingPathAndValue != null) {\n                        var fullPath = new _Path.Path(front).child(childExistingPathAndValue.path);\n                        return { path: fullPath, value: childExistingPathAndValue.value };\n                    } else {\n                        return null;\n                    }\n                } else {\n                    return null;\n                }\n            }\n        }\n    };\n    /**\n     * Find, if it exists, the shortest subpath of the given path that points a defined\n     * value in the tree\n     * @param {!Path} relativePath\n     * @return {?{path: !Path, value: !T}}\n     */\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n        return this.findRootMostMatchingPathAndValue(relativePath, function () {\n            return true;\n        });\n    };\n    /**\n     * @param {!Path} relativePath\n     * @return {!ImmutableTree.<T>} The subtree at the given path\n     */\n    ImmutableTree.prototype.subtree = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            return this;\n        } else {\n            var front = relativePath.getFront();\n            var childTree = this.children.get(front);\n            if (childTree !== null) {\n                return childTree.subtree(relativePath.popFront());\n            } else {\n                return ImmutableTree.Empty;\n            }\n        }\n    };\n    /**\n     * Sets a value at the specified path.\n     *\n     * @param {!Path} relativePath Path to set value at.\n     * @param {?T} toSet Value to set.\n     * @return {!ImmutableTree.<T>} Resulting tree.\n     */\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\n        if (relativePath.isEmpty()) {\n            return new ImmutableTree(toSet, this.children);\n        } else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front) || ImmutableTree.Empty;\n            var newChild = child.set(relativePath.popFront(), toSet);\n            var newChildren = this.children.insert(front, newChild);\n            return new ImmutableTree(this.value, newChildren);\n        }\n    };\n    /**\n     * Removes the value at the specified path.\n     *\n     * @param {!Path} relativePath Path to value to remove.\n     * @return {!ImmutableTree.<T>} Resulting tree.\n     */\n    ImmutableTree.prototype.remove = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            if (this.children.isEmpty()) {\n                return ImmutableTree.Empty;\n            } else {\n                return new ImmutableTree(null, this.children);\n            }\n        } else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front);\n            if (child) {\n                var newChild = child.remove(relativePath.popFront());\n                var newChildren = void 0;\n                if (newChild.isEmpty()) {\n                    newChildren = this.children.remove(front);\n                } else {\n                    newChildren = this.children.insert(front, newChild);\n                }\n                if (this.value === null && newChildren.isEmpty()) {\n                    return ImmutableTree.Empty;\n                } else {\n                    return new ImmutableTree(this.value, newChildren);\n                }\n            } else {\n                return this;\n            }\n        }\n    };\n    /**\n     * Gets a value from the tree.\n     *\n     * @param {!Path} relativePath Path to get value for.\n     * @return {?T} Value at path, or null.\n     */\n    ImmutableTree.prototype.get = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            return this.value;\n        } else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front);\n            if (child) {\n                return child.get(relativePath.popFront());\n            } else {\n                return null;\n            }\n        }\n    };\n    /**\n     * Replace the subtree at the specified path with the given new tree.\n     *\n     * @param {!Path} relativePath Path to replace subtree for.\n     * @param {!ImmutableTree} newTree New tree.\n     * @return {!ImmutableTree} Resulting tree.\n     */\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n        if (relativePath.isEmpty()) {\n            return newTree;\n        } else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front) || ImmutableTree.Empty;\n            var newChild = child.setTree(relativePath.popFront(), newTree);\n            var newChildren = void 0;\n            if (newChild.isEmpty()) {\n                newChildren = this.children.remove(front);\n            } else {\n                newChildren = this.children.insert(front, newChild);\n            }\n            return new ImmutableTree(this.value, newChildren);\n        }\n    };\n    /**\n     * Performs a depth first fold on this tree. Transforms a tree into a single\n     * value, given a function that operates on the path to a node, an optional\n     * current value, and a map of child names to folded subtrees\n     * @template V\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\n     * @return {V}\n     */\n    ImmutableTree.prototype.fold = function (fn) {\n        return this.fold_(_Path.Path.Empty, fn);\n    };\n    /**\n     * Recursive helper for public-facing fold() method\n     * @template V\n     * @param {!Path} pathSoFar\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\n     * @return {V}\n     * @private\n     */\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n        var accum = {};\n        this.children.inorderTraversal(function (childKey, childTree) {\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n        });\n        return fn(pathSoFar, this.value, accum);\n    };\n    /**\n     * Find the first matching value on the given path. Return the result of applying f to it.\n     * @template V\n     * @param {!Path} path\n     * @param {!function(!Path, !T):?V} f\n     * @return {?V}\n     */\n    ImmutableTree.prototype.findOnPath = function (path, f) {\n        return this.findOnPath_(path, _Path.Path.Empty, f);\n    };\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n        var result = this.value ? f(pathSoFar, this.value) : false;\n        if (result) {\n            return result;\n        } else {\n            if (pathToFollow.isEmpty()) {\n                return null;\n            } else {\n                var front = pathToFollow.getFront();\n                var nextChild = this.children.get(front);\n                if (nextChild) {\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n                } else {\n                    return null;\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {!Path} path\n     * @param {!function(!Path, !T)} f\n     * @returns {!ImmutableTree.<T>}\n     */\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\n        return this.foreachOnPath_(path, _Path.Path.Empty, f);\n    };\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n        if (pathToFollow.isEmpty()) {\n            return this;\n        } else {\n            if (this.value) {\n                f(currentRelativePath, this.value);\n            }\n            var front = pathToFollow.getFront();\n            var nextChild = this.children.get(front);\n            if (nextChild) {\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n            } else {\n                return ImmutableTree.Empty;\n            }\n        }\n    };\n    /**\n     * Calls the given function for each node in the tree that has a value.\n     *\n     * @param {function(!Path, !T)} f A function to be called with\n     *   the path from the root of the tree to a node, and the value at that node.\n     *   Called in depth-first order.\n     */\n    ImmutableTree.prototype.foreach = function (f) {\n        this.foreach_(_Path.Path.Empty, f);\n    };\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n        this.children.inorderTraversal(function (childName, childTree) {\n            childTree.foreach_(currentRelativePath.child(childName), f);\n        });\n        if (this.value) {\n            f(currentRelativePath, this.value);\n        }\n    };\n    /**\n     *\n     * @param {function(string, !T)} f\n     */\n    ImmutableTree.prototype.foreachChild = function (f) {\n        this.children.inorderTraversal(function (childName, childTree) {\n            if (childTree.value) {\n                f(childName, childTree.value);\n            }\n        });\n    };\n    ImmutableTree.Empty = new ImmutableTree(null);\n    return ImmutableTree;\n}();\nexports.ImmutableTree = ImmutableTree;\n\n\n},{\"../../../utils/obj\":144,\"./Path\":59,\"./SortedMap\":61,\"./util\":65}],57:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.nextPushId = undefined;\n\nvar _assert = require('../../../utils/assert');\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nvar nextPushId = exports.nextPushId = function () {\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n    // Timestamp of last push, used to prevent local collisions if you push twice\n    // in one ms.\n    var lastPushTime = 0;\n    // We generate 72-bits of randomness which get turned into 12 characters and\n    // appended to the timestamp to prevent collisions with other clients. We\n    // store the last characters we generated because in the event of a collision,\n    // we'll use those same characters except \"incremented\" by one.\n    var lastRandChars = [];\n    return function (now) {\n        var duplicateTime = now === lastPushTime;\n        lastPushTime = now;\n        var i;\n        var timeStampChars = new Array(8);\n        for (i = 7; i >= 0; i--) {\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n            // NOTE: Can't use << here because javascript will convert to int and lose\n            // the upper bits.\n            now = Math.floor(now / 64);\n        }\n        (0, _assert.assert)(now === 0, 'Cannot push at time == 0');\n        var id = timeStampChars.join('');\n        if (!duplicateTime) {\n            for (i = 0; i < 12; i++) {\n                lastRandChars[i] = Math.floor(Math.random() * 64);\n            }\n        } else {\n            // If the timestamp hasn't changed since last push, use the same random\n            // number, except incremented by 1.\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n                lastRandChars[i] = 0;\n            }\n            lastRandChars[i]++;\n        }\n        for (i = 0; i < 12; i++) {\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\n        }\n        (0, _assert.assert)(id.length === 20, 'nextPushId: Length should be 20.');\n        return id;\n    };\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n\n\n},{\"../../../utils/assert\":135}],58:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OnlineMonitor = undefined;\n\nvar _assert = require('../../../utils/assert');\n\nvar _EventEmitter = require('./EventEmitter');\n\nvar _environment = require('../../../utils/environment');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n *\n * @extends {EventEmitter}\n */\nvar OnlineMonitor = function (_super) {\n    __extends(OnlineMonitor, _super);\n    function OnlineMonitor() {\n        var _this = _super.call(this, ['online']) || this;\n        _this.online_ = true;\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\n        // for Cordova.\n        if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !(0, _environment.isMobileCordova)()) {\n            window.addEventListener('online', function () {\n                if (!_this.online_) {\n                    _this.online_ = true;\n                    _this.trigger('online', true);\n                }\n            }, false);\n            window.addEventListener('offline', function () {\n                if (_this.online_) {\n                    _this.online_ = false;\n                    _this.trigger('online', false);\n                }\n            }, false);\n        }\n        return _this;\n    }\n    OnlineMonitor.getInstance = function () {\n        return new OnlineMonitor();\n    };\n    /**\n     * @param {!string} eventType\n     * @return {Array.<boolean>}\n     */\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n        (0, _assert.assert)(eventType === 'online', 'Unknown event type: ' + eventType);\n        return [this.online_];\n    };\n    /**\n     * @return {boolean}\n     */\n    OnlineMonitor.prototype.currentlyOnline = function () {\n        return this.online_;\n    };\n    return OnlineMonitor;\n}(_EventEmitter.EventEmitter);\nexports.OnlineMonitor = OnlineMonitor;\n\n\n},{\"../../../utils/assert\":135,\"../../../utils/environment\":139,\"./EventEmitter\":55}],59:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ValidationPath = exports.Path = undefined;\n\nvar _util = require('./util');\n\nvar _utf = require('../../../utils/utf8');\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar Path = function () {\n    /**\n     * @param {string|Array.<string>} pathOrString Path string to parse,\n     *      or another path, or the raw tokens array\n     * @param {number=} pieceNum\n     */\n    function Path(pathOrString, pieceNum) {\n        if (pieceNum === void 0) {\n            this.pieces_ = pathOrString.split('/');\n            // Remove empty pieces.\n            var copyTo = 0;\n            for (var i = 0; i < this.pieces_.length; i++) {\n                if (this.pieces_[i].length > 0) {\n                    this.pieces_[copyTo] = this.pieces_[i];\n                    copyTo++;\n                }\n            }\n            this.pieces_.length = copyTo;\n            this.pieceNum_ = 0;\n        } else {\n            this.pieces_ = pathOrString;\n            this.pieceNum_ = pieceNum;\n        }\n    }\n    Object.defineProperty(Path, \"Empty\", {\n        /**\n         * Singleton to represent an empty path\n         *\n         * @const\n         */\n        get: function get() {\n            return new Path('');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Path.prototype.getFront = function () {\n        if (this.pieceNum_ >= this.pieces_.length) return null;\n        return this.pieces_[this.pieceNum_];\n    };\n    /**\n     * @return {number} The number of segments in this path\n     */\n    Path.prototype.getLength = function () {\n        return this.pieces_.length - this.pieceNum_;\n    };\n    /**\n     * @return {!Path}\n     */\n    Path.prototype.popFront = function () {\n        var pieceNum = this.pieceNum_;\n        if (pieceNum < this.pieces_.length) {\n            pieceNum++;\n        }\n        return new Path(this.pieces_, pieceNum);\n    };\n    /**\n     * @return {?string}\n     */\n    Path.prototype.getBack = function () {\n        if (this.pieceNum_ < this.pieces_.length) return this.pieces_[this.pieces_.length - 1];\n        return null;\n    };\n    Path.prototype.toString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '') pathString += '/' + this.pieces_[i];\n        }\n        return pathString || '/';\n    };\n    Path.prototype.toUrlEncodedString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '') pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n        }\n        return pathString || '/';\n    };\n    /**\n     * Shallow copy of the parts of the path.\n     *\n     * @param {number=} begin\n     * @return {!Array<string>}\n     */\n    Path.prototype.slice = function (begin) {\n        if (begin === void 0) {\n            begin = 0;\n        }\n        return this.pieces_.slice(this.pieceNum_ + begin);\n    };\n    /**\n     * @return {?Path}\n     */\n    Path.prototype.parent = function () {\n        if (this.pieceNum_ >= this.pieces_.length) return null;\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\n            pieces.push(this.pieces_[i]);\n        }return new Path(pieces, 0);\n    };\n    /**\n     * @param {string|!Path} childPathObj\n     * @return {!Path}\n     */\n    Path.prototype.child = function (childPathObj) {\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            pieces.push(this.pieces_[i]);\n        }if (childPathObj instanceof Path) {\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n                pieces.push(childPathObj.pieces_[i]);\n            }\n        } else {\n            var childPieces = childPathObj.split('/');\n            for (var i = 0; i < childPieces.length; i++) {\n                if (childPieces[i].length > 0) pieces.push(childPieces[i]);\n            }\n        }\n        return new Path(pieces, 0);\n    };\n    /**\n     * @return {boolean} True if there are no segments in this path\n     */\n    Path.prototype.isEmpty = function () {\n        return this.pieceNum_ >= this.pieces_.length;\n    };\n    /**\n     * @param {!Path} outerPath\n     * @param {!Path} innerPath\n     * @return {!Path} The path from outerPath to innerPath\n     */\n    Path.relativePath = function (outerPath, innerPath) {\n        var outer = outerPath.getFront(),\n            inner = innerPath.getFront();\n        if (outer === null) {\n            return innerPath;\n        } else if (outer === inner) {\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n        } else {\n            throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n        }\n    };\n    /**\n     * @param {!Path} left\n     * @param {!Path} right\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\n     */\n    Path.comparePaths = function (left, right) {\n        var leftKeys = left.slice();\n        var rightKeys = right.slice();\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n            var cmp = (0, _util.nameCompare)(leftKeys[i], rightKeys[i]);\n            if (cmp !== 0) return cmp;\n        }\n        if (leftKeys.length === rightKeys.length) return 0;\n        return leftKeys.length < rightKeys.length ? -1 : 1;\n    };\n    /**\n     *\n     * @param {Path} other\n     * @return {boolean} true if paths are the same.\n     */\n    Path.prototype.equals = function (other) {\n        if (this.getLength() !== other.getLength()) {\n            return false;\n        }\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     *\n     * @param {!Path} other\n     * @return {boolean} True if this path is a parent (or the same as) other\n     */\n    Path.prototype.contains = function (other) {\n        var i = this.pieceNum_;\n        var j = other.pieceNum_;\n        if (this.getLength() > other.getLength()) {\n            return false;\n        }\n        while (i < this.pieces_.length) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n            ++i;\n            ++j;\n        }\n        return true;\n    };\n    return Path;\n}(); // end Path\nexports.Path = Path;\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\n\nvar ValidationPath = function () {\n    /**\n     * @param {!Path} path Initial Path.\n     * @param {string} errorPrefix_ Prefix for any error messages.\n     */\n    function ValidationPath(path, errorPrefix_) {\n        this.errorPrefix_ = errorPrefix_;\n        /** @type {!Array<string>} */\n        this.parts_ = path.slice();\n        /** @type {number} Initialize to number of '/' chars needed in path. */\n        this.byteLength_ = Math.max(1, this.parts_.length);\n        for (var i = 0; i < this.parts_.length; i++) {\n            this.byteLength_ += (0, _utf.stringLength)(this.parts_[i]);\n        }\n        this.checkValid_();\n    }\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n        /** @const {number} Maximum key depth. */\n        get: function get() {\n            return 32;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n        get: function get() {\n            return 768;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @param {string} child */\n    ValidationPath.prototype.push = function (child) {\n        // Count the needed '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ += 1;\n        }\n        this.parts_.push(child);\n        this.byteLength_ += (0, _utf.stringLength)(child);\n        this.checkValid_();\n    };\n    ValidationPath.prototype.pop = function () {\n        var last = this.parts_.pop();\n        this.byteLength_ -= (0, _utf.stringLength)(last);\n        // Un-count the previous '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ -= 1;\n        }\n    };\n    ValidationPath.prototype.checkValid_ = function () {\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n            throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');\n        }\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n            throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());\n        }\n    };\n    /**\n     * String for use in error messages - uses '.' notation for path.\n     *\n     * @return {string}\n     */\n    ValidationPath.prototype.toErrorString = function () {\n        if (this.parts_.length == 0) {\n            return '';\n        }\n        return \"in property '\" + this.parts_.join('.') + \"'\";\n    };\n    return ValidationPath;\n}();\nexports.ValidationPath = ValidationPath;\n\n\n},{\"../../../utils/utf8\":147,\"./util\":65}],60:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.resolveDeferredValueSnapshot = exports.resolveDeferredValueTree = exports.resolveDeferredValue = exports.generateWithValues = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nvar _assert = require('../../../utils/assert');\n\nvar _Path = require('./Path');\n\nvar _SparseSnapshotTree = require('../SparseSnapshotTree');\n\nvar _LeafNode = require('../snap/LeafNode');\n\nvar _nodeFromJSON = require('../snap/nodeFromJSON');\n\nvar _PriorityIndex = require('../snap/indexes/PriorityIndex');\n\n/**\n * Generate placeholders for deferred values.\n * @param {?Object} values\n * @return {!Object}\n */\nvar generateWithValues = exports.generateWithValues = function generateWithValues(values) {\n    values = values || {};\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\n    return values;\n};\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n * @param {(Object|string|number|boolean)} value\n * @param {!Object} serverValues\n * @return {!(string|number|boolean)}\n */\nvar resolveDeferredValue = exports.resolveDeferredValue = function resolveDeferredValue(value, serverValues) {\n    if (!value || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n        return value;\n    } else {\n        (0, _assert.assert)('.sv' in value, 'Unexpected leaf node or priority contents');\n        return serverValues[value['.sv']];\n    }\n};\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param {!SparseSnapshotTree} tree\n * @param {!Object} serverValues\n * @return {!SparseSnapshotTree}\n */\nvar resolveDeferredValueTree = exports.resolveDeferredValueTree = function resolveDeferredValueTree(tree, serverValues) {\n    var resolvedTree = new _SparseSnapshotTree.SparseSnapshotTree();\n    tree.forEachTree(new _Path.Path(''), function (path, node) {\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\n    });\n    return resolvedTree;\n};\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n * @param {!Node} node\n * @param {!Object} serverValues\n * @return {!Node}\n */\nvar resolveDeferredValueSnapshot = exports.resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, serverValues) {\n    var rawPri = node.getPriority().val();\n    var priority = resolveDeferredValue(rawPri, serverValues);\n    var newNode;\n    if (node.isLeafNode()) {\n        var leafNode = node;\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\n        if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n            return new _LeafNode.LeafNode(value, (0, _nodeFromJSON.nodeFromJSON)(priority));\n        } else {\n            return node;\n        }\n    } else {\n        var childrenNode = node;\n        newNode = childrenNode;\n        if (priority !== childrenNode.getPriority().val()) {\n            newNode = newNode.updatePriority(new _LeafNode.LeafNode(priority));\n        }\n        childrenNode.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (childName, childNode) {\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\n            if (newChildNode !== childNode) {\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\n            }\n        });\n        return newNode;\n    }\n};\n\n\n},{\"../../../utils/assert\":135,\"../SparseSnapshotTree\":25,\"../snap/LeafNode\":36,\"../snap/indexes/PriorityIndex\":43,\"../snap/nodeFromJSON\":45,\"./Path\":59}],61:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * An iterator over an LLRBNode.\n */\nvar SortedMapIterator = function () {\n    /**\n     * @template K, V, T\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\n     * @param {?K} startKey\n     * @param {function(K, K): number} comparator\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\n     * @param {(function(K, V):T)=} resultGenerator_\n     */\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n        if (resultGenerator_ === void 0) {\n            resultGenerator_ = null;\n        }\n        this.isReverse_ = isReverse_;\n        this.resultGenerator_ = resultGenerator_;\n        /** @private\n         * @type {Array.<!LLRBNode>}\n         */\n        this.nodeStack_ = [];\n        var cmp = 1;\n        while (!node.isEmpty()) {\n            node = node;\n            cmp = startKey ? comparator(node.key, startKey) : 1;\n            // flip the comparison if we're going in reverse\n            if (isReverse_) cmp *= -1;\n            if (cmp < 0) {\n                // This node is less than our start key. ignore it\n                if (this.isReverse_) {\n                    node = node.left;\n                } else {\n                    node = node.right;\n                }\n            } else if (cmp === 0) {\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n                this.nodeStack_.push(node);\n                break;\n            } else {\n                // This node is greater than our start key, add it to the stack and move to the next one\n                this.nodeStack_.push(node);\n                if (this.isReverse_) {\n                    node = node.right;\n                } else {\n                    node = node.left;\n                }\n            }\n        }\n    }\n    SortedMapIterator.prototype.getNext = function () {\n        if (this.nodeStack_.length === 0) return null;\n        var node = this.nodeStack_.pop();\n        var result;\n        if (this.resultGenerator_) result = this.resultGenerator_(node.key, node.value);else result = { key: node.key, value: node.value };\n        if (this.isReverse_) {\n            node = node.left;\n            while (!node.isEmpty()) {\n                this.nodeStack_.push(node);\n                node = node.right;\n            }\n        } else {\n            node = node.right;\n            while (!node.isEmpty()) {\n                this.nodeStack_.push(node);\n                node = node.left;\n            }\n        }\n        return result;\n    };\n    SortedMapIterator.prototype.hasNext = function () {\n        return this.nodeStack_.length > 0;\n    };\n    SortedMapIterator.prototype.peek = function () {\n        if (this.nodeStack_.length === 0) return null;\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\n        if (this.resultGenerator_) {\n            return this.resultGenerator_(node.key, node.value);\n        } else {\n            return { key: node.key, value: node.value };\n        }\n    };\n    return SortedMapIterator;\n}();\nexports.SortedMapIterator = SortedMapIterator;\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\n\nvar LLRBNode = function () {\n    /**\n     * @template K, V\n     * @param {!K} key Key associated with this node.\n     * @param {!V} value Value associated with this node.\n     * @param {?boolean} color Whether this node is red.\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\n     */\n    function LLRBNode(key, value, color, left, right) {\n        this.key = key;\n        this.value = value;\n        this.color = color != null ? color : LLRBNode.RED;\n        this.left = left != null ? left : SortedMap.EMPTY_NODE;\n        this.right = right != null ? right : SortedMap.EMPTY_NODE;\n    }\n    /**\n     * Returns a copy of the current node, optionally replacing pieces of it.\n     *\n     * @param {?K} key New key for the node, or null.\n     * @param {?V} value New value for the node, or null.\n     * @param {?boolean} color New color for the node, or null.\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\n     * @return {!LLRBNode} The node copy.\n     */\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n    };\n    /**\n     * @return {number} The total number of nodes in the tree.\n     */\n    LLRBNode.prototype.count = function () {\n        return this.left.count() + 1 + this.right.count();\n    };\n    /**\n     * @return {boolean} True if the tree is empty.\n     */\n    LLRBNode.prototype.isEmpty = function () {\n        return false;\n    };\n    /**\n     * Traverses the tree in key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called for each\n     *   node.  If it returns true, traversal is aborted.\n     * @return {*} The first truthy value returned by action, or the last falsey\n     *   value returned by action\n     */\n    LLRBNode.prototype.inorderTraversal = function (action) {\n        return this.left.inorderTraversal(action) || action(this.key, this.value) || this.right.inorderTraversal(action);\n    };\n    /**\n     * Traverses the tree in reverse key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!Object, !Object)} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {*} True if traversal was aborted.\n     */\n    LLRBNode.prototype.reverseTraversal = function (action) {\n        return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n    };\n    /**\n     * @return {!Object} The minimum node in the tree.\n     * @private\n     */\n    LLRBNode.prototype.min_ = function () {\n        if (this.left.isEmpty()) {\n            return this;\n        } else {\n            return this.left.min_();\n        }\n    };\n    /**\n     * @return {!K} The maximum key in the tree.\n     */\n    LLRBNode.prototype.minKey = function () {\n        return this.min_().key;\n    };\n    /**\n     * @return {!K} The maximum key in the tree.\n     */\n    LLRBNode.prototype.maxKey = function () {\n        if (this.right.isEmpty()) {\n            return this.key;\n        } else {\n            return this.right.maxKey();\n        }\n    };\n    /**\n     *\n     * @param {!Object} key Key to insert.\n     * @param {!Object} value Value to insert.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode} New tree, with the key/value added.\n     */\n    LLRBNode.prototype.insert = function (key, value, comparator) {\n        var cmp, n;\n        n = this;\n        cmp = comparator(key, n.key);\n        if (cmp < 0) {\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n        } else if (cmp === 0) {\n            n = n.copy(null, value, null, null, null);\n        } else {\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n        }\n        return n.fixUp_();\n    };\n    /**\n     * @private\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\n     */\n    LLRBNode.prototype.removeMin_ = function () {\n        if (this.left.isEmpty()) {\n            return SortedMap.EMPTY_NODE;\n        }\n        var n = this;\n        if (!n.left.isRed_() && !n.left.left.isRed_()) n = n.moveRedLeft_();\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\n        return n.fixUp_();\n    };\n    /**\n     * @param {!Object} key The key of the item to remove.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\n     */\n    LLRBNode.prototype.remove = function (key, comparator) {\n        var n, smallest;\n        n = this;\n        if (comparator(key, n.key) < 0) {\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n                n = n.moveRedLeft_();\n            }\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n        } else {\n            if (n.left.isRed_()) n = n.rotateRight_();\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n                n = n.moveRedRight_();\n            }\n            if (comparator(key, n.key) === 0) {\n                if (n.right.isEmpty()) {\n                    return SortedMap.EMPTY_NODE;\n                } else {\n                    smallest = n.right.min_();\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n                }\n            }\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n        }\n        return n.fixUp_();\n    };\n    /**\n     * @private\n     * @return {boolean} Whether this is a RED node.\n     */\n    LLRBNode.prototype.isRed_ = function () {\n        return this.color;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree after performing any needed rotations.\n     */\n    LLRBNode.prototype.fixUp_ = function () {\n        var n = this;\n        if (n.right.isRed_() && !n.left.isRed_()) n = n.rotateLeft_();\n        if (n.left.isRed_() && n.left.left.isRed_()) n = n.rotateRight_();\n        if (n.left.isRed_() && n.right.isRed_()) n = n.colorFlip_();\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after moveRedLeft.\n     */\n    LLRBNode.prototype.moveRedLeft_ = function () {\n        var n = this.colorFlip_();\n        if (n.right.left.isRed_()) {\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\n            n = n.rotateLeft_();\n            n = n.colorFlip_();\n        }\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after moveRedRight.\n     */\n    LLRBNode.prototype.moveRedRight_ = function () {\n        var n = this.colorFlip_();\n        if (n.left.left.isRed_()) {\n            n = n.rotateRight_();\n            n = n.colorFlip_();\n        }\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after rotateLeft.\n     */\n    LLRBNode.prototype.rotateLeft_ = function () {\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, nl, null);\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after rotateRight.\n     */\n    LLRBNode.prototype.rotateRight_ = function () {\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, nr);\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after colorFlip.\n     */\n    LLRBNode.prototype.colorFlip_ = function () {\n        var left = this.left.copy(null, null, !this.left.color, null, null);\n        var right = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, left, right);\n    };\n    /**\n     * For testing.\n     *\n     * @private\n     * @return {boolean} True if all is well.\n     */\n    LLRBNode.prototype.checkMaxDepth_ = function () {\n        var blackDepth = this.check_();\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\n    };\n    /**\n     * @private\n     * @return {number} Not sure what this returns exactly. :-).\n     */\n    LLRBNode.prototype.check_ = function () {\n        var blackDepth;\n        if (this.isRed_() && this.left.isRed_()) {\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n        }\n        if (this.right.isRed_()) {\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n        }\n        blackDepth = this.left.check_();\n        if (blackDepth !== this.right.check_()) {\n            throw new Error('Black depths differ');\n        } else {\n            return blackDepth + (this.isRed_() ? 0 : 1);\n        }\n    };\n    LLRBNode.RED = true;\n    LLRBNode.BLACK = false;\n    return LLRBNode;\n}();\nexports.LLRBNode = LLRBNode;\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\n\nvar LLRBEmptyNode = function () {\n    function LLRBEmptyNode() {}\n    /**\n     * Returns a copy of the current node.\n     *\n     * @return {!LLRBEmptyNode} The node copy.\n     */\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n        return this;\n    };\n    /**\n     * Returns a copy of the tree, with the specified key/value added.\n     *\n     * @param {!K} key Key to be added.\n     * @param {!V} value Value to be added.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode} New tree, with item added.\n     */\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n        return new LLRBNode(key, value, null);\n    };\n    /**\n     * Returns a copy of the tree, with the specified key removed.\n     *\n     * @param {!K} key The key to remove.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBEmptyNode} New tree, with item removed.\n     */\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\n        return this;\n    };\n    /**\n     * @return {number} The total number of nodes in the tree.\n     */\n    LLRBEmptyNode.prototype.count = function () {\n        return 0;\n    };\n    /**\n     * @return {boolean} True if the tree is empty.\n     */\n    LLRBEmptyNode.prototype.isEmpty = function () {\n        return true;\n    };\n    /**\n     * Traverses the tree in key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {boolean} True if traversal was aborted.\n     */\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n        return false;\n    };\n    /**\n     * Traverses the tree in reverse key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V)} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {boolean} True if traversal was aborted.\n     */\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n        return false;\n    };\n    /**\n     * @return {null}\n     */\n    LLRBEmptyNode.prototype.minKey = function () {\n        return null;\n    };\n    /**\n     * @return {null}\n     */\n    LLRBEmptyNode.prototype.maxKey = function () {\n        return null;\n    };\n    /**\n     * @private\n     * @return {number} Not sure what this returns exactly. :-).\n     */\n    LLRBEmptyNode.prototype.check_ = function () {\n        return 0;\n    };\n    /**\n     * @private\n     * @return {boolean} Whether this node is red.\n     */\n    LLRBEmptyNode.prototype.isRed_ = function () {\n        return false;\n    };\n    return LLRBEmptyNode;\n}();\nexports.LLRBEmptyNode = LLRBEmptyNode;\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\n\nvar SortedMap = function () {\n    /**\n     * @template K, V\n     * @param {function(K, K):number} comparator_ Key comparator.\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\n     */\n    function SortedMap(comparator_, root_) {\n        if (root_ === void 0) {\n            root_ = SortedMap.EMPTY_NODE;\n        }\n        this.comparator_ = comparator_;\n        this.root_ = root_;\n    }\n    /**\n     * Returns a copy of the map, with the specified key/value added or replaced.\n     * (TODO: We should perhaps rename this method to 'put')\n     *\n     * @param {!K} key Key to be added.\n     * @param {!V} value Value to be added.\n     * @return {!SortedMap.<K, V>} New map, with item added.\n     */\n    SortedMap.prototype.insert = function (key, value) {\n        return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    /**\n     * Returns a copy of the map, with the specified key removed.\n     *\n     * @param {!K} key The key to remove.\n     * @return {!SortedMap.<K, V>} New map, with item removed.\n     */\n    SortedMap.prototype.remove = function (key) {\n        return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    /**\n     * Returns the value of the node with the given key, or null.\n     *\n     * @param {!K} key The key to look up.\n     * @return {?V} The value of the node with the given key, or null if the\n     * key doesn't exist.\n     */\n    SortedMap.prototype.get = function (key) {\n        var cmp;\n        var node = this.root_;\n        while (!node.isEmpty()) {\n            cmp = this.comparator_(key, node.key);\n            if (cmp === 0) {\n                return node.value;\n            } else if (cmp < 0) {\n                node = node.left;\n            } else if (cmp > 0) {\n                node = node.right;\n            }\n        }\n        return null;\n    };\n    /**\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\n     * @param {K} key The key to find the predecessor of\n     * @return {?K} The predecessor key.\n     */\n    SortedMap.prototype.getPredecessorKey = function (key) {\n        var cmp,\n            node = this.root_,\n            rightParent = null;\n        while (!node.isEmpty()) {\n            cmp = this.comparator_(key, node.key);\n            if (cmp === 0) {\n                if (!node.left.isEmpty()) {\n                    node = node.left;\n                    while (!node.right.isEmpty()) {\n                        node = node.right;\n                    }return node.key;\n                } else if (rightParent) {\n                    return rightParent.key;\n                } else {\n                    return null; // first item.\n                }\n            } else if (cmp < 0) {\n                node = node.left;\n            } else if (cmp > 0) {\n                rightParent = node;\n                node = node.right;\n            }\n        }\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n    };\n    /**\n     * @return {boolean} True if the map is empty.\n     */\n    SortedMap.prototype.isEmpty = function () {\n        return this.root_.isEmpty();\n    };\n    /**\n     * @return {number} The total number of nodes in the map.\n     */\n    SortedMap.prototype.count = function () {\n        return this.root_.count();\n    };\n    /**\n     * @return {?K} The minimum key in the map.\n     */\n    SortedMap.prototype.minKey = function () {\n        return this.root_.minKey();\n    };\n    /**\n     * @return {?K} The maximum key in the map.\n     */\n    SortedMap.prototype.maxKey = function () {\n        return this.root_.maxKey();\n    };\n    /**\n     * Traverses the map in key order and calls the specified action function\n     * for each key/value pair.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called\n     * for each key/value pair.  If action returns true, traversal is aborted.\n     * @return {*} The first truthy value returned by action, or the last falsey\n     *   value returned by action\n     */\n    SortedMap.prototype.inorderTraversal = function (action) {\n        return this.root_.inorderTraversal(action);\n    };\n    /**\n     * Traverses the map in reverse key order and calls the specified action function\n     * for each key/value pair.\n     *\n     * @param {function(!Object, !Object)} action Callback function to be called\n     * for each key/value pair.  If action returns true, traversal is aborted.\n     * @return {*} True if the traversal was aborted.\n     */\n    SortedMap.prototype.reverseTraversal = function (action) {\n        return this.root_.reverseTraversal(action);\n    };\n    /**\n     * Returns an iterator over the SortedMap.\n     * @template T\n     * @param {(function(K, V):T)=} resultGenerator\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\n     */\n    SortedMap.prototype.getIterator = function (resultGenerator) {\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n    };\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n    };\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n    };\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n    };\n    /**\n     * Always use the same empty node, to reduce memory.\n     * @const\n     */\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n    return SortedMap;\n}();\nexports.SortedMap = SortedMap;\n\n\n},{}],62:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Tree = exports.TreeNode = undefined;\n\nvar _assert = require('../../../utils/assert');\n\nvar _Path = require('./Path');\n\nvar _obj = require('../../../utils/obj');\n\n/**\n * Node in a Tree.\n */\nvar TreeNode = function () {\n    function TreeNode() {\n        // TODO: Consider making accessors that create children and value lazily or\n        // separate Internal / Leaf 'types'.\n        this.children = {};\n        this.childCount = 0;\n        this.value = null;\n    }\n    return TreeNode;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.TreeNode = TreeNode;\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\n\nvar Tree = function () {\n    /**\n     * @template T\n     * @param {string=} name_ Optional name of the node.\n     * @param {Tree=} parent_ Optional parent node.\n     * @param {TreeNode=} node_ Optional node to wrap.\n     */\n    function Tree(name_, parent_, node_) {\n        if (name_ === void 0) {\n            name_ = '';\n        }\n        if (parent_ === void 0) {\n            parent_ = null;\n        }\n        if (node_ === void 0) {\n            node_ = new TreeNode();\n        }\n        this.name_ = name_;\n        this.parent_ = parent_;\n        this.node_ = node_;\n    }\n    /**\n     * Returns a sub-Tree for the given path.\n     *\n     * @param {!(string|Path)} pathObj Path to look up.\n     * @return {!Tree.<T>} Tree for path.\n     */\n    Tree.prototype.subTree = function (pathObj) {\n        // TODO: Require pathObj to be Path?\n        var path = pathObj instanceof _Path.Path ? pathObj : new _Path.Path(pathObj);\n        var child = this,\n            next;\n        while ((next = path.getFront()) !== null) {\n            var childNode = (0, _obj.safeGet)(child.node_.children, next) || new TreeNode();\n            child = new Tree(next, child, childNode);\n            path = path.popFront();\n        }\n        return child;\n    };\n    /**\n     * Returns the data associated with this tree node.\n     *\n     * @return {?T} The data or null if no data exists.\n     */\n    Tree.prototype.getValue = function () {\n        return this.node_.value;\n    };\n    /**\n     * Sets data to this tree node.\n     *\n     * @param {!T} value Value to set.\n     */\n    Tree.prototype.setValue = function (value) {\n        (0, _assert.assert)(typeof value !== 'undefined', 'Cannot set value to undefined');\n        this.node_.value = value;\n        this.updateParents_();\n    };\n    /**\n     * Clears the contents of the tree node (its value and all children).\n     */\n    Tree.prototype.clear = function () {\n        this.node_.value = null;\n        this.node_.children = {};\n        this.node_.childCount = 0;\n        this.updateParents_();\n    };\n    /**\n     * @return {boolean} Whether the tree has any children.\n     */\n    Tree.prototype.hasChildren = function () {\n        return this.node_.childCount > 0;\n    };\n    /**\n     * @return {boolean} Whether the tree is empty (no value or children).\n     */\n    Tree.prototype.isEmpty = function () {\n        return this.getValue() === null && !this.hasChildren();\n    };\n    /**\n     * Calls action for each child of this tree node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     */\n    Tree.prototype.forEachChild = function (action) {\n        var _this = this;\n        (0, _obj.forEach)(this.node_.children, function (child, childTree) {\n            action(new Tree(child, _this, childTree));\n        });\n    };\n    /**\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\n     *   false.\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\n     *   parent.\n     */\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n        if (includeSelf && !childrenFirst) action(this);\n        this.forEachChild(function (child) {\n            child.forEachDescendant(action, /*includeSelf=*/true, childrenFirst);\n        });\n        if (includeSelf && childrenFirst) action(this);\n    };\n    /**\n     * Calls action on each ancestor node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\n     *   true to abort.\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\n     * @return {boolean} true if the action callback returned true.\n     */\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\n        var node = includeSelf ? this : this.parent();\n        while (node !== null) {\n            if (action(node)) {\n                return true;\n            }\n            node = node.parent();\n        }\n        return false;\n    };\n    /**\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n     * is found, action is called on it and traversal does not continue inside the node.\n     * Action is *not* called on this node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     */\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n        this.forEachChild(function (child) {\n            if (child.getValue() !== null) action(child);else child.forEachImmediateDescendantWithValue(action);\n        });\n    };\n    /**\n     * @return {!Path} The path of this tree node, as a Path.\n     */\n    Tree.prototype.path = function () {\n        return new _Path.Path(this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);\n    };\n    /**\n     * @return {string} The name of the tree node.\n     */\n    Tree.prototype.name = function () {\n        return this.name_;\n    };\n    /**\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\n     */\n    Tree.prototype.parent = function () {\n        return this.parent_;\n    };\n    /**\n     * Adds or removes this child from its parent based on whether it's empty or not.\n     *\n     * @private\n     */\n    Tree.prototype.updateParents_ = function () {\n        if (this.parent_ !== null) this.parent_.updateChild_(this.name_, this);\n    };\n    /**\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\n     *\n     * @param {string} childName The name of the child to update.\n     * @param {!Tree.<T>} child The child to update.\n     * @private\n     */\n    Tree.prototype.updateChild_ = function (childName, child) {\n        var childEmpty = child.isEmpty();\n        var childExists = (0, _obj.contains)(this.node_.children, childName);\n        if (childEmpty && childExists) {\n            delete this.node_.children[childName];\n            this.node_.childCount--;\n            this.updateParents_();\n        } else if (!childEmpty && !childExists) {\n            this.node_.children[childName] = child.node_;\n            this.node_.childCount++;\n            this.updateParents_();\n        }\n    };\n    return Tree;\n}();\nexports.Tree = Tree;\n\n\n},{\"../../../utils/assert\":135,\"../../../utils/obj\":144,\"./Path\":59}],63:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.VisibilityMonitor = undefined;\n\nvar _EventEmitter = require('./EventEmitter');\n\nvar _assert = require('../../../utils/assert');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n/**\n * @extends {EventEmitter}\n */\nvar VisibilityMonitor = function (_super) {\n    __extends(VisibilityMonitor, _super);\n    function VisibilityMonitor() {\n        var _this = _super.call(this, ['visible']) || this;\n        var hidden;\n        var visibilityChange;\n        if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n            if (typeof document['hidden'] !== 'undefined') {\n                // Opera 12.10 and Firefox 18 and later support\n                visibilityChange = 'visibilitychange';\n                hidden = 'hidden';\n            } else if (typeof document['mozHidden'] !== 'undefined') {\n                visibilityChange = 'mozvisibilitychange';\n                hidden = 'mozHidden';\n            } else if (typeof document['msHidden'] !== 'undefined') {\n                visibilityChange = 'msvisibilitychange';\n                hidden = 'msHidden';\n            } else if (typeof document['webkitHidden'] !== 'undefined') {\n                visibilityChange = 'webkitvisibilitychange';\n                hidden = 'webkitHidden';\n            }\n        }\n        // Initially, we always assume we are visible. This ensures that in browsers\n        // without page visibility support or in cases where we are never visible\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n        // reconnects\n        _this.visible_ = true;\n        if (visibilityChange) {\n            document.addEventListener(visibilityChange, function () {\n                var visible = !document[hidden];\n                if (visible !== _this.visible_) {\n                    _this.visible_ = visible;\n                    _this.trigger('visible', visible);\n                }\n            }, false);\n        }\n        return _this;\n    }\n    VisibilityMonitor.getInstance = function () {\n        return new VisibilityMonitor();\n    };\n    /**\n     * @param {!string} eventType\n     * @return {Array.<boolean>}\n     */\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n        (0, _assert.assert)(eventType === 'visible', 'Unknown event type: ' + eventType);\n        return [this.visible_];\n    };\n    return VisibilityMonitor;\n}(_EventEmitter.EventEmitter);\nexports.VisibilityMonitor = VisibilityMonitor;\n\n\n},{\"../../../utils/assert\":135,\"./EventEmitter\":55}],64:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parseURL = exports.parseRepoInfo = undefined;\n\nvar _Path = require('../Path');\n\nvar _RepoInfo = require('../../RepoInfo');\n\nvar _util = require('../util');\n\n/**\n * @param {!string} pathString\n * @return {string}\n */\nfunction decodePath(pathString) {\n    var pathStringDecoded = '';\n    var pieces = pathString.split('/');\n    for (var i = 0; i < pieces.length; i++) {\n        if (pieces[i].length > 0) {\n            var piece = pieces[i];\n            try {\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n            } catch (e) {}\n            pathStringDecoded += '/' + piece;\n        }\n    }\n    return pathStringDecoded;\n}\n/**\n *\n * @param {!string} dataURL\n * @return {{repoInfo: !RepoInfo, path: !Path}}\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar parseRepoInfo = exports.parseRepoInfo = function parseRepoInfo(dataURL) {\n    var parsedUrl = parseURL(dataURL),\n        namespace = parsedUrl.subdomain;\n    if (parsedUrl.domain === 'firebase') {\n        (0, _util.fatal)(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n    }\n    // Catch common error of uninitialized namespace value.\n    if (!namespace || namespace == 'undefined') {\n        (0, _util.fatal)('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n    }\n    if (!parsedUrl.secure) {\n        (0, _util.warnIfPageIsSecure)();\n    }\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n    return {\n        repoInfo: new _RepoInfo.RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\n        path: new _Path.Path(parsedUrl.pathString)\n    };\n};\n/**\n *\n * @param {!string} dataURL\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\n */\nvar parseURL = exports.parseURL = function parseURL(dataURL) {\n    // Default to empty strings in the event of a malformed string.\n    var host = '',\n        domain = '',\n        subdomain = '',\n        pathString = '';\n    // Always default to SSL, unless otherwise specified.\n    var secure = true,\n        scheme = 'https',\n        port = 443;\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\n    if (typeof dataURL === 'string') {\n        // Parse scheme.\n        var colonInd = dataURL.indexOf('//');\n        if (colonInd >= 0) {\n            scheme = dataURL.substring(0, colonInd - 1);\n            dataURL = dataURL.substring(colonInd + 2);\n        }\n        // Parse host and path.\n        var slashInd = dataURL.indexOf('/');\n        if (slashInd === -1) {\n            slashInd = dataURL.length;\n        }\n        host = dataURL.substring(0, slashInd);\n        pathString = decodePath(dataURL.substring(slashInd));\n        var parts = host.split('.');\n        if (parts.length === 3) {\n            // Normalize namespaces to lowercase to share storage / connection.\n            domain = parts[1];\n            subdomain = parts[0].toLowerCase();\n        } else if (parts.length === 2) {\n            domain = parts[0];\n        }\n        // If we have a port, use scheme for determining if it's secure.\n        colonInd = host.indexOf(':');\n        if (colonInd >= 0) {\n            secure = scheme === 'https' || scheme === 'wss';\n            port = parseInt(host.substring(colonInd + 1), 10);\n        }\n    }\n    return {\n        host: host,\n        port: port,\n        domain: domain,\n        subdomain: subdomain,\n        secure: secure,\n        scheme: scheme,\n        pathString: pathString\n    };\n};\n\n\n},{\"../../RepoInfo\":20,\"../Path\":59,\"../util\":65}],65:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.setTimeoutNonBlocking = exports.exportPropGetter = exports.beingCrawled = exports.callUserCallback = exports.exceptionGuard = exports.tryParseInt = exports.INTEGER_REGEXP_ = exports.errorForServerCode = exports.isWindowsStoreApp = exports.isChromeExtensionContentScript = exports.doubleToIEEE754String = exports.bindCallback = exports.each = exports.splitStringBySize = exports.ObjectToUniqueKey = exports.requireKey = exports.stringCompare = exports.nameCompare = exports.MAX_NAME = exports.MIN_NAME = exports.executeWhenDOMReady = exports.isInvalidJSONNumber = exports.warnAboutUnsupportedMethod = exports.warnIfPageIsSecure = exports.warn = exports.fatal = exports.error = exports.logWrapper = exports.log = exports.enableLogging = exports.logger = exports.sha1 = exports.base64Decode = exports.base64Encode = exports.LUIDGenerator = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nexports.setBufferImpl = setBufferImpl;\n\nvar _assert = require('../../../utils/assert');\n\nvar _obj = require('../../../utils/obj');\n\nvar _crypt = require('../../../utils/crypt');\n\nvar _Sha = require('../../../utils/Sha1');\n\nvar _utf = require('../../../utils/utf8');\n\nvar _json = require('../../../utils/json');\n\nvar _storage = require('../storage/storage');\n\nvar _environment = require('../../../utils/environment');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n * @type {function(): number} Generated ID.\n */\nvar LUIDGenerator = exports.LUIDGenerator = function () {\n    var id = 1;\n    return function () {\n        return id++;\n    };\n}();\n/**\n * URL-safe base64 encoding\n * @param {!string} str\n * @return {!string}\n */\nvar base64Encode = exports.base64Encode = function base64Encode(str) {\n    var utf8Bytes = (0, _utf.stringToByteArray)(str);\n    return _crypt.base64.encodeByteArray(utf8Bytes, /*useWebSafe=*/true);\n};\nvar BufferImpl;\nfunction setBufferImpl(impl) {\n    BufferImpl = impl;\n}\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param {string} str To be decoded\n * @return {?string} Decoded result, if possible\n */\nvar base64Decode = exports.base64Decode = function base64Decode(str) {\n    try {\n        if (BufferImpl) {\n            return new BufferImpl(str, 'base64').toString('utf8');\n        } else {\n            return _crypt.base64.decodeString(str, /*useWebSafe=*/true);\n        }\n    } catch (e) {\n        log('base64Decode failed: ', e);\n    }\n    return null;\n};\n/**\n * Sha1 hash of the input string\n * @param {!string} str The string to hash\n * @return {!string} The resulting hash\n */\nvar sha1 = exports.sha1 = function sha1(str) {\n    var utf8Bytes = (0, _utf.stringToByteArray)(str);\n    var sha1 = new _Sha.Sha1();\n    sha1.update(utf8Bytes);\n    var sha1Bytes = sha1.digest();\n    return _crypt.base64.encodeByteArray(sha1Bytes);\n};\n/**\n * @param {...*} var_args\n * @return {string}\n * @private\n */\nvar buildLogMessage_ = function buildLogMessage_() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = '';\n    for (var i = 0; i < var_args.length; i++) {\n        if (Array.isArray(var_args[i]) || var_args[i] && _typeof(var_args[i]) === 'object' && typeof var_args[i].length === 'number') {\n            message += buildLogMessage_.apply(null, var_args[i]);\n        } else if (_typeof(var_args[i]) === 'object') {\n            message += (0, _json.stringify)(var_args[i]);\n        } else {\n            message += var_args[i];\n        }\n        message += ' ';\n    }\n    return message;\n};\n/**\n * Use this for all debug messages in Firebase.\n * @type {?function(string)}\n */\nvar logger = exports.logger = null;\n/**\n * Flag to check for log availability on first log message\n * @type {boolean}\n * @private\n */\nvar firstLog_ = true;\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\n */\nvar enableLogging = exports.enableLogging = function enableLogging(logger_, persistent) {\n    (0, _assert.assert)(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n    if (logger_ === true) {\n        if (typeof console !== 'undefined') {\n            if (typeof console.log === 'function') {\n                exports.logger = logger = console.log.bind(console);\n            } else if (_typeof(console.log) === 'object') {\n                // IE does this.\n                exports.logger = logger = function logger(message) {\n                    console.log(message);\n                };\n            }\n        }\n        if (persistent) _storage.SessionStorage.set('logging_enabled', true);\n    } else if (typeof logger_ === 'function') {\n        exports.logger = logger = logger_;\n    } else {\n        exports.logger = logger = null;\n        _storage.SessionStorage.remove('logging_enabled');\n    }\n};\n/**\n *\n * @param {...(string|Arguments)} var_args\n */\nvar log = exports.log = function log() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (firstLog_ === true) {\n        firstLog_ = false;\n        if (logger === null && _storage.SessionStorage.get('logging_enabled') === true) enableLogging(true);\n    }\n    if (logger) {\n        var message = buildLogMessage_.apply(null, var_args);\n        logger(message);\n    }\n};\n/**\n * @param {!string} prefix\n * @return {function(...[*])}\n */\nvar logWrapper = exports.logWrapper = function logWrapper(prefix) {\n    return function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        log.apply(void 0, [prefix].concat(var_args));\n    };\n};\n/**\n * @param {...string} var_args\n */\nvar error = exports.error = function error() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (typeof console !== 'undefined') {\n        var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\n        if (typeof console.error !== 'undefined') {\n            console.error(message);\n        } else {\n            console.log(message);\n        }\n    }\n};\n/**\n * @param {...string} var_args\n */\nvar fatal = exports.fatal = function fatal() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = buildLogMessage_.apply(void 0, var_args);\n    throw new Error('FIREBASE FATAL ERROR: ' + message);\n};\n/**\n * @param {...*} var_args\n */\nvar warn = exports.warn = function warn() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (typeof console !== 'undefined') {\n        var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\n        if (typeof console.warn !== 'undefined') {\n            console.warn(message);\n        } else {\n            console.log(message);\n        }\n    }\n};\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nvar warnIfPageIsSecure = exports.warnIfPageIsSecure = function warnIfPageIsSecure() {\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\n    if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n        warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n    }\n};\n/**\n * @param {!String} methodName\n */\nvar warnAboutUnsupportedMethod = exports.warnAboutUnsupportedMethod = function warnAboutUnsupportedMethod(methodName) {\n    warn(methodName + ' is unsupported and will likely change soon.  ' + 'Please do not use.');\n};\n/**\n * Returns true if data is NaN, or +/- Infinity.\n * @param {*} data\n * @return {boolean}\n */\nvar isInvalidJSONNumber = exports.isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n    return typeof data === 'number' && (data != data || data == Number.POSITIVE_INFINITY || data == Number.NEGATIVE_INFINITY);\n};\n/**\n * @param {function()} fn\n */\nvar executeWhenDOMReady = exports.executeWhenDOMReady = function executeWhenDOMReady(fn) {\n    if ((0, _environment.isNodeSdk)() || document.readyState === 'complete') {\n        fn();\n    } else {\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n        // fire before onload), but fall back to onload.\n        var called_1 = false;\n        var wrappedFn_1 = function wrappedFn_1() {\n            if (!document.body) {\n                setTimeout(wrappedFn_1, Math.floor(10));\n                return;\n            }\n            if (!called_1) {\n                called_1 = true;\n                fn();\n            }\n        };\n        if (document.addEventListener) {\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\n            // fallback to onload.\n            window.addEventListener('load', wrappedFn_1, false);\n        } else if (document.attachEvent) {\n            // IE.\n            document.attachEvent('onreadystatechange', function () {\n                if (document.readyState === 'complete') wrappedFn_1();\n            });\n            // fallback to onload.\n            window.attachEvent('onload', wrappedFn_1);\n            // jQuery has an extra hack for IE that we could employ (based on\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n            // I'm hoping we don't need it.\n        }\n    }\n};\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n * @type {!string}\n */\nvar MIN_NAME = exports.MIN_NAME = '[MIN_NAME]';\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n * @type {!string}\n */\nvar MAX_NAME = exports.MAX_NAME = '[MAX_NAME]';\n/**\n * Compares valid Firebase key names, plus min and max name\n * @param {!string} a\n * @param {!string} b\n * @return {!number}\n */\nvar nameCompare = exports.nameCompare = function nameCompare(a, b) {\n    if (a === b) {\n        return 0;\n    } else if (a === MIN_NAME || b === MAX_NAME) {\n        return -1;\n    } else if (b === MIN_NAME || a === MAX_NAME) {\n        return 1;\n    } else {\n        var aAsInt = tryParseInt(a),\n            bAsInt = tryParseInt(b);\n        if (aAsInt !== null) {\n            if (bAsInt !== null) {\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n            } else {\n                return -1;\n            }\n        } else if (bAsInt !== null) {\n            return 1;\n        } else {\n            return a < b ? -1 : 1;\n        }\n    }\n};\n/**\n * @param {!string} a\n * @param {!string} b\n * @return {!number} comparison result.\n */\nvar stringCompare = exports.stringCompare = function stringCompare(a, b) {\n    if (a === b) {\n        return 0;\n    } else if (a < b) {\n        return -1;\n    } else {\n        return 1;\n    }\n};\n/**\n * @param {string} key\n * @param {Object} obj\n * @return {*}\n */\nvar requireKey = exports.requireKey = function requireKey(key, obj) {\n    if (obj && key in obj) {\n        return obj[key];\n    } else {\n        throw new Error('Missing required key (' + key + ') in object: ' + (0, _json.stringify)(obj));\n    }\n};\n/**\n * @param {*} obj\n * @return {string}\n */\nvar ObjectToUniqueKey = exports.ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) return (0, _json.stringify)(obj);\n    var keys = [];\n    for (var k in obj) {\n        keys.push(k);\n    }\n    // Export as json, but with the keys sorted.\n    keys.sort();\n    var key = '{';\n    for (var i = 0; i < keys.length; i++) {\n        if (i !== 0) key += ',';\n        key += (0, _json.stringify)(keys[i]);\n        key += ':';\n        key += ObjectToUniqueKey(obj[keys[i]]);\n    }\n    key += '}';\n    return key;\n};\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param {!string} str The string\n * @param {!number} segsize The maximum number of chars in the string.\n * @return {Array.<string>} The string, split into appropriately-sized chunks\n */\nvar splitStringBySize = exports.splitStringBySize = function splitStringBySize(str, segsize) {\n    var len = str.length;\n    if (len <= segsize) {\n        return [str];\n    }\n    var dataSegs = [];\n    for (var c = 0; c < len; c += segsize) {\n        if (c + segsize > len) {\n            dataSegs.push(str.substring(c, len));\n        } else {\n            dataSegs.push(str.substring(c, c + segsize));\n        }\n    }\n    return dataSegs;\n};\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param {!(Object|Array)} obj The object or array to iterate over\n * @param {function(?, ?)} fn The function to apply\n */\nvar each = exports.each = function each(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; ++i) {\n            fn(i, obj[i]);\n        }\n    } else {\n        /**\n         * in the conversion of code we removed the goog.object.forEach\n         * function which did a value,key callback. We standardized on\n         * a single impl that does a key, value callback. So we invert\n         * to not have to touch the `each` code points\n         */\n        (0, _obj.forEach)(obj, function (key, val) {\n            return fn(val, key);\n        });\n    }\n};\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param {function(*)} callback Callback function.\n * @param {?Object=} context Optional context to bind to.\n * @return {function(*)}\n */\nvar bindCallback = exports.bindCallback = function bindCallback(callback, context) {\n    return context ? callback.bind(context) : callback;\n};\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param {!number} v A double\n * @return {string}\n */\nvar doubleToIEEE754String = exports.doubleToIEEE754String = function doubleToIEEE754String(v) {\n    (0, _assert.assert)(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n    var ebits = 11,\n        fbits = 52;\n    var bias = (1 << ebits - 1) - 1,\n        s,\n        e,\n        f,\n        ln,\n        i,\n        bits,\n        str;\n    // Compute sign, exponent, fraction\n    // Skip NaN / Infinity handling --MJL.\n    if (v === 0) {\n        e = 0;\n        f = 0;\n        s = 1 / v === -Infinity ? 1 : 0;\n    } else {\n        s = v < 0;\n        v = Math.abs(v);\n        if (v >= Math.pow(2, 1 - bias)) {\n            // Normalized\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n            e = ln + bias;\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n        } else {\n            // Denormalized\n            e = 0;\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n        }\n    }\n    // Pack sign, exponent, fraction\n    bits = [];\n    for (i = fbits; i; i -= 1) {\n        bits.push(f % 2 ? 1 : 0);\n        f = Math.floor(f / 2);\n    }\n    for (i = ebits; i; i -= 1) {\n        bits.push(e % 2 ? 1 : 0);\n        e = Math.floor(e / 2);\n    }\n    bits.push(s ? 1 : 0);\n    bits.reverse();\n    str = bits.join('');\n    // Return the data as a hex string. --MJL\n    var hexByteString = '';\n    for (i = 0; i < 64; i += 8) {\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n        if (hexByte.length === 1) hexByte = '0' + hexByte;\n        hexByteString = hexByteString + hexByte;\n    }\n    return hexByteString.toLowerCase();\n};\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n * @return {boolean}\n */\nvar isChromeExtensionContentScript = exports.isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n    return !!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\n * Used to detect if we're in a Windows 8 Store app.\n * @return {boolean}\n */\nvar isWindowsStoreApp = exports.isWindowsStoreApp = function isWindowsStoreApp() {\n    // Check for the presence of a couple WinRT globals\n    return (typeof Windows === 'undefined' ? 'undefined' : _typeof(Windows)) === 'object' && _typeof(Windows.UI) === 'object';\n};\n/**\n * Converts a server error code to a Javascript Error\n * @param {!string} code\n * @param {!Query} query\n * @return {Error}\n */\nvar errorForServerCode = exports.errorForServerCode = function errorForServerCode(code, query) {\n    var reason = 'Unknown Error';\n    if (code === 'too_big') {\n        reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n    } else if (code == 'permission_denied') {\n        reason = \"Client doesn't have permission to access the desired data.\";\n    } else if (code == 'unavailable') {\n        reason = 'The service is unavailable';\n    }\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\n    error.code = code.toUpperCase();\n    return error;\n};\n/**\n * Used to test for integer-looking strings\n * @type {RegExp}\n * @private\n */\nvar INTEGER_REGEXP_ = exports.INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n * @param {!string} str\n * @return {?number}\n */\nvar tryParseInt = exports.tryParseInt = function tryParseInt(str) {\n    if (INTEGER_REGEXP_.test(str)) {\n        var intVal = Number(str);\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\n            return intVal;\n        }\n    }\n    return null;\n};\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param {!function()} fn The code to guard.\n */\nvar exceptionGuard = exports.exceptionGuard = function exceptionGuard(fn) {\n    try {\n        fn();\n    } catch (e) {\n        // Re-throw exception when it's safe.\n        setTimeout(function () {\n            // It used to be that \"throw e\" would result in a good console error with\n            // relevant context, but as of Chrome 39, you just get the firebase.js\n            // file/line number where we re-throw it, which is useless. So we log\n            // e.stack explicitly.\n            var stack = e.stack || '';\n            warn('Exception was thrown by user callback.', stack);\n            throw e;\n        }, Math.floor(0));\n    }\n};\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param {?Function=} callback Optional onComplete callback.\n * @param {...*} var_args Arbitrary args to be passed to opt_onComplete\n */\nvar callUserCallback = exports.callUserCallback = function callUserCallback(callback) {\n    var var_args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        var_args[_i - 1] = arguments[_i];\n    }\n    if (typeof callback === 'function') {\n        exceptionGuard(function () {\n            callback.apply(void 0, var_args);\n        });\n    }\n};\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nvar beingCrawled = exports.beingCrawled = function beingCrawled() {\n    var userAgent = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window['navigator'] && window['navigator']['userAgent'] || '';\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n    // believe to support JavaScript/AJAX rendering.\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\n    return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\n * Export a property of an object using a getter function.\n *\n * @param {!Object} object\n * @param {string} name\n * @param {!function(): *} fnGet\n */\nvar exportPropGetter = exports.exportPropGetter = function exportPropGetter(object, name, fnGet) {\n    Object.defineProperty(object, name, { get: fnGet });\n};\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param {Function} fn Function to run.\n * @param {number} time Milliseconds to wait before running.\n * @return {number|Object} The setTimeout() return value.\n */\nvar setTimeoutNonBlocking = exports.setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n    var timeout = setTimeout(fn, time);\n    if ((typeof timeout === 'undefined' ? 'undefined' : _typeof(timeout)) === 'object' && timeout['unref']) {\n        timeout['unref']();\n    }\n    return timeout;\n};\n\n\n},{\"../../../utils/Sha1\":134,\"../../../utils/assert\":135,\"../../../utils/crypt\":137,\"../../../utils/environment\":139,\"../../../utils/json\":142,\"../../../utils/obj\":144,\"../../../utils/utf8\":147,\"../storage/storage\":53}],66:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.validateObjectContainsKey = exports.validateObject = exports.validateString = exports.validateBoolean = exports.validateCredential = exports.validateUrl = exports.validateWritablePath = exports.validateRootPathString = exports.validatePathString = exports.validateKey = exports.validateEventType = exports.validatePriority = exports.validateFirebaseMergeDataArg = exports.validateFirebaseMergePaths = exports.validateFirebaseData = exports.validateFirebaseDataArg = exports.isValidPriority = exports.isValidRootPathString = exports.isValidPathString = exports.isValidKey = exports.MAX_LEAF_SIZE_ = exports.INVALID_PATH_REGEX_ = exports.INVALID_KEY_REGEX_ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nvar _Path = require('./Path');\n\nvar _obj = require('../../../utils/obj');\n\nvar _util = require('./util');\n\nvar _validation = require('../../../utils/validation');\n\nvar _utf = require('../../../utils/utf8');\n\n/**\n * True for invalid Firebase keys\n * @type {RegExp}\n * @private\n */\nvar INVALID_KEY_REGEX_ = exports.INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n * @type {RegExp}\n * @private\n */\nvar INVALID_PATH_REGEX_ = exports.INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\n * Maximum number of characters to allow in leaf value\n * @type {number}\n * @private\n */\nvar MAX_LEAF_SIZE_ = exports.MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\n * @param {*} key\n * @return {boolean}\n */\nvar isValidKey = exports.isValidKey = function isValidKey(key) {\n    return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nvar isValidPathString = exports.isValidPathString = function isValidPathString(pathString) {\n    return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nvar isValidRootPathString = exports.isValidRootPathString = function isValidRootPathString(pathString) {\n    if (pathString) {\n        // Allow '/.info/' at the beginning.\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n    }\n    return isValidPathString(pathString);\n};\n/**\n * @param {*} priority\n * @return {boolean}\n */\nvar isValidPriority = exports.isValidPriority = function isValidPriority(priority) {\n    return priority === null || typeof priority === 'string' || typeof priority === 'number' && !(0, _util.isInvalidJSONNumber)(priority) || priority && (typeof priority === 'undefined' ? 'undefined' : _typeof(priority)) === 'object' && (0, _obj.contains)(priority, '.sv');\n};\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nvar validateFirebaseDataArg = exports.validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {\n    if (optional && data === undefined) return;\n    validateFirebaseData((0, _validation.errorPrefix)(fnName, argumentNumber, optional), data, path);\n};\n/**\n * Validate a data object client-side before sending to server.\n *\n * @param {string} errorPrefix\n * @param {*} data\n * @param {!Path|!ValidationPath} path_\n */\nvar validateFirebaseData = exports.validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n    var path = path_ instanceof _Path.Path ? new _Path.ValidationPath(path_, errorPrefix) : path_;\n    if (data === undefined) {\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n    }\n    if (typeof data === 'function') {\n        throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());\n    }\n    if ((0, _util.isInvalidJSONNumber)(data)) {\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n    }\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\n    if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && (0, _utf.stringLength)(data) > MAX_LEAF_SIZE_) {\n        throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + \" ('\" + data.substring(0, 50) + \"...')\");\n    }\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n    // to save extra walking of large objects.\n    if (data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n        var hasDotValue_1 = false,\n            hasActualChild_1 = false;\n        (0, _obj.forEach)(data, function (key, value) {\n            if (key === '.value') {\n                hasDotValue_1 = true;\n            } else if (key !== '.priority' && key !== '.sv') {\n                hasActualChild_1 = true;\n                if (!isValidKey(key)) {\n                    throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n                }\n            }\n            path.push(key);\n            validateFirebaseData(errorPrefix, value, path);\n            path.pop();\n        });\n        if (hasDotValue_1 && hasActualChild_1) {\n            throw new Error(errorPrefix + ' contains \".value\" child ' + path.toErrorString() + ' in addition to actual children.');\n        }\n    }\n};\n/**\n * Pre-validate paths passed in the firebase function.\n *\n * @param {string} errorPrefix\n * @param {Array<!Path>} mergePaths\n */\nvar validateFirebaseMergePaths = exports.validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n    var i, curPath;\n    for (i = 0; i < mergePaths.length; i++) {\n        curPath = mergePaths[i];\n        var keys = curPath.slice();\n        for (var j = 0; j < keys.length; j++) {\n            if (keys[j] === '.priority' && j === keys.length - 1) {\n                // .priority is OK\n            } else if (!isValidKey(keys[j])) {\n                throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n            }\n        }\n    }\n    // Check that update keys are not descendants of each other.\n    // We rely on the property that sorting guarantees that ancestors come\n    // right before descendants.\n    mergePaths.sort(_Path.Path.comparePaths);\n    var prevPath = null;\n    for (i = 0; i < mergePaths.length; i++) {\n        curPath = mergePaths[i];\n        if (prevPath !== null && prevPath.contains(curPath)) {\n            throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n        }\n        prevPath = curPath;\n    }\n};\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nvar validateFirebaseMergeDataArg = exports.validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {\n    if (optional && data === undefined) return;\n    var errorPrefix = (0, _validation.errorPrefix)(fnName, argumentNumber, optional);\n    if (!(data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') || Array.isArray(data)) {\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\n    }\n    var mergePaths = [];\n    (0, _obj.forEach)(data, function (key, value) {\n        var curPath = new _Path.Path(key);\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\n        if (curPath.getBack() === '.priority') {\n            if (!isValidPriority(value)) {\n                throw new Error(errorPrefix + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n            }\n        }\n        mergePaths.push(curPath);\n    });\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\nvar validatePriority = exports.validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {\n    if (optional && priority === undefined) return;\n    if ((0, _util.isInvalidJSONNumber)(priority)) throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n    // Special case to allow importing data with a .sv.\n    if (!isValidPriority(priority)) throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n};\nvar validateEventType = exports.validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {\n    if (optional && eventType === undefined) return;\n    switch (eventType) {\n        case 'value':\n        case 'child_added':\n        case 'child_removed':\n        case 'child_changed':\n        case 'child_moved':\n            break;\n        default:\n            throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n};\nvar validateKey = exports.validateKey = function validateKey(fnName, argumentNumber, key, optional) {\n    if (optional && key === undefined) return;\n    if (!isValidKey(key)) throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n};\nvar validatePathString = exports.validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {\n    if (optional && pathString === undefined) return;\n    if (!isValidPathString(pathString)) throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n};\nvar validateRootPathString = exports.validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {\n    if (pathString) {\n        // Allow '/.info/' at the beginning.\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n    }\n    validatePathString(fnName, argumentNumber, pathString, optional);\n};\nvar validateWritablePath = exports.validateWritablePath = function validateWritablePath(fnName, path) {\n    if (path.getFront() === '.info') {\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n    }\n};\nvar validateUrl = exports.validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {\n    // TODO = Validate server better.\n    var pathString = parsedUrl.path.toString();\n    if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n        throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n    }\n};\nvar validateCredential = exports.validateCredential = function validateCredential(fnName, argumentNumber, cred, optional) {\n    if (optional && cred === undefined) return;\n    if (!(typeof cred === 'string')) throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a valid credential (a string).');\n};\nvar validateBoolean = exports.validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {\n    if (optional && bool === undefined) return;\n    if (typeof bool !== 'boolean') throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a boolean.');\n};\nvar validateString = exports.validateString = function validateString(fnName, argumentNumber, string, optional) {\n    if (optional && string === undefined) return;\n    if (!(typeof string === 'string')) {\n        throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a valid string.');\n    }\n};\nvar validateObject = exports.validateObject = function validateObject(fnName, argumentNumber, obj, optional) {\n    if (optional && obj === undefined) return;\n    if (!(obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') || obj === null) {\n        throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a valid object.');\n    }\n};\nvar validateObjectContainsKey = exports.validateObjectContainsKey = function validateObjectContainsKey(fnName, argumentNumber, obj, key, optional, opt_type) {\n    var objectContainsKey = obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && (0, _obj.contains)(obj, key);\n    if (!objectContainsKey) {\n        if (optional) {\n            return;\n        } else {\n            throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must contain the key \"' + key + '\"');\n        }\n    }\n    if (opt_type) {\n        var val = (0, _obj.safeGet)(obj, key);\n        if (opt_type === 'number' && !(typeof val === 'number') || opt_type === 'string' && !(typeof val === 'string') || opt_type === 'boolean' && !(typeof val === 'boolean') || opt_type === 'function' && !(typeof val === 'function') || opt_type === 'object' && !((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') && val) {\n            if (optional) {\n                throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'contains invalid value for key \"' + key + '\" (must be of type \"' + opt_type + '\")');\n            } else {\n                throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must contain the key \"' + key + '\" with type \"' + opt_type + '\"');\n            }\n        }\n    }\n};\n\n\n},{\"../../../utils/obj\":144,\"../../../utils/utf8\":147,\"../../../utils/validation\":149,\"./Path\":59,\"./util\":65}],67:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nvar CacheNode = function () {\n    /**\n     * @param {!Node} node_\n     * @param {boolean} fullyInitialized_\n     * @param {boolean} filtered_\n     */\n    function CacheNode(node_, fullyInitialized_, filtered_) {\n        this.node_ = node_;\n        this.fullyInitialized_ = fullyInitialized_;\n        this.filtered_ = filtered_;\n    }\n    /**\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n     * @return {boolean}\n     */\n    CacheNode.prototype.isFullyInitialized = function () {\n        return this.fullyInitialized_;\n    };\n    /**\n     * Returns whether this node is potentially missing children due to a filter applied to the node\n     * @return {boolean}\n     */\n    CacheNode.prototype.isFiltered = function () {\n        return this.filtered_;\n    };\n    /**\n     * @param {!Path} path\n     * @return {boolean}\n     */\n    CacheNode.prototype.isCompleteForPath = function (path) {\n        if (path.isEmpty()) {\n            return this.isFullyInitialized() && !this.filtered_;\n        }\n        var childKey = path.getFront();\n        return this.isCompleteForChild(childKey);\n    };\n    /**\n     * @param {!string} key\n     * @return {boolean}\n     */\n    CacheNode.prototype.isCompleteForChild = function (key) {\n        return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n    };\n    /**\n     * @return {!Node}\n     */\n    CacheNode.prototype.getNode = function () {\n        return this.node_;\n    };\n    return CacheNode;\n}();\nexports.CacheNode = CacheNode;\n\n\n},{}],68:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @constructor\n * @struct\n * @param {!string} type The event type\n * @param {!Node} snapshotNode The data\n * @param {string=} childName The name for this child, if it's a child event\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\n * @param {string=} prevName The name for the previous child, if applicable\n */\nvar Change = function () {\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\n        this.type = type;\n        this.snapshotNode = snapshotNode;\n        this.childName = childName;\n        this.oldSnap = oldSnap;\n        this.prevName = prevName;\n    }\n    /**\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.valueChange = function (snapshot) {\n        return new Change(Change.VALUE, snapshot);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childAddedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childRemovedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} newSnapshot\n     * @param {!Node} oldSnapshot\n     * @return {!Change}\n     */\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childMovedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\n    };\n    //event types\n    /** Event type for a child added */\n    Change.CHILD_ADDED = 'child_added';\n    /** Event type for a child removed */\n    Change.CHILD_REMOVED = 'child_removed';\n    /** Event type for a child changed */\n    Change.CHILD_CHANGED = 'child_changed';\n    /** Event type for a child moved */\n    Change.CHILD_MOVED = 'child_moved';\n    /** Event type for a value change */\n    Change.VALUE = 'value';\n    return Change;\n}();\nexports.Change = Change;\n\n\n},{}],69:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ChildChangeAccumulator = undefined;\n\nvar _obj = require('../../../utils/obj');\n\nvar _Change = require('./Change');\n\nvar _assert = require('../../../utils/assert');\n\n/**\n * @constructor\n */\nvar ChildChangeAccumulator = function () {\n    function ChildChangeAccumulator() {\n        this.changeMap_ = {};\n    }\n    /**\n     * @param {!Change} change\n     */\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n        var type = change.type;\n        var childKey /** @type {!string} */ = change.childName;\n        (0, _assert.assert)(type == _Change.Change.CHILD_ADDED || type == _Change.Change.CHILD_CHANGED || type == _Change.Change.CHILD_REMOVED, 'Only child changes supported for tracking');\n        (0, _assert.assert)(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n        var oldChange = (0, _obj.safeGet)(this.changeMap_, childKey);\n        if (oldChange) {\n            var oldType = oldChange.type;\n            if (type == _Change.Change.CHILD_ADDED && oldType == _Change.Change.CHILD_REMOVED) {\n                this.changeMap_[childKey] = _Change.Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\n            } else if (type == _Change.Change.CHILD_REMOVED && oldType == _Change.Change.CHILD_ADDED) {\n                delete this.changeMap_[childKey];\n            } else if (type == _Change.Change.CHILD_REMOVED && oldType == _Change.Change.CHILD_CHANGED) {\n                this.changeMap_[childKey] = _Change.Change.childRemovedChange(childKey, oldChange.oldSnap);\n            } else if (type == _Change.Change.CHILD_CHANGED && oldType == _Change.Change.CHILD_ADDED) {\n                this.changeMap_[childKey] = _Change.Change.childAddedChange(childKey, change.snapshotNode);\n            } else if (type == _Change.Change.CHILD_CHANGED && oldType == _Change.Change.CHILD_CHANGED) {\n                this.changeMap_[childKey] = _Change.Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\n            } else {\n                throw (0, _assert.assertionError)('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n            }\n        } else {\n            this.changeMap_[childKey] = change;\n        }\n    };\n    /**\n     * @return {!Array.<!Change>}\n     */\n    ChildChangeAccumulator.prototype.getChanges = function () {\n        return (0, _obj.getValues)(this.changeMap_);\n    };\n    return ChildChangeAccumulator;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.ChildChangeAccumulator = ChildChangeAccumulator;\n\n\n},{\"../../../utils/assert\":135,\"../../../utils/obj\":144,\"./Change\":68}],70:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.WriteTreeCompleteChildSource = exports.NO_COMPLETE_CHILD_SOURCE = exports.NoCompleteChildSource_ = undefined;\n\nvar _CacheNode = require('./CacheNode');\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n *\n * @private\n * @constructor\n * @implements CompleteChildSource\n */\nvar NoCompleteChildSource_ = function () {\n    function NoCompleteChildSource_() {}\n    /**\n     * @inheritDoc\n     */\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n        return null;\n    };\n    return NoCompleteChildSource_;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.NoCompleteChildSource_ = NoCompleteChildSource_;\n/**\n * Singleton instance.\n * @const\n * @type {!CompleteChildSource}\n */\n\nvar NO_COMPLETE_CHILD_SOURCE = exports.NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n *\n *\n * @implements CompleteChildSource\n */\nvar WriteTreeCompleteChildSource = function () {\n    /**\n     * @param {!WriteTreeRef} writes_\n     * @param {!ViewCache} viewCache_\n     * @param {?Node} optCompleteServerCache_\n     */\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n        if (optCompleteServerCache_ === void 0) {\n            optCompleteServerCache_ = null;\n        }\n        this.writes_ = writes_;\n        this.viewCache_ = viewCache_;\n        this.optCompleteServerCache_ = optCompleteServerCache_;\n    }\n    /**\n     * @inheritDoc\n     */\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n        var node = this.viewCache_.getEventCache();\n        if (node.isCompleteForChild(childKey)) {\n            return node.getNode().getImmediateChild(childKey);\n        } else {\n            var serverNode = this.optCompleteServerCache_ != null ? new _CacheNode.CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n            return this.writes_.calcCompleteChild(childKey, serverNode);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n        var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n        if (nodes.length === 0) {\n            return null;\n        } else {\n            return nodes[0];\n        }\n    };\n    return WriteTreeCompleteChildSource;\n}();\nexports.WriteTreeCompleteChildSource = WriteTreeCompleteChildSource;\n\n\n},{\"./CacheNode\":67}],71:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CancelEvent = exports.DataEvent = undefined;\n\nvar _json = require('../../../utils/json');\n\n/**\n * Encapsulates the data needed to raise an event\n * @implements {Event}\n */\nvar DataEvent = function () {\n    /**\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\n     * @param {!DataSnapshot} snapshot The data backing the event\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\n     */\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n        this.eventType = eventType;\n        this.eventRegistration = eventRegistration;\n        this.snapshot = snapshot;\n        this.prevName = prevName;\n    }\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getPath = function () {\n        var ref = this.snapshot.getRef();\n        if (this.eventType === 'value') {\n            return ref.path;\n        } else {\n            return ref.getParent().path;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getEventType = function () {\n        return this.eventType;\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.toString = function () {\n        return this.getPath().toString() + ':' + this.eventType + ':' + (0, _json.stringify)(this.snapshot.exportVal());\n    };\n    return DataEvent;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.DataEvent = DataEvent;\n\nvar CancelEvent = function () {\n    /**\n     * @param {EventRegistration} eventRegistration\n     * @param {Error} error\n     * @param {!Path} path\n     */\n    function CancelEvent(eventRegistration, error, path) {\n        this.eventRegistration = eventRegistration;\n        this.error = error;\n        this.path = path;\n    }\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getPath = function () {\n        return this.path;\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getEventType = function () {\n        return 'cancel';\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.toString = function () {\n        return this.path.toString() + ':cancel';\n    };\n    return CancelEvent;\n}();\nexports.CancelEvent = CancelEvent;\n\n\n},{\"../../../utils/json\":142}],72:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.EventGenerator = undefined;\n\nvar _Node = require('../snap/Node');\n\nvar _Change = require('./Change');\n\nvar _assert = require('../../../utils/assert');\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n * @constructor\n */\nvar EventGenerator = function () {\n    /**\n     *\n     * @param {!Query} query_\n     */\n    function EventGenerator(query_) {\n        this.query_ = query_;\n        /**\n         * @private\n         * @type {!Index}\n         */\n        this.index_ = this.query_.getQueryParams().getIndex();\n    }\n    /**\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n     *\n     * Notes:\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\n     *    our index.\n     *  - prevName will be calculated based on the index ordering.\n     *\n     * @param {!Array.<!Change>} changes\n     * @param {!Node} eventCache\n     * @param {!Array.<!EventRegistration>} eventRegistrations\n     * @return {!Array.<!Event>}\n     */\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n        var _this = this;\n        var events = [];\n        var moves = [];\n        changes.forEach(function (change) {\n            if (change.type === _Change.Change.CHILD_CHANGED && _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n                moves.push(_Change.Change.childMovedChange(change.childName, change.snapshotNode));\n            }\n        });\n        this.generateEventsForType_(events, _Change.Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, _Change.Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, _Change.Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, _Change.Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, _Change.Change.VALUE, changes, eventRegistrations, eventCache);\n        return events;\n    };\n    /**\n     * Given changes of a single change type, generate the corresponding events.\n     *\n     * @param {!Array.<!Event>} events\n     * @param {!string} eventType\n     * @param {!Array.<!Change>} changes\n     * @param {!Array.<!EventRegistration>} registrations\n     * @param {!Node} eventCache\n     * @private\n     */\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n        var _this = this;\n        var filteredChanges = changes.filter(function (change) {\n            return change.type === eventType;\n        });\n        filteredChanges.sort(this.compareChanges_.bind(this));\n        filteredChanges.forEach(function (change) {\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\n            registrations.forEach(function (registration) {\n                if (registration.respondsTo(change.type)) {\n                    events.push(registration.createEvent(materializedChange, _this.query_));\n                }\n            });\n        });\n    };\n    /**\n     * @param {!Change} change\n     * @param {!Node} eventCache\n     * @return {!Change}\n     * @private\n     */\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n        if (change.type === 'value' || change.type === 'child_removed') {\n            return change;\n        } else {\n            change.prevName = eventCache.getPredecessorChildName(\n            /** @type {!string} */\n            change.childName, change.snapshotNode, this.index_);\n            return change;\n        }\n    };\n    /**\n     * @param {!Change} a\n     * @param {!Change} b\n     * @return {number}\n     * @private\n     */\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\n        if (a.childName == null || b.childName == null) {\n            throw (0, _assert.assertionError)('Should only compare child_ events.');\n        }\n        var aWrapped = new _Node.NamedNode(a.childName, a.snapshotNode);\n        var bWrapped = new _Node.NamedNode(b.childName, b.snapshotNode);\n        return this.index_.compare(aWrapped, bWrapped);\n    };\n    return EventGenerator;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.EventGenerator = EventGenerator;\n\n\n},{\"../../../utils/assert\":135,\"../snap/Node\":37,\"./Change\":68}],73:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.EventList = exports.EventQueue = undefined;\n\nvar _util = require('../util/util');\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n * @constructor\n */\nvar EventQueue = function () {\n    function EventQueue() {\n        /**\n         * @private\n         * @type {!Array.<EventList>}\n         */\n        this.eventLists_ = [];\n        /**\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n         * @private\n         * @type {!number}\n         */\n        this.recursionDepth_ = 0;\n    }\n    /**\n     * @param {!Array.<Event>} eventDataList The new events to queue.\n     */\n    EventQueue.prototype.queueEvents = function (eventDataList) {\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n        var currList = null;\n        for (var i = 0; i < eventDataList.length; i++) {\n            var eventData = eventDataList[i];\n            var eventPath = eventData.getPath();\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\n                this.eventLists_.push(currList);\n                currList = null;\n            }\n            if (currList === null) {\n                currList = new EventList(eventPath);\n            }\n            currList.add(eventData);\n        }\n        if (currList) {\n            this.eventLists_.push(currList);\n        }\n    };\n    /**\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\n     * for the specified path.\n     *\n     * It is assumed that the new events are all for the specified path.\n     *\n     * @param {!Path} path The path to raise events for.\n     * @param {!Array.<Event>} eventDataList The new events to raise.\n     */\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.equals(path);\n        });\n    };\n    /**\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\n     * locations related to the specified change path (i.e. all ancestors and descendants).\n     *\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n     *\n     * @param {!Path} changedPath The path to raise events for.\n     * @param {!Array.<!Event>} eventDataList The events to raise\n     */\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n        });\n    };\n    /**\n     * @param {!function(!Path):boolean} predicate\n     * @private\n     */\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n        this.recursionDepth_++;\n        var sentAll = true;\n        for (var i = 0; i < this.eventLists_.length; i++) {\n            var eventList = this.eventLists_[i];\n            if (eventList) {\n                var eventPath = eventList.getPath();\n                if (predicate(eventPath)) {\n                    this.eventLists_[i].raise();\n                    this.eventLists_[i] = null;\n                } else {\n                    sentAll = false;\n                }\n            }\n        }\n        if (sentAll) {\n            this.eventLists_ = [];\n        }\n        this.recursionDepth_--;\n    };\n    return EventQueue;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.EventQueue = EventQueue;\n/**\n * @param {!Path} path\n * @constructor\n */\n\nvar EventList = function () {\n    function EventList(path_) {\n        this.path_ = path_;\n        /**\n         * @type {!Array.<Event>}\n         * @private\n         */\n        this.events_ = [];\n    }\n    /**\n     * @param {!Event} eventData\n     */\n    EventList.prototype.add = function (eventData) {\n        this.events_.push(eventData);\n    };\n    /**\n     * Iterates through the list and raises each event\n     */\n    EventList.prototype.raise = function () {\n        for (var i = 0; i < this.events_.length; i++) {\n            var eventData = this.events_[i];\n            if (eventData !== null) {\n                this.events_[i] = null;\n                var eventFn = eventData.getEventRunner();\n                if (_util.logger) {\n                    (0, _util.log)('event: ' + eventData.toString());\n                }\n                (0, _util.exceptionGuard)(eventFn);\n            }\n        }\n    };\n    /**\n     * @return {!Path}\n     */\n    EventList.prototype.getPath = function () {\n        return this.path_;\n    };\n    return EventList;\n}();\nexports.EventList = EventList;\n\n\n},{\"../util/util\":65}],74:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ChildEventRegistration = exports.ValueEventRegistration = undefined;\n\nvar _DataSnapshot = require('../../api/DataSnapshot');\n\nvar _Event = require('./Event');\n\nvar _obj = require('../../../utils/obj');\n\nvar _assert = require('../../../utils/assert');\n\n/**\n * Represents registration for 'value' events.\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar ValueEventRegistration = function () {\n    /**\n     * @param {?function(!DataSnapshot)} callback_\n     * @param {?function(Error)} cancelCallback_\n     * @param {?Object} context_\n     */\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\n        this.callback_ = callback_;\n        this.cancelCallback_ = cancelCallback_;\n        this.context_ = context_;\n    }\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\n        return eventType === 'value';\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\n        var index = query.getQueryParams().getIndex();\n        return new _Event.DataEvent('value', this, new _DataSnapshot.DataSnapshot(change.snapshotNode, query.getRef(), index));\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n        var ctx = this.context_;\n        if (eventData.getEventType() === 'cancel') {\n            (0, _assert.assert)(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n            var cancelCB_1 = this.cancelCallback_;\n            return function () {\n                // We know that error exists, we checked above that this is a cancel event\n                cancelCB_1.call(ctx, eventData.error);\n            };\n        } else {\n            var cb_1 = this.callback_;\n            return function () {\n                cb_1.call(ctx, eventData.snapshot);\n            };\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n        if (this.cancelCallback_) {\n            return new _Event.CancelEvent(this, error, path);\n        } else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.matches = function (other) {\n        if (!(other instanceof ValueEventRegistration)) {\n            return false;\n        } else if (!other.callback_ || !this.callback_) {\n            // If no callback specified, we consider it to match any callback.\n            return true;\n        } else {\n            return other.callback_ === this.callback_ && other.context_ === this.context_;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\n        return this.callback_ !== null;\n    };\n    return ValueEventRegistration;\n}();\nexports.ValueEventRegistration = ValueEventRegistration;\n/**\n * Represents the registration of 1 or more child_xxx events.\n *\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\n * register a group of callbacks together in the future.\n *\n * @constructor\n * @implements {EventRegistration}\n */\n\nvar ChildEventRegistration = function () {\n    /**\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\n     * @param {?function(Error)} cancelCallback_\n     * @param {Object=} context_\n     */\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n        this.callbacks_ = callbacks_;\n        this.cancelCallback_ = cancelCallback_;\n        this.context_ = context_;\n    }\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n        eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n        return (0, _obj.contains)(this.callbacks_, eventToCheck);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n        if (this.cancelCallback_) {\n            return new _Event.CancelEvent(this, error, path);\n        } else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\n        (0, _assert.assert)(change.childName != null, 'Child events should have a childName.');\n        var ref = query.getRef().child /** @type {!string} */(change.childName);\n        var index = query.getQueryParams().getIndex();\n        return new _Event.DataEvent(change.type, this, new _DataSnapshot.DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n        var ctx = this.context_;\n        if (eventData.getEventType() === 'cancel') {\n            (0, _assert.assert)(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n            var cancelCB_2 = this.cancelCallback_;\n            return function () {\n                // We know that error exists, we checked above that this is a cancel event\n                cancelCB_2.call(ctx, eventData.error);\n            };\n        } else {\n            var cb_2 = this.callbacks_[eventData.eventType];\n            return function () {\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n            };\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.matches = function (other) {\n        if (other instanceof ChildEventRegistration) {\n            if (!this.callbacks_ || !other.callbacks_) {\n                return true;\n            } else if (this.context_ === other.context_) {\n                var otherCount = (0, _obj.getCount)(other.callbacks_);\n                var thisCount = (0, _obj.getCount)(this.callbacks_);\n                if (otherCount === thisCount) {\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n                    //  If event types don't match, not a match\n                    // If count is not 1, exact match across all\n                    if (otherCount === 1) {\n                        var otherKey /** @type {!string} */ = (0, _obj.getAnyKey)(other.callbacks_);\n                        var thisKey /** @type {!string} */ = (0, _obj.getAnyKey)(this.callbacks_);\n                        return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n                    } else {\n                        // Exact match on each key.\n                        return (0, _obj.every)(this.callbacks_, function (eventType, cb) {\n                            return other.callbacks_[eventType] === cb;\n                        });\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\n        return this.callbacks_ !== null;\n    };\n    return ChildEventRegistration;\n}();\nexports.ChildEventRegistration = ChildEventRegistration;\n\n\n},{\"../../../utils/assert\":135,\"../../../utils/obj\":144,\"../../api/DataSnapshot\":7,\"./Event\":71}],75:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.QueryParams = undefined;\n\nvar _assert = require('../../../utils/assert');\n\nvar _util = require('../util/util');\n\nvar _KeyIndex = require('../snap/indexes/KeyIndex');\n\nvar _PriorityIndex = require('../snap/indexes/PriorityIndex');\n\nvar _ValueIndex = require('../snap/indexes/ValueIndex');\n\nvar _PathIndex = require('../snap/indexes/PathIndex');\n\nvar _IndexedFilter = require('./filter/IndexedFilter');\n\nvar _LimitedFilter = require('./filter/LimitedFilter');\n\nvar _RangedFilter = require('./filter/RangedFilter');\n\nvar _json = require('../../../utils/json');\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n * @constructor\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar QueryParams = function () {\n    function QueryParams() {\n        this.limitSet_ = false;\n        this.startSet_ = false;\n        this.startNameSet_ = false;\n        this.endSet_ = false;\n        this.endNameSet_ = false;\n        this.limit_ = 0;\n        this.viewFrom_ = '';\n        this.indexStartValue_ = null;\n        this.indexStartName_ = '';\n        this.indexEndValue_ = null;\n        this.indexEndName_ = '';\n        this.index_ = _PriorityIndex.PRIORITY_INDEX;\n    }\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasStart = function () {\n        return this.startSet_;\n    };\n    /**\n     * @return {boolean} True if it would return from left.\n     */\n    QueryParams.prototype.isViewFromLeft = function () {\n        if (this.viewFrom_ === '') {\n            // limit(), rather than limitToFirst or limitToLast was called.\n            // This means that only one of startSet_ and endSet_ is true. Use them\n            // to calculate which side of the view to anchor to. If neither is set,\n            // anchor to the end.\n            return this.startSet_;\n        } else {\n            return this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n        }\n    };\n    /**\n     * Only valid to call if hasStart() returns true\n     * @return {*}\n     */\n    QueryParams.prototype.getIndexStartValue = function () {\n        (0, _assert.assert)(this.startSet_, 'Only valid if start has been set');\n        return this.indexStartValue_;\n    };\n    /**\n     * Only valid to call if hasStart() returns true.\n     * Returns the starting key name for the range defined by these query parameters\n     * @return {!string}\n     */\n    QueryParams.prototype.getIndexStartName = function () {\n        (0, _assert.assert)(this.startSet_, 'Only valid if start has been set');\n        if (this.startNameSet_) {\n            return this.indexStartName_;\n        } else {\n            return _util.MIN_NAME;\n        }\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasEnd = function () {\n        return this.endSet_;\n    };\n    /**\n     * Only valid to call if hasEnd() returns true.\n     * @return {*}\n     */\n    QueryParams.prototype.getIndexEndValue = function () {\n        (0, _assert.assert)(this.endSet_, 'Only valid if end has been set');\n        return this.indexEndValue_;\n    };\n    /**\n     * Only valid to call if hasEnd() returns true.\n     * Returns the end key name for the range defined by these query parameters\n     * @return {!string}\n     */\n    QueryParams.prototype.getIndexEndName = function () {\n        (0, _assert.assert)(this.endSet_, 'Only valid if end has been set');\n        if (this.endNameSet_) {\n            return this.indexEndName_;\n        } else {\n            return _util.MAX_NAME;\n        }\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasLimit = function () {\n        return this.limitSet_;\n    };\n    /**\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\n     */\n    QueryParams.prototype.hasAnchoredLimit = function () {\n        return this.limitSet_ && this.viewFrom_ !== '';\n    };\n    /**\n     * Only valid to call if hasLimit() returns true\n     * @return {!number}\n     */\n    QueryParams.prototype.getLimit = function () {\n        (0, _assert.assert)(this.limitSet_, 'Only valid if limit has been set');\n        return this.limit_;\n    };\n    /**\n     * @return {!Index}\n     */\n    QueryParams.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @return {!QueryParams}\n     * @private\n     */\n    QueryParams.prototype.copy_ = function () {\n        var copy = new QueryParams();\n        copy.limitSet_ = this.limitSet_;\n        copy.limit_ = this.limit_;\n        copy.startSet_ = this.startSet_;\n        copy.indexStartValue_ = this.indexStartValue_;\n        copy.startNameSet_ = this.startNameSet_;\n        copy.indexStartName_ = this.indexStartName_;\n        copy.endSet_ = this.endSet_;\n        copy.indexEndValue_ = this.indexEndValue_;\n        copy.endNameSet_ = this.endNameSet_;\n        copy.indexEndName_ = this.indexEndName_;\n        copy.index_ = this.index_;\n        copy.viewFrom_ = this.viewFrom_;\n        return copy;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limit = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = '';\n        return newParams;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limitToFirst = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n        return newParams;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limitToLast = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n        return newParams;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {?string=} key\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.startAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.startSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexStartValue_ = indexValue;\n        if (key != null) {\n            newParams.startNameSet_ = true;\n            newParams.indexStartName_ = key;\n        } else {\n            newParams.startNameSet_ = false;\n            newParams.indexStartName_ = '';\n        }\n        return newParams;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {?string=} key\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.endAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.endSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexEndValue_ = indexValue;\n        if (key !== undefined) {\n            newParams.endNameSet_ = true;\n            newParams.indexEndName_ = key;\n        } else {\n            newParams.endNameSet_ = false;\n            newParams.indexEndName_ = '';\n        }\n        return newParams;\n    };\n    /**\n     * @param {!Index} index\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.orderBy = function (index) {\n        var newParams = this.copy_();\n        newParams.index_ = index;\n        return newParams;\n    };\n    /**\n     * @return {!Object}\n     */\n    QueryParams.prototype.getQueryObject = function () {\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n        var obj = {};\n        if (this.startSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n            if (this.startNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n            }\n        }\n        if (this.endSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n            if (this.endNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n            }\n        }\n        if (this.limitSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n            var viewFrom = this.viewFrom_;\n            if (viewFrom === '') {\n                if (this.isViewFromLeft()) {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n                } else {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n                }\n            }\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n        }\n        // For now, priority index is the default, so we only specify if it's some other index\n        if (this.index_ !== _PriorityIndex.PRIORITY_INDEX) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n        }\n        return obj;\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.loadsAllData = function () {\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.isDefault = function () {\n        return this.loadsAllData() && this.index_ == _PriorityIndex.PRIORITY_INDEX;\n    };\n    /**\n     * @return {!NodeFilter}\n     */\n    QueryParams.prototype.getNodeFilter = function () {\n        if (this.loadsAllData()) {\n            return new _IndexedFilter.IndexedFilter(this.getIndex());\n        } else if (this.hasLimit()) {\n            return new _LimitedFilter.LimitedFilter(this);\n        } else {\n            return new _RangedFilter.RangedFilter(this);\n        }\n    };\n    /**\n     * Returns a set of REST query string parameters representing this query.\n     *\n     * @return {!Object.<string,*>} query string parameters\n     */\n    QueryParams.prototype.toRestQueryStringParameters = function () {\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n        var qs = {};\n        if (this.isDefault()) {\n            return qs;\n        }\n        var orderBy;\n        if (this.index_ === _PriorityIndex.PRIORITY_INDEX) {\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n        } else if (this.index_ === _ValueIndex.VALUE_INDEX) {\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\n        } else if (this.index_ === _KeyIndex.KEY_INDEX) {\n            orderBy = REST_CONSTANTS.KEY_INDEX;\n        } else {\n            (0, _assert.assert)(this.index_ instanceof _PathIndex.PathIndex, 'Unrecognized index type!');\n            orderBy = this.index_.toString();\n        }\n        qs[REST_CONSTANTS.ORDER_BY] = (0, _json.stringify)(orderBy);\n        if (this.startSet_) {\n            qs[REST_CONSTANTS.START_AT] = (0, _json.stringify)(this.indexStartValue_);\n            if (this.startNameSet_) {\n                qs[REST_CONSTANTS.START_AT] += ',' + (0, _json.stringify)(this.indexStartName_);\n            }\n        }\n        if (this.endSet_) {\n            qs[REST_CONSTANTS.END_AT] = (0, _json.stringify)(this.indexEndValue_);\n            if (this.endNameSet_) {\n                qs[REST_CONSTANTS.END_AT] += ',' + (0, _json.stringify)(this.indexEndName_);\n            }\n        }\n        if (this.limitSet_) {\n            if (this.isViewFromLeft()) {\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n            } else {\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n            }\n        }\n        return qs;\n    };\n    /**\n     * Wire Protocol Constants\n     * @const\n     * @enum {string}\n     * @private\n     */\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n        INDEX_START_VALUE: 'sp',\n        INDEX_START_NAME: 'sn',\n        INDEX_END_VALUE: 'ep',\n        INDEX_END_NAME: 'en',\n        LIMIT: 'l',\n        VIEW_FROM: 'vf',\n        VIEW_FROM_LEFT: 'l',\n        VIEW_FROM_RIGHT: 'r',\n        INDEX: 'i'\n    };\n    /**\n     * REST Query Constants\n     * @const\n     * @enum {string}\n     * @private\n     */\n    QueryParams.REST_QUERY_CONSTANTS_ = {\n        ORDER_BY: 'orderBy',\n        PRIORITY_INDEX: '$priority',\n        VALUE_INDEX: '$value',\n        KEY_INDEX: '$key',\n        START_AT: 'startAt',\n        END_AT: 'endAt',\n        LIMIT_TO_FIRST: 'limitToFirst',\n        LIMIT_TO_LAST: 'limitToLast'\n    };\n    /**\n     * Default, empty query parameters\n     * @type {!QueryParams}\n     * @const\n     */\n    QueryParams.DEFAULT = new QueryParams();\n    return QueryParams;\n}();\nexports.QueryParams = QueryParams;\n\n\n},{\"../../../utils/assert\":135,\"../../../utils/json\":142,\"../snap/indexes/KeyIndex\":41,\"../snap/indexes/PathIndex\":42,\"../snap/indexes/PriorityIndex\":43,\"../snap/indexes/ValueIndex\":44,\"../util/util\":65,\"./filter/IndexedFilter\":79,\"./filter/LimitedFilter\":80,\"./filter/RangedFilter\":81}],76:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.View = undefined;\n\nvar _IndexedFilter = require('./filter/IndexedFilter');\n\nvar _ViewProcessor = require('./ViewProcessor');\n\nvar _ChildrenNode = require('../snap/ChildrenNode');\n\nvar _CacheNode = require('./CacheNode');\n\nvar _ViewCache = require('./ViewCache');\n\nvar _EventGenerator = require('./EventGenerator');\n\nvar _assert = require('../../../utils/assert');\n\nvar _Operation = require('../operation/Operation');\n\nvar _Change = require('./Change');\n\nvar _PriorityIndex = require('../snap/indexes/PriorityIndex');\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n * @constructor\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar View = function () {\n    /**\n     *\n     * @param {!Query} query_\n     * @param {!ViewCache} initialViewCache\n     */\n    function View(query_, initialViewCache) {\n        this.query_ = query_;\n        this.eventRegistrations_ = [];\n        var params = this.query_.getQueryParams();\n        var indexFilter = new _IndexedFilter.IndexedFilter(params.getIndex());\n        var filter = params.getNodeFilter();\n        /**\n         * @type {ViewProcessor}\n         * @private\n         */\n        this.processor_ = new _ViewProcessor.ViewProcessor(filter);\n        var initialServerCache = initialViewCache.getServerCache();\n        var initialEventCache = initialViewCache.getEventCache();\n        // Don't filter server node with other filter than index, wait for tagged listen\n        var serverSnap = indexFilter.updateFullNode(_ChildrenNode.ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n        var eventSnap = filter.updateFullNode(_ChildrenNode.ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n        var newServerCache = new _CacheNode.CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n        var newEventCache = new _CacheNode.CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n        /**\n         * @type {!ViewCache}\n         * @private\n         */\n        this.viewCache_ = new _ViewCache.ViewCache(newEventCache, newServerCache);\n        /**\n         * @type {!EventGenerator}\n         * @private\n         */\n        this.eventGenerator_ = new _EventGenerator.EventGenerator(this.query_);\n    }\n    /**\n     * @return {!Query}\n     */\n    View.prototype.getQuery = function () {\n        return this.query_;\n    };\n    /**\n     * @return {?Node}\n     */\n    View.prototype.getServerCache = function () {\n        return this.viewCache_.getServerCache().getNode();\n    };\n    /**\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    View.prototype.getCompleteServerCache = function (path) {\n        var cache = this.viewCache_.getCompleteServerSnap();\n        if (cache) {\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n            // we need to see if it contains the child we're interested in.\n            if (this.query_.getQueryParams().loadsAllData() || !path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty()) {\n                return cache.getChild(path);\n            }\n        }\n        return null;\n    };\n    /**\n     * @return {boolean}\n     */\n    View.prototype.isEmpty = function () {\n        return this.eventRegistrations_.length === 0;\n    };\n    /**\n     * @param {!EventRegistration} eventRegistration\n     */\n    View.prototype.addEventRegistration = function (eventRegistration) {\n        this.eventRegistrations_.push(eventRegistration);\n    };\n    /**\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n     */\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n        var cancelEvents = [];\n        if (cancelError) {\n            (0, _assert.assert)(eventRegistration == null, 'A cancel should cancel all event registrations.');\n            var path_1 = this.query_.path;\n            this.eventRegistrations_.forEach(function (registration) {\n                cancelError /** @type {!Error} */ = cancelError;\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n                if (maybeEvent) {\n                    cancelEvents.push(maybeEvent);\n                }\n            });\n        }\n        if (eventRegistration) {\n            var remaining = [];\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n                var existing = this.eventRegistrations_[i];\n                if (!existing.matches(eventRegistration)) {\n                    remaining.push(existing);\n                } else if (eventRegistration.hasAnyCallback()) {\n                    // We're removing just this one\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n                    break;\n                }\n            }\n            this.eventRegistrations_ = remaining;\n        } else {\n            this.eventRegistrations_ = [];\n        }\n        return cancelEvents;\n    };\n    /**\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\n     *\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeServerCache\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n        if (operation.type === _Operation.OperationType.MERGE && operation.source.queryId !== null) {\n            (0, _assert.assert)(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n            (0, _assert.assert)(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n        }\n        var oldViewCache = this.viewCache_;\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n        this.processor_.assertIndexed(result.viewCache);\n        (0, _assert.assert)(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n        this.viewCache_ = result.viewCache;\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n    };\n    /**\n     * @param {!EventRegistration} registration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.getInitialEvents = function (registration) {\n        var eventSnap = this.viewCache_.getEventCache();\n        var initialChanges = [];\n        if (!eventSnap.getNode().isLeafNode()) {\n            var eventNode = eventSnap.getNode();\n            eventNode.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {\n                initialChanges.push(_Change.Change.childAddedChange(key, childNode));\n            });\n        }\n        if (eventSnap.isFullyInitialized()) {\n            initialChanges.push(_Change.Change.valueChange(eventSnap.getNode()));\n        }\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n    };\n    /**\n     * @private\n     * @param {!Array.<!Change>} changes\n     * @param {!Node} eventCache\n     * @param {EventRegistration=} eventRegistration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n        var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n    };\n    return View;\n}();\nexports.View = View;\n\n\n},{\"../../../utils/assert\":135,\"../operation/Operation\":32,\"../snap/ChildrenNode\":34,\"../snap/indexes/PriorityIndex\":43,\"./CacheNode\":67,\"./Change\":68,\"./EventGenerator\":72,\"./ViewCache\":77,\"./ViewProcessor\":78,\"./filter/IndexedFilter\":79}],77:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ViewCache = undefined;\n\nvar _ChildrenNode = require('../snap/ChildrenNode');\n\nvar _CacheNode = require('./CacheNode');\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n *\n * @constructor\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar ViewCache = function () {\n  /**\n   *\n   * @param {!CacheNode} eventCache_\n   * @param {!CacheNode} serverCache_\n   */\n  function ViewCache(eventCache_, serverCache_) {\n    this.eventCache_ = eventCache_;\n    this.serverCache_ = serverCache_;\n  }\n  /**\n   * @param {!Node} eventSnap\n   * @param {boolean} complete\n   * @param {boolean} filtered\n   * @return {!ViewCache}\n   */\n  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n    return new ViewCache(new _CacheNode.CacheNode(eventSnap, complete, filtered), this.serverCache_);\n  };\n  /**\n   * @param {!Node} serverSnap\n   * @param {boolean} complete\n   * @param {boolean} filtered\n   * @return {!ViewCache}\n   */\n  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n    return new ViewCache(this.eventCache_, new _CacheNode.CacheNode(serverSnap, complete, filtered));\n  };\n  /**\n   * @return {!CacheNode}\n   */\n  ViewCache.prototype.getEventCache = function () {\n    return this.eventCache_;\n  };\n  /**\n   * @return {?Node}\n   */\n  ViewCache.prototype.getCompleteEventSnap = function () {\n    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;\n  };\n  /**\n   * @return {!CacheNode}\n   */\n  ViewCache.prototype.getServerCache = function () {\n    return this.serverCache_;\n  };\n  /**\n   * @return {?Node}\n   */\n  ViewCache.prototype.getCompleteServerSnap = function () {\n    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;\n  };\n  /**\n   * @const\n   * @type {ViewCache}\n   */\n  ViewCache.Empty = new ViewCache(new _CacheNode.CacheNode(_ChildrenNode.ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/false,\n  /*filtered=*/false), new _CacheNode.CacheNode(_ChildrenNode.ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/false,\n  /*filtered=*/false));\n  return ViewCache;\n}();\nexports.ViewCache = ViewCache;\n\n\n},{\"../snap/ChildrenNode\":34,\"./CacheNode\":67}],78:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ViewProcessor = exports.ProcessorResult = undefined;\n\nvar _Operation = require('../operation/Operation');\n\nvar _assert = require('../../../utils/assert');\n\nvar _ChildChangeAccumulator = require('./ChildChangeAccumulator');\n\nvar _Change = require('./Change');\n\nvar _ChildrenNode = require('../snap/ChildrenNode');\n\nvar _KeyIndex = require('../snap/indexes/KeyIndex');\n\nvar _ImmutableTree = require('../util/ImmutableTree');\n\nvar _Path = require('../util/Path');\n\nvar _CompleteChildSource = require('./CompleteChildSource');\n\n/**\n * @constructor\n * @struct\n */\nvar ProcessorResult = function () {\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Array.<!Change>} changes\n     */\n    function ProcessorResult(viewCache, changes) {\n        this.viewCache = viewCache;\n        this.changes = changes;\n    }\n    return ProcessorResult;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.ProcessorResult = ProcessorResult;\n/**\n * @constructor\n */\n\nvar ViewProcessor = function () {\n    /**\n     * @param {!NodeFilter} filter_\n     */\n    function ViewProcessor(filter_) {\n        this.filter_ = filter_;\n    }\n    /**\n     * @param {!ViewCache} viewCache\n     */\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\n        (0, _assert.assert)(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n        (0, _assert.assert)(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @return {!ProcessorResult}\n     */\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n        var accumulator = new _ChildChangeAccumulator.ChildChangeAccumulator();\n        var newViewCache, filterServerNode;\n        if (operation.type === _Operation.OperationType.OVERWRITE) {\n            var overwrite = operation;\n            if (overwrite.source.fromUser) {\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n            } else {\n                (0, _assert.assert)(overwrite.source.fromServer, 'Unknown source.');\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n                // again\n                filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !overwrite.path.isEmpty();\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n            }\n        } else if (operation.type === _Operation.OperationType.MERGE) {\n            var merge = operation;\n            if (merge.source.fromUser) {\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n            } else {\n                (0, _assert.assert)(merge.source.fromServer, 'Unknown source.');\n                // We filter the node if it's a tagged update or the node has been previously filtered\n                filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n            }\n        } else if (operation.type === _Operation.OperationType.ACK_USER_WRITE) {\n            var ackUserWrite = operation;\n            if (!ackUserWrite.revert) {\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n            } else {\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n            }\n        } else if (operation.type === _Operation.OperationType.LISTEN_COMPLETE) {\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n        } else {\n            throw (0, _assert.assertionError)('Unknown operation type: ' + operation.type);\n        }\n        var changes = accumulator.getChanges();\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n        return new ProcessorResult(newViewCache, changes);\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!ViewCache} newViewCache\n     * @param {!Array.<!Change>} accumulator\n     * @private\n     */\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n        var eventSnap = newViewCache.getEventCache();\n        if (eventSnap.isFullyInitialized()) {\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n            if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals /** @type {!Node} */(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n                accumulator.push(_Change.Change.valueChange(\n                /** @type {!Node} */newViewCache.getCompleteEventSnap()));\n            }\n        }\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} changePath\n     * @param {!WriteTreeRef} writesCache\n     * @param {!CompleteChildSource} source\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n        var oldEventSnap = viewCache.getEventCache();\n        if (writesCache.shadowingWrite(changePath) != null) {\n            // we have a shadowing write, ignore changes\n            return viewCache;\n        } else {\n            var newEventCache = void 0,\n                serverNode = void 0;\n            if (changePath.isEmpty()) {\n                // TODO: figure out how this plays with \"sliding ack windows\"\n                (0, _assert.assert)(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n                if (viewCache.getServerCache().isFiltered()) {\n                    // We need to special case this, because we need to only apply writes to complete children, or\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\n                    // writes cannot be guaranteed to be complete\n                    var serverCache = viewCache.getCompleteServerSnap();\n                    var completeChildren = serverCache instanceof _ChildrenNode.ChildrenNode ? serverCache : _ChildrenNode.ChildrenNode.EMPTY_NODE;\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n                } else {\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n                }\n            } else {\n                var childKey = changePath.getFront();\n                if (childKey == '.priority') {\n                    (0, _assert.assert)(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\n                    var oldEventNode = oldEventSnap.getNode();\n                    serverNode = viewCache.getServerCache().getNode();\n                    // we might have overwrites for this priority\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n                    if (updatedPriority != null) {\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n                    } else {\n                        // priority didn't change, keep old node\n                        newEventCache = oldEventSnap.getNode();\n                    }\n                } else {\n                    var childChangePath = changePath.popFront();\n                    // update child\n                    var newEventChild = void 0;\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\n                        serverNode = viewCache.getServerCache().getNode();\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n                        if (eventChildUpdate != null) {\n                            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n                        } else {\n                            // Nothing changed, just keep the old child\n                            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n                        }\n                    } else {\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n                    }\n                    if (newEventChild != null) {\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n                    } else {\n                        // no complete child available or no change\n                        newEventCache = oldEventSnap.getNode();\n                    }\n                }\n            }\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n        }\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Path} changePath\n     * @param {!Node} changedSnap\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {boolean} filterServerNode\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n        var oldServerSnap = oldViewCache.getServerCache();\n        var newServerCache;\n        var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();\n        if (changePath.isEmpty()) {\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n        } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n            var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n        } else {\n            var childKey = changePath.getFront();\n            if (!oldServerSnap.isCompleteForPath(changePath) && changePath.getLength() > 1) {\n                // We don't update incomplete nodes with updates intended for other listeners\n                return oldViewCache;\n            }\n            var childChangePath = changePath.popFront();\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n            if (childKey == '.priority') {\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n            } else {\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, _CompleteChildSource.NO_COMPLETE_CHILD_SOURCE, null);\n            }\n        }\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n        var source = new _CompleteChildSource.WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Path} changePath\n     * @param {!Node} changedSnap\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n        var oldEventSnap = oldViewCache.getEventCache();\n        var newViewCache, newEventCache;\n        var source = new _CompleteChildSource.WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n        if (changePath.isEmpty()) {\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n        } else {\n            var childKey = changePath.getFront();\n            if (childKey === '.priority') {\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n            } else {\n                var childChangePath = changePath.popFront();\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n                var newChild = void 0;\n                if (childChangePath.isEmpty()) {\n                    // Child overwrite, we can replace the child\n                    newChild = changedSnap;\n                } else {\n                    var childNode = source.getCompleteChild(childKey);\n                    if (childNode != null) {\n                        if (childChangePath.getBack() === '.priority' && childNode.getChild(childChangePath.parent()).isEmpty()) {\n                            // This is a priority update on an empty node. If this node exists on the server, the\n                            // server will send down the priority in the update, so ignore for now\n                            newChild = childNode;\n                        } else {\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\n                        }\n                    } else {\n                        // There is no complete child node available\n                        newChild = _ChildrenNode.ChildrenNode.EMPTY_NODE;\n                    }\n                }\n                if (!oldChild.equals(newChild)) {\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n                } else {\n                    newViewCache = oldViewCache;\n                }\n            }\n        }\n        return newViewCache;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {string} childKey\n     * @return {boolean}\n     * @private\n     */\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n        return viewCache.getEventCache().isCompleteForChild(childKey);\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {ImmutableTree.<!Node>} changedChildren\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n        var _this = this;\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\n        // window leaving room for new items.  It's important we process these changes first, so we\n        // iterate the changes twice, first processing any that affect items currently in view.\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n        // not the other.\n        var curViewCache = viewCache;\n        changedChildren.foreach(function (relativePath, childNode) {\n            var writePath = path.child(relativePath);\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n            }\n        });\n        changedChildren.foreach(function (relativePath, childNode) {\n            var writePath = path.child(relativePath);\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n            }\n        });\n        return curViewCache;\n    };\n    /**\n     * @param {!Node} node\n     * @param {ImmutableTree.<!Node>} merge\n     * @return {!Node}\n     * @private\n     */\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n        merge.foreach(function (relativePath, childNode) {\n            node = node.updateChild(relativePath, childNode);\n        });\n        return node;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!ImmutableTree.<!Node>} changedChildren\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache\n     * @param {boolean} filterServerNode\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n        var _this = this;\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n        // wait for the complete data update coming soon.\n        if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {\n            return viewCache;\n        }\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\n        // window leaving room for new items.  It's important we process these changes first, so we\n        // iterate the changes twice, first processing any that affect items currently in view.\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n        // not the other.\n        var curViewCache = viewCache;\n        var viewMergeTree;\n        if (path.isEmpty()) {\n            viewMergeTree = changedChildren;\n        } else {\n            viewMergeTree = _ImmutableTree.ImmutableTree.Empty.setTree(path, changedChildren);\n        }\n        var serverNode = viewCache.getServerCache().getNode();\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n            if (serverNode.hasChild(childKey)) {\n                var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n                var newChild = _this.applyMerge_(serverChild, childTree);\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new _Path.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n            }\n        });\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n                var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new _Path.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n            }\n        });\n        return curViewCache;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} ackPath\n     * @param {!ImmutableTree<!boolean>} affectedTree\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n        if (writesCache.shadowingWrite(ackPath) != null) {\n            return viewCache;\n        }\n        // Only filter server node if it is currently filtered\n        var filterServerNode = viewCache.getServerCache().isFiltered();\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n        // now that it won't be shadowed.\n        var serverCache = viewCache.getServerCache();\n        if (affectedTree.value != null) {\n            // This is an overwrite.\n            if (ackPath.isEmpty() && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n            } else if (ackPath.isEmpty()) {\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n                // should just re-apply whatever we have in our cache as a merge.\n                var changedChildren_1 = _ImmutableTree.ImmutableTree.Empty;\n                serverCache.getNode().forEachChild(_KeyIndex.KEY_INDEX, function (name, node) {\n                    changedChildren_1 = changedChildren_1.set(new _Path.Path(name), node);\n                });\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n            } else {\n                return viewCache;\n            }\n        } else {\n            // This is a merge.\n            var changedChildren_2 = _ImmutableTree.ImmutableTree.Empty;\n            affectedTree.foreach(function (mergePath, value) {\n                var serverCachePath = ackPath.child(mergePath);\n                if (serverCache.isCompleteForPath(serverCachePath)) {\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n                }\n            });\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n        }\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!WriteTreeRef} writesCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n        var oldServerNode = viewCache.getServerCache();\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, _CompleteChildSource.NO_COMPLETE_CHILD_SOURCE, accumulator);\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeServerCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n        var complete;\n        if (writesCache.shadowingWrite(path) != null) {\n            return viewCache;\n        } else {\n            var source = new _CompleteChildSource.WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n            var oldEventCache = viewCache.getEventCache().getNode();\n            var newEventCache = void 0;\n            if (path.isEmpty() || path.getFront() === '.priority') {\n                var newNode = void 0;\n                if (viewCache.getServerCache().isFullyInitialized()) {\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                } else {\n                    var serverChildren = viewCache.getServerCache().getNode();\n                    (0, _assert.assert)(serverChildren instanceof _ChildrenNode.ChildrenNode, 'serverChildren would be complete if leaf node');\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\n                }\n                newNode = newNode;\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n            } else {\n                var childKey = path.getFront();\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n                if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {\n                    newChild = oldEventCache.getImmediateChild(childKey);\n                }\n                if (newChild != null) {\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n                } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n                    // No complete child available, delete the existing one, if any\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, _ChildrenNode.ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\n                } else {\n                    newEventCache = oldEventCache;\n                }\n                if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                    if (complete.isLeafNode()) {\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n                    }\n                }\n            }\n            complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(_Path.Path.Empty) != null;\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n        }\n    };\n    return ViewProcessor;\n}();\nexports.ViewProcessor = ViewProcessor;\n\n\n},{\"../../../utils/assert\":135,\"../operation/Operation\":32,\"../snap/ChildrenNode\":34,\"../snap/indexes/KeyIndex\":41,\"../util/ImmutableTree\":56,\"../util/Path\":59,\"./Change\":68,\"./ChildChangeAccumulator\":69,\"./CompleteChildSource\":70}],79:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IndexedFilter = undefined;\n\nvar _assert = require('../../../../utils/assert');\n\nvar _Change = require('../Change');\n\nvar _ChildrenNode = require('../../snap/ChildrenNode');\n\nvar _PriorityIndex = require('../../snap/indexes/PriorityIndex');\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n *\n * @constructor\n * @implements {NodeFilter}\n * @param {!Index} index\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar IndexedFilter = function () {\n    function IndexedFilter(index_) {\n        this.index_ = index_;\n    }\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        (0, _assert.assert)(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n        var oldChild = snap.getImmediateChild(key);\n        // Check if anything actually changed.\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n            // to avoid treating these cases as \"nothing changed.\"\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\n                // Nothing changed.\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n                return snap;\n            }\n        }\n        if (optChangeAccumulator != null) {\n            if (newChild.isEmpty()) {\n                if (snap.hasChild(key)) {\n                    optChangeAccumulator.trackChildChange(_Change.Change.childRemovedChange(key, oldChild));\n                } else {\n                    (0, _assert.assert)(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n                }\n            } else if (oldChild.isEmpty()) {\n                optChangeAccumulator.trackChildChange(_Change.Change.childAddedChange(key, newChild));\n            } else {\n                optChangeAccumulator.trackChildChange(_Change.Change.childChangedChange(key, newChild, oldChild));\n            }\n        }\n        if (snap.isLeafNode() && newChild.isEmpty()) {\n            return snap;\n        } else {\n            // Make sure the node is indexed\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        if (optChangeAccumulator != null) {\n            if (!oldSnap.isLeafNode()) {\n                oldSnap.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {\n                    if (!newSnap.hasChild(key)) {\n                        optChangeAccumulator.trackChildChange(_Change.Change.childRemovedChange(key, childNode));\n                    }\n                });\n            }\n            if (!newSnap.isLeafNode()) {\n                newSnap.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {\n                    if (oldSnap.hasChild(key)) {\n                        var oldChild = oldSnap.getImmediateChild(key);\n                        if (!oldChild.equals(childNode)) {\n                            optChangeAccumulator.trackChildChange(_Change.Change.childChangedChange(key, childNode, oldChild));\n                        }\n                    } else {\n                        optChangeAccumulator.trackChildChange(_Change.Change.childAddedChange(key, childNode));\n                    }\n                });\n            }\n        }\n        return newSnap.withIndex(this.index_);\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        if (oldSnap.isEmpty()) {\n            return _ChildrenNode.ChildrenNode.EMPTY_NODE;\n        } else {\n            return oldSnap.updatePriority(newPriority);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.filtersNodes = function () {\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.getIndexedFilter = function () {\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    return IndexedFilter;\n}();\nexports.IndexedFilter = IndexedFilter;\n\n\n},{\"../../../../utils/assert\":135,\"../../snap/ChildrenNode\":34,\"../../snap/indexes/PriorityIndex\":43,\"../Change\":68}],80:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LimitedFilter = undefined;\n\nvar _RangedFilter = require('./RangedFilter');\n\nvar _ChildrenNode = require('../../snap/ChildrenNode');\n\nvar _Node = require('../../snap/Node');\n\nvar _assert = require('../../../../utils/assert');\n\nvar _Change = require('../Change');\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n *\n * @constructor\n * @implements {NodeFilter}\n */\nvar LimitedFilter = function () {\n    /**\n     * @param {!QueryParams} params\n     */\n    function LimitedFilter(params) {\n        this.rangedFilter_ = new _RangedFilter.RangedFilter(params);\n        this.index_ = params.getIndex();\n        this.limit_ = params.getLimit();\n        this.reverse_ = !params.isViewFromLeft();\n    }\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        if (!this.rangedFilter_.matches(new _Node.NamedNode(key, newChild))) {\n            newChild = _ChildrenNode.ChildrenNode.EMPTY_NODE;\n        }\n        if (snap.getImmediateChild(key).equals(newChild)) {\n            // No change\n            return snap;\n        } else if (snap.numChildren() < this.limit_) {\n            return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n        } else {\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        var filtered;\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n            // Make sure we have a children node with the correct index, not a leaf node;\n            filtered = _ChildrenNode.ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        } else {\n            if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n                filtered = _ChildrenNode.ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n                // anchor to the startPost, endPost, or last element as appropriate\n                var iterator = void 0;\n                if (this.reverse_) {\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n                } else {\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n                }\n                var count = 0;\n                while (iterator.hasNext() && count < this.limit_) {\n                    var next = iterator.getNext();\n                    var inRange = void 0;\n                    if (this.reverse_) {\n                        inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n                    } else {\n                        inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n                    }\n                    if (inRange) {\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\n                        count++;\n                    } else {\n                        // if we have reached the end post, we cannot keep adding elemments\n                        break;\n                    }\n                }\n            } else {\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n                filtered = newSnap.withIndex(this.index_);\n                // Don't support priorities on queries\n                filtered = filtered.updatePriority(_ChildrenNode.ChildrenNode.EMPTY_NODE);\n                var startPost = void 0;\n                var endPost = void 0;\n                var cmp = void 0;\n                var iterator = void 0;\n                if (this.reverse_) {\n                    iterator = filtered.getReverseIterator(this.index_);\n                    startPost = this.rangedFilter_.getEndPost();\n                    endPost = this.rangedFilter_.getStartPost();\n                    var indexCompare_1 = this.index_.getCompare();\n                    cmp = function cmp(a, b) {\n                        return indexCompare_1(b, a);\n                    };\n                } else {\n                    iterator = filtered.getIterator(this.index_);\n                    startPost = this.rangedFilter_.getStartPost();\n                    endPost = this.rangedFilter_.getEndPost();\n                    cmp = this.index_.getCompare();\n                }\n                var count = 0;\n                var foundStartPost = false;\n                while (iterator.hasNext()) {\n                    var next = iterator.getNext();\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\n                        // start adding\n                        foundStartPost = true;\n                    }\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n                    if (inRange) {\n                        count++;\n                    } else {\n                        filtered = filtered.updateImmediateChild(next.name, _ChildrenNode.ChildrenNode.EMPTY_NODE);\n                    }\n                }\n            }\n        }\n        return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        // Don't support priorities on queries\n        return oldSnap;\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.filtersNodes = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.getIndexedFilter = function () {\n        return this.rangedFilter_.getIndexedFilter();\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @param {!Node} snap\n     * @param {string} childKey\n     * @param {!Node} childSnap\n     * @param {!CompleteChildSource} source\n     * @param {?ChildChangeAccumulator} changeAccumulator\n     * @return {!Node}\n     * @private\n     */\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n        // TODO: rename all cache stuff etc to general snap terminology\n        var cmp;\n        if (this.reverse_) {\n            var indexCmp_1 = this.index_.getCompare();\n            cmp = function cmp(a, b) {\n                return indexCmp_1(b, a);\n            };\n        } else {\n            cmp = this.index_.getCompare();\n        }\n        var oldEventCache = snap;\n        (0, _assert.assert)(oldEventCache.numChildren() == this.limit_, '');\n        var newChildNamedNode = new _Node.NamedNode(childKey, childSnap);\n        var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\n        if (oldEventCache.hasChild(childKey)) {\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n            while (nextChild != null && (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\n                // the limited filter...\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n            }\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n            if (remainsInWindow) {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(_Change.Change.childChangedChange(childKey, childSnap, oldChildSnap));\n                }\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\n            } else {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(_Change.Change.childRemovedChange(childKey, oldChildSnap));\n                }\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, _ChildrenNode.ChildrenNode.EMPTY_NODE);\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n                if (nextChildInRange) {\n                    if (changeAccumulator != null) {\n                        changeAccumulator.trackChildChange(_Change.Change.childAddedChange(nextChild.name, nextChild.node));\n                    }\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n                } else {\n                    return newEventCache;\n                }\n            }\n        } else if (childSnap.isEmpty()) {\n            // we're deleting a node, but it was not in the window, so ignore it\n            return snap;\n        } else if (inRange) {\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(_Change.Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\n                    changeAccumulator.trackChildChange(_Change.Change.childAddedChange(childKey, childSnap));\n                }\n                return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, _ChildrenNode.ChildrenNode.EMPTY_NODE);\n            } else {\n                return snap;\n            }\n        } else {\n            return snap;\n        }\n    };\n    return LimitedFilter;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.LimitedFilter = LimitedFilter;\n\n\n},{\"../../../../utils/assert\":135,\"../../snap/ChildrenNode\":34,\"../../snap/Node\":37,\"../Change\":68,\"./RangedFilter\":81}],81:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RangedFilter = undefined;\n\nvar _IndexedFilter = require('./IndexedFilter');\n\nvar _PriorityIndex = require('../../snap/indexes/PriorityIndex');\n\nvar _Node = require('../../../core/snap/Node');\n\nvar _ChildrenNode = require('../../snap/ChildrenNode');\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n *\n * @constructor\n * @implements {NodeFilter}\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar RangedFilter = function () {\n    /**\n     * @param {!QueryParams} params\n     */\n    function RangedFilter(params) {\n        this.indexedFilter_ = new _IndexedFilter.IndexedFilter(params.getIndex());\n        this.index_ = params.getIndex();\n        this.startPost_ = RangedFilter.getStartPost_(params);\n        this.endPost_ = RangedFilter.getEndPost_(params);\n    }\n    /**\n     * @return {!NamedNode}\n     */\n    RangedFilter.prototype.getStartPost = function () {\n        return this.startPost_;\n    };\n    /**\n     * @return {!NamedNode}\n     */\n    RangedFilter.prototype.getEndPost = function () {\n        return this.endPost_;\n    };\n    /**\n     * @param {!NamedNode} node\n     * @return {boolean}\n     */\n    RangedFilter.prototype.matches = function (node) {\n        return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        if (!this.matches(new _Node.NamedNode(key, newChild))) {\n            newChild = _ChildrenNode.ChildrenNode.EMPTY_NODE;\n        }\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        if (newSnap.isLeafNode()) {\n            // Make sure we have a children node with the correct index, not a leaf node;\n            newSnap = _ChildrenNode.ChildrenNode.EMPTY_NODE;\n        }\n        var filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(_ChildrenNode.ChildrenNode.EMPTY_NODE);\n        var self = this;\n        newSnap.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {\n            if (!self.matches(new _Node.NamedNode(key, childNode))) {\n                filtered = filtered.updateImmediateChild(key, _ChildrenNode.ChildrenNode.EMPTY_NODE);\n            }\n        });\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        // Don't support priorities on queries\n        return oldSnap;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.filtersNodes = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.getIndexedFilter = function () {\n        return this.indexedFilter_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @param {!QueryParams} params\n     * @return {!NamedNode}\n     * @private\n     */\n    RangedFilter.getStartPost_ = function (params) {\n        if (params.hasStart()) {\n            var startName = params.getIndexStartName();\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\n        } else {\n            return params.getIndex().minPost();\n        }\n    };\n    /**\n     * @param {!QueryParams} params\n     * @return {!NamedNode}\n     * @private\n     */\n    RangedFilter.getEndPost_ = function (params) {\n        if (params.hasEnd()) {\n            var endName = params.getIndexEndName();\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\n        } else {\n            return params.getIndex().maxPost();\n        }\n    };\n    return RangedFilter;\n}();\nexports.RangedFilter = RangedFilter;\n\n\n},{\"../../../core/snap/Node\":37,\"../../snap/ChildrenNode\":34,\"../../snap/indexes/PriorityIndex\":43,\"./IndexedFilter\":79}],82:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FirebaseIFrameScriptHolder = exports.BrowserPollConnection = exports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = exports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = exports.FIREBASE_LONGPOLL_DATA_PARAM = exports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = exports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = exports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = exports.FIREBASE_LONGPOLL_SERIAL_PARAM = exports.FIREBASE_LONGPOLL_PW_PARAM = exports.FIREBASE_LONGPOLL_ID_PARAM = exports.FIREBASE_LONGPOLL_DATA_CB_NAME = exports.FIREBASE_LONGPOLL_COMMAND_CB_NAME = exports.FIREBASE_LONGPOLL_CLOSE_COMMAND = exports.FIREBASE_LONGPOLL_START_PARAM = undefined;\n\nvar _util = require('../core/util/util');\n\nvar _CountedSet = require('../core/util/CountedSet');\n\nvar _StatsManager = require('../core/stats/StatsManager');\n\nvar _PacketReceiver = require('./polling/PacketReceiver');\n\nvar _Constants = require('./Constants');\n\nvar _json = require('../../utils/json');\n\nvar _environment = require('../../utils/environment');\n\n// URL query parameters associated with longpolling\nvar FIREBASE_LONGPOLL_START_PARAM = exports.FIREBASE_LONGPOLL_START_PARAM = 'start'; /**\n                                                                                     * Copyright 2017 Google Inc.\n                                                                                     *\n                                                                                     * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                     * you may not use this file except in compliance with the License.\n                                                                                     * You may obtain a copy of the License at\n                                                                                     *\n                                                                                     *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                     *\n                                                                                     * Unless required by applicable law or agreed to in writing, software\n                                                                                     * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                     * See the License for the specific language governing permissions and\n                                                                                     * limitations under the License.\n                                                                                     */\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = exports.FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = exports.FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = exports.FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = exports.FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = exports.FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = exports.FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = exports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = exports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = exports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = exports.FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = exports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = exports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n * @const\n * @type {number}\n */\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\n * How long to wait before aborting a long-polling connection attempt.\n * @const\n * @type {number}\n */\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\n * This class manages a single long-polling connection.\n *\n * @constructor\n * @implements {Transport}\n */\nvar BrowserPollConnection = function () {\n    /**\n     * @param {string} connId An identifier for this connection, used for logging\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\n     *                                         transport session\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\n     *                                     connection previously\n     */\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n        this.connId = connId;\n        this.repoInfo = repoInfo;\n        this.transportSessionId = transportSessionId;\n        this.lastSessionId = lastSessionId;\n        this.bytesSent = 0;\n        this.bytesReceived = 0;\n        this.everConnected_ = false;\n        this.log_ = (0, _util.logWrapper)(connId);\n        this.stats_ = _StatsManager.StatsManager.getCollection(repoInfo);\n        this.urlFn = function (params) {\n            return repoInfo.connectionURL(_Constants.LONG_POLLING, params);\n        };\n    }\n    /**\n     *\n     * @param {function(Object)} onMessage Callback when messages arrive\n     * @param {function()} onDisconnect Callback with connection lost.\n     */\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n        var _this = this;\n        this.curSegmentNum = 0;\n        this.onDisconnect_ = onDisconnect;\n        this.myPacketOrderer = new _PacketReceiver.PacketReceiver(onMessage);\n        this.isClosed_ = false;\n        this.connectTimeoutTimer_ = setTimeout(function () {\n            _this.log_('Timed out trying to connect.');\n            // Make sure we clear the host cache\n            _this.onClosed_();\n            _this.connectTimeoutTimer_ = null;\n        }, Math.floor(LP_CONNECT_TIMEOUT));\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\n        (0, _util.executeWhenDOMReady)(function () {\n            if (_this.isClosed_) return;\n            //Set up a callback that gets triggered once a connection is set up.\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var command = args[0],\n                    arg1 = args[1],\n                    arg2 = args[2],\n                    arg3 = args[3],\n                    arg4 = args[4];\n                _this.incrementIncomingBytes_(args);\n                if (!_this.scriptTagHolder) return; // we closed the connection.\n                if (_this.connectTimeoutTimer_) {\n                    clearTimeout(_this.connectTimeoutTimer_);\n                    _this.connectTimeoutTimer_ = null;\n                }\n                _this.everConnected_ = true;\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\n                    _this.id = arg1;\n                    _this.password = arg2;\n                } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\n                    if (arg1) {\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\n                        // through our already open polls), so don't send any more.\n                        _this.scriptTagHolder.sendNewPolls = false;\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\n                        // all of the responses up to this one before closing\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\n                            _this.onClosed_();\n                        });\n                    } else {\n                        _this.onClosed_();\n                    }\n                } else {\n                    throw new Error('Unrecognized command received: ' + command);\n                }\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var pN = args[0],\n                    data = args[1];\n                _this.incrementIncomingBytes_(args);\n                _this.myPacketOrderer.handleResponse(pN, data);\n            }, function () {\n                _this.onClosed_();\n            }, _this.urlFn);\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n            //from cache.\n            var urlParams = {};\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n            urlParams[_Constants.VERSION_PARAM] = _Constants.PROTOCOL_VERSION;\n            if (_this.transportSessionId) {\n                urlParams[_Constants.TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n            }\n            if (_this.lastSessionId) {\n                urlParams[_Constants.LAST_SESSION_PARAM] = _this.lastSessionId;\n            }\n            if (!(0, _environment.isNodeSdk)() && typeof location !== 'undefined' && location.href && location.href.indexOf(_Constants.FORGE_DOMAIN) !== -1) {\n                urlParams[_Constants.REFERER_PARAM] = _Constants.FORGE_REF;\n            }\n            var connectURL = _this.urlFn(urlParams);\n            _this.log_('Connecting via long-poll to ' + connectURL);\n            _this.scriptTagHolder.addTag(connectURL, function () {\n                /* do nothing */\n            });\n        });\n    };\n    /**\n     * Call this when a handshake has completed successfully and we want to consider the connection established\n     */\n    BrowserPollConnection.prototype.start = function () {\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\n        this.addDisconnectPingFrame(this.id, this.password);\n    };\n    /**\n     * Forces long polling to be considered as a potential transport\n     */\n    BrowserPollConnection.forceAllow = function () {\n        BrowserPollConnection.forceAllow_ = true;\n    };\n    /**\n     * Forces longpolling to not be considered as a potential transport\n     */\n    BrowserPollConnection.forceDisallow = function () {\n        BrowserPollConnection.forceDisallow_ = true;\n    };\n    // Static method, use string literal so it can be accessed in a generic way\n    BrowserPollConnection.isAvailable = function () {\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n        return BrowserPollConnection.forceAllow_ || !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !(0, _util.isChromeExtensionContentScript)() && !(0, _util.isWindowsStoreApp)() && !(0, _environment.isNodeSdk)();\n    };\n    /**\n     * No-op for polling\n     */\n    BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n    /**\n     * Stops polling and cleans up the iframe\n     * @private\n     */\n    BrowserPollConnection.prototype.shutdown_ = function () {\n        this.isClosed_ = true;\n        if (this.scriptTagHolder) {\n            this.scriptTagHolder.close();\n            this.scriptTagHolder = null;\n        }\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n        if (this.myDisconnFrame) {\n            document.body.removeChild(this.myDisconnFrame);\n            this.myDisconnFrame = null;\n        }\n        if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n        }\n    };\n    /**\n     * Triggered when this transport is closed\n     * @private\n     */\n    BrowserPollConnection.prototype.onClosed_ = function () {\n        if (!this.isClosed_) {\n            this.log_('Longpoll is closing itself');\n            this.shutdown_();\n            if (this.onDisconnect_) {\n                this.onDisconnect_(this.everConnected_);\n                this.onDisconnect_ = null;\n            }\n        }\n    };\n    /**\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n     * that we've left.\n     */\n    BrowserPollConnection.prototype.close = function () {\n        if (!this.isClosed_) {\n            this.log_('Longpoll is being closed.');\n            this.shutdown_();\n        }\n    };\n    /**\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n     * broken into chunks (since URLs have a small maximum length).\n     * @param {!Object} data The JSON data to transmit.\n     */\n    BrowserPollConnection.prototype.send = function (data) {\n        var dataStr = (0, _json.stringify)(data);\n        this.bytesSent += dataStr.length;\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\n        //first, lets get the base64-encoded data\n        var base64data = (0, _util.base64Encode)(dataStr);\n        //We can only fit a certain amount in each URL, so we need to split this request\n        //up into multiple pieces if it doesn't fit in one request.\n        var dataSegs = (0, _util.splitStringBySize)(base64data, MAX_PAYLOAD_SIZE);\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n        //of segments so that we can reassemble the packet on the server.\n        for (var i = 0; i < dataSegs.length; i++) {\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n            this.curSegmentNum++;\n        }\n    };\n    /**\n     * This is how we notify the server that we're leaving.\n     * We aren't able to send requests with DHTML on a window close event, but we can\n     * trigger XHR requests in some browsers (everything but Opera basically).\n     * @param {!string} id\n     * @param {!string} pw\n     */\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n        if ((0, _environment.isNodeSdk)()) return;\n        this.myDisconnFrame = document.createElement('iframe');\n        var urlParams = {};\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n        this.myDisconnFrame.src = this.urlFn(urlParams);\n        this.myDisconnFrame.style.display = 'none';\n        document.body.appendChild(this.myDisconnFrame);\n    };\n    /**\n     * Used to track the bytes received by this client\n     * @param {*} args\n     * @private\n     */\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n        var bytesReceived = (0, _json.stringify)(args).length;\n        this.bytesReceived += bytesReceived;\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\n    };\n    return BrowserPollConnection;\n}();\nexports.BrowserPollConnection = BrowserPollConnection;\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n * @constructor\n *********************************************************************************************/\n\nvar FirebaseIFrameScriptHolder = function () {\n    /**\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\n     */\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n        this.onDisconnect = onDisconnect;\n        this.urlFn = urlFn;\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n        //problems in some browsers.\n        /**\n         * @type {CountedSet.<number, number>}\n         */\n        this.outstandingRequests = new _CountedSet.CountedSet();\n        //A queue of the pending segments waiting for transmission to the server.\n        this.pendingSegs = [];\n        //A serial number. We use this for two things:\n        // 1) A way to ensure the browser doesn't cache responses to polls\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n        //    JSONP code in the order it was added to the iframe.\n        this.currentSerial = Math.floor(Math.random() * 100000000);\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n        // incoming data from the server that we're waiting for).\n        this.sendNewPolls = true;\n        if (!(0, _environment.isNodeSdk)()) {\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n            //iframes where we put the long-polling script tags. We have two callbacks:\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\n            //   2) Message Callback - Triggered when new data arrives.\n            this.uniqueCallbackIdentifier = (0, _util.LUIDGenerator)();\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\n            //Create an iframe for us to add script tags to.\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n            // Set the iframe's contents.\n            var script = '';\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n            // for ie9, but ie8 needs to do it again in the document itself.\n            if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n                var currentDomain = document.domain;\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n            }\n            var iframeContents = '<html><body>' + script + '</body></html>';\n            try {\n                this.myIFrame.doc.open();\n                this.myIFrame.doc.write(iframeContents);\n                this.myIFrame.doc.close();\n            } catch (e) {\n                (0, _util.log)('frame writing exception');\n                if (e.stack) {\n                    (0, _util.log)(e.stack);\n                }\n                (0, _util.log)(e);\n            }\n        } else {\n            this.commandCB = commandCB;\n            this.onMessageCB = onMessageCB;\n        }\n    }\n    /**\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n     * actually use.\n     * @private\n     * @return {Element}\n     */\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\n        var iframe = document.createElement('iframe');\n        iframe.style.display = 'none';\n        // This is necessary in order to initialize the document inside the iframe\n        if (document.body) {\n            document.body.appendChild(iframe);\n            try {\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n                var a = iframe.contentWindow.document;\n                if (!a) {\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n                    (0, _util.log)('No IE domain setting required');\n                }\n            } catch (e) {\n                var domain = document.domain;\n                iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n            }\n        } else {\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n            // never gets hit.\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n        }\n        // Get the document of the iframe in a browser-specific way.\n        if (iframe.contentDocument) {\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n        } else if (iframe.contentWindow) {\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\n        } else if (iframe.document) {\n            iframe.doc = iframe.document; //others?\n        }\n        return iframe;\n    };\n    /**\n     * Cancel all outstanding queries and remove the frame.\n     */\n    FirebaseIFrameScriptHolder.prototype.close = function () {\n        var _this = this;\n        //Mark this iframe as dead, so no new requests are sent.\n        this.alive = false;\n        if (this.myIFrame) {\n            //We have to actually remove all of the html inside this iframe before removing it from the\n            //window, or IE will continue loading and executing the script tags we've already added, which\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n            this.myIFrame.doc.body.innerHTML = '';\n            setTimeout(function () {\n                if (_this.myIFrame !== null) {\n                    document.body.removeChild(_this.myIFrame);\n                    _this.myIFrame = null;\n                }\n            }, Math.floor(0));\n        }\n        if ((0, _environment.isNodeSdk)() && this.myID) {\n            var urlParams = {};\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n            var theURL = this.urlFn(urlParams);\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\n        }\n        // Protect from being called recursively.\n        var onDisconnect = this.onDisconnect;\n        if (onDisconnect) {\n            this.onDisconnect = null;\n            onDisconnect();\n        }\n    };\n    /**\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n     * @param {!string} id - The ID of this connection\n     * @param {!string} pw - The password for this connection\n     */\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n        this.myID = id;\n        this.myPW = pw;\n        this.alive = true;\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n        while (this.newRequest_()) {}\n    };\n    /**\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n     * too many outstanding requests and we are still alive.\n     *\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n     * needed.\n     */\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n        // close the old request.\n        if (this.alive && this.sendNewPolls && this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\n            //construct our url\n            this.currentSerial++;\n            var urlParams = {};\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n            var theURL = this.urlFn(urlParams);\n            //Now add as much data as we can.\n            var curDataString = '';\n            var i = 0;\n            while (this.pendingSegs.length > 0) {\n                //first, lets see if the next segment will fit.\n                var nextSeg = this.pendingSegs[0];\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n                    //great, the segment will fit. Lets append it.\n                    var theSeg = this.pendingSegs.shift();\n                    curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            theURL = theURL + curDataString;\n            this.addLongPollTag_(theURL, this.currentSerial);\n            return true;\n        } else {\n            return false;\n        }\n    };\n    /**\n     * Queue a packet for transmission to the server.\n     * @param segnum - A sequential id for this packet segment used for reassembly\n     * @param totalsegs - The total number of segments in this packet\n     * @param data - The data for this segment.\n     */\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n        //add this to the queue of segments to send.\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n        //send the data immediately if there isn't already data being transmitted, unless\n        //startLongPoll hasn't been called yet.\n        if (this.alive) {\n            this.newRequest_();\n        }\n    };\n    /**\n     * Add a script tag for a regular long-poll request.\n     * @param {!string} url - The URL of the script tag.\n     * @param {!number} serial - The serial number of the request.\n     * @private\n     */\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n        var _this = this;\n        //remember that we sent this request.\n        this.outstandingRequests.add(serial, 1);\n        var doNewRequest = function doNewRequest() {\n            _this.outstandingRequests.remove(serial);\n            _this.newRequest_();\n        };\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n        var readyStateCB = function readyStateCB() {\n            // Request completed.  Cancel the keepalive.\n            clearTimeout(keepaliveTimeout);\n            // Trigger a new request so we can continue receiving data.\n            doNewRequest();\n        };\n        this.addTag(url, readyStateCB);\n    };\n    /**\n     * Add an arbitrary script tag to the iframe.\n     * @param {!string} url - The URL for the script tag source.\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\n     */\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n        var _this = this;\n        if ((0, _environment.isNodeSdk)()) {\n            this.doNodeLongPoll(url, loadCB);\n        } else {\n            setTimeout(function () {\n                try {\n                    // if we're already closed, don't add this poll\n                    if (!_this.sendNewPolls) return;\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\n                    newScript_1.type = 'text/javascript';\n                    newScript_1.async = true;\n                    newScript_1.src = url;\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\n                        var rstate = newScript_1.readyState;\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\n                            if (newScript_1.parentNode) {\n                                newScript_1.parentNode.removeChild(newScript_1);\n                            }\n                            loadCB();\n                        }\n                    };\n                    newScript_1.onerror = function () {\n                        (0, _util.log)('Long-poll script failed to load: ' + url);\n                        _this.sendNewPolls = false;\n                        _this.close();\n                    };\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\n                } catch (e) {\n                    // TODO: we should make this error visible somehow\n                }\n            }, Math.floor(1));\n        }\n    };\n    return FirebaseIFrameScriptHolder;\n}();\nexports.FirebaseIFrameScriptHolder = FirebaseIFrameScriptHolder;\n\n\n},{\"../../utils/environment\":139,\"../../utils/json\":142,\"../core/stats/StatsManager\":49,\"../core/util/CountedSet\":54,\"../core/util/util\":65,\"./Constants\":84,\"./polling/PacketReceiver\":87}],83:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Connection = undefined;\n\nvar _util = require('../core/util/util');\n\nvar _storage = require('../core/storage/storage');\n\nvar _Constants = require('./Constants');\n\nvar _TransportManager = require('./TransportManager');\n\n// Abort upgrade attempt if it takes longer than 60s.\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar UPGRADE_TIMEOUT = 60000;\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n *\n * @constructor\n */\nvar Connection = function () {\n    /**\n     * @param {!string} id - an id for this connection\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n     */\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n        this.id = id;\n        this.repoInfo_ = repoInfo_;\n        this.onMessage_ = onMessage_;\n        this.onReady_ = onReady_;\n        this.onDisconnect_ = onDisconnect_;\n        this.onKill_ = onKill_;\n        this.lastSessionId = lastSessionId;\n        this.connectionCount = 0;\n        this.pendingDataMessages = [];\n        this.state_ = 0 /* CONNECTING */;\n        this.log_ = (0, _util.logWrapper)('c:' + this.id + ':');\n        this.transportManager_ = new _TransportManager.TransportManager(repoInfo_);\n        this.log_('Connection created');\n        this.start_();\n    }\n    /**\n     * Starts a connection attempt\n     * @private\n     */\n    Connection.prototype.start_ = function () {\n        var _this = this;\n        var conn = this.transportManager_.initialTransport();\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessageReceived = this.connReceiver_(this.conn_);\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\n        this.tx_ = this.conn_;\n        this.rx_ = this.conn_;\n        this.secondaryConn_ = null;\n        this.isHealthy_ = false;\n        /*\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n         * still have the context of your originating frame.\n         */\n        setTimeout(function () {\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n        }, Math.floor(0));\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\n        if (healthyTimeout_ms > 0) {\n            this.healthyTimeout_ = (0, _util.setTimeoutNonBlocking)(function () {\n                _this.healthyTimeout_ = null;\n                if (!_this.isHealthy_) {\n                    if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n                        _this.isHealthy_ = true;\n                        _this.conn_.markConnectionHealthy();\n                    } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.');\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n                        // the server.\n                    } else {\n                        _this.log_('Closing unhealthy connection after timeout.');\n                        _this.close();\n                    }\n                }\n            }, Math.floor(healthyTimeout_ms));\n        }\n    };\n    /**\n     * @return {!string}\n     * @private\n     */\n    Connection.prototype.nextTransportId_ = function () {\n        return 'c:' + this.id + ':' + this.connectionCount++;\n    };\n    Connection.prototype.disconnReceiver_ = function (conn) {\n        var _this = this;\n        return function (everConnected) {\n            if (conn === _this.conn_) {\n                _this.onConnectionLost_(everConnected);\n            } else if (conn === _this.secondaryConn_) {\n                _this.log_('Secondary connection lost.');\n                _this.onSecondaryConnectionLost_();\n            } else {\n                _this.log_('closing an old connection');\n            }\n        };\n    };\n    Connection.prototype.connReceiver_ = function (conn) {\n        var _this = this;\n        return function (message) {\n            if (_this.state_ != 2 /* DISCONNECTED */) {\n                    if (conn === _this.rx_) {\n                        _this.onPrimaryMessageReceived_(message);\n                    } else if (conn === _this.secondaryConn_) {\n                        _this.onSecondaryMessageReceived_(message);\n                    } else {\n                        _this.log_('message on old connection');\n                    }\n                }\n        };\n    };\n    /**\n     *\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\n     */\n    Connection.prototype.sendRequest = function (dataMsg) {\n        // wrap in a data message envelope and send it on\n        var msg = { t: 'd', d: dataMsg };\n        this.sendData_(msg);\n    };\n    Connection.prototype.tryCleanupConnection = function () {\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n            this.conn_ = this.secondaryConn_;\n            this.secondaryConn_ = null;\n            // the server will shutdown the old connection\n        }\n    };\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\n        if (MESSAGE_TYPE in controlData) {\n            var cmd = controlData[MESSAGE_TYPE];\n            if (cmd === SWITCH_ACK) {\n                this.upgradeIfSecondaryHealthy_();\n            } else if (cmd === CONTROL_RESET) {\n                // Most likely the session wasn't valid. Abandon the switch attempt\n                this.log_('Got a reset on secondary, closing it');\n                this.secondaryConn_.close();\n                // If we were already using this connection for something, than we need to fully close\n                if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n                    this.close();\n                }\n            } else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on secondary.');\n                this.secondaryResponsesRequired_--;\n                this.upgradeIfSecondaryHealthy_();\n            }\n        }\n    };\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n        var layer = (0, _util.requireKey)('t', parsedData);\n        var data = (0, _util.requireKey)('d', parsedData);\n        if (layer == 'c') {\n            this.onSecondaryControl_(data);\n        } else if (layer == 'd') {\n            // got a data message, but we're still second connection. Need to buffer it up\n            this.pendingDataMessages.push(data);\n        } else {\n            throw new Error('Unknown protocol layer: ' + layer);\n        }\n    };\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n        if (this.secondaryResponsesRequired_ <= 0) {\n            this.log_('Secondary connection is healthy.');\n            this.isHealthy_ = true;\n            this.secondaryConn_.markConnectionHealthy();\n            this.proceedWithUpgrade_();\n        } else {\n            // Send a ping to make sure the connection is healthy.\n            this.log_('sending ping on secondary.');\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.proceedWithUpgrade_ = function () {\n        // tell this connection to consider itself open\n        this.secondaryConn_.start();\n        // send ack\n        this.log_('sending client ack on secondary');\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n        // send end packet on primary transport, switch to sending on this one\n        // can receive on this one, buffer responses until end received on primary transport\n        this.log_('Ending transmission on primary');\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n        this.tx_ = this.secondaryConn_;\n        this.tryCleanupConnection();\n    };\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n        var layer = (0, _util.requireKey)('t', parsedData);\n        var data = (0, _util.requireKey)('d', parsedData);\n        if (layer == 'c') {\n            this.onControl_(data);\n        } else if (layer == 'd') {\n            this.onDataMessage_(data);\n        }\n    };\n    Connection.prototype.onDataMessage_ = function (message) {\n        this.onPrimaryResponse_();\n        // We don't do anything with data messages, just kick them up a level\n        this.onMessage_(message);\n    };\n    Connection.prototype.onPrimaryResponse_ = function () {\n        if (!this.isHealthy_) {\n            this.primaryResponsesRequired_--;\n            if (this.primaryResponsesRequired_ <= 0) {\n                this.log_('Primary connection is healthy.');\n                this.isHealthy_ = true;\n                this.conn_.markConnectionHealthy();\n            }\n        }\n    };\n    Connection.prototype.onControl_ = function (controlData) {\n        var cmd = (0, _util.requireKey)(MESSAGE_TYPE, controlData);\n        if (MESSAGE_DATA in controlData) {\n            var payload = controlData[MESSAGE_DATA];\n            if (cmd === SERVER_HELLO) {\n                this.onHandshake_(payload);\n            } else if (cmd === END_TRANSMISSION) {\n                this.log_('recvd end transmission on primary');\n                this.rx_ = this.secondaryConn_;\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n                    this.onDataMessage_(this.pendingDataMessages[i]);\n                }\n                this.pendingDataMessages = [];\n                this.tryCleanupConnection();\n            } else if (cmd === CONTROL_SHUTDOWN) {\n                // This was previously the 'onKill' callback passed to the lower-level connection\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\n                this.onConnectionShutdown_(payload);\n            } else if (cmd === CONTROL_RESET) {\n                // payload in this case is the host we should contact\n                this.onReset_(payload);\n            } else if (cmd === CONTROL_ERROR) {\n                (0, _util.error)('Server Error: ' + payload);\n            } else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on primary.');\n                this.onPrimaryResponse_();\n                this.sendPingOnPrimaryIfNecessary_();\n            } else {\n                (0, _util.error)('Unknown control packet command: ' + cmd);\n            }\n        }\n    };\n    /**\n     *\n     * @param {Object} handshake The handshake data returned from the server\n     * @private\n     */\n    Connection.prototype.onHandshake_ = function (handshake) {\n        var timestamp = handshake.ts;\n        var version = handshake.v;\n        var host = handshake.h;\n        this.sessionId = handshake.s;\n        this.repoInfo_.updateHost(host);\n        // if we've already closed the connection, then don't bother trying to progress further\n        if (this.state_ == 0 /* CONNECTING */) {\n                this.conn_.start();\n                this.onConnectionEstablished_(this.conn_, timestamp);\n                if (_Constants.PROTOCOL_VERSION !== version) {\n                    (0, _util.warn)('Protocol version mismatch detected');\n                }\n                // TODO: do we want to upgrade? when? maybe a delay?\n                this.tryStartUpgrade_();\n            }\n    };\n    Connection.prototype.tryStartUpgrade_ = function () {\n        var conn = this.transportManager_.upgradeTransport();\n        if (conn) {\n            this.startUpgrade_(conn);\n        }\n    };\n    Connection.prototype.startUpgrade_ = function (conn) {\n        var _this = this;\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessage = this.connReceiver_(this.secondaryConn_);\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n        this.secondaryConn_.open(onMessage, onDisconnect);\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n        (0, _util.setTimeoutNonBlocking)(function () {\n            if (_this.secondaryConn_) {\n                _this.log_('Timed out trying to upgrade.');\n                _this.secondaryConn_.close();\n            }\n        }, Math.floor(UPGRADE_TIMEOUT));\n    };\n    Connection.prototype.onReset_ = function (host) {\n        this.log_('Reset packet received.  New host: ' + host);\n        this.repoInfo_.updateHost(host);\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n        // We don't currently support resets after the connection has already been established\n        if (this.state_ === 1 /* CONNECTED */) {\n                this.close();\n            } else {\n            // Close whatever connections we have open and start again.\n            this.closeConnections_();\n            this.start_();\n        }\n    };\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n        var _this = this;\n        this.log_('Realtime connection established.');\n        this.conn_ = conn;\n        this.state_ = 1 /* CONNECTED */;\n        if (this.onReady_) {\n            this.onReady_(timestamp, this.sessionId);\n            this.onReady_ = null;\n        }\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n        // send some pings.\n        if (this.primaryResponsesRequired_ === 0) {\n            this.log_('Primary connection is healthy.');\n            this.isHealthy_ = true;\n        } else {\n            (0, _util.setTimeoutNonBlocking)(function () {\n                _this.sendPingOnPrimaryIfNecessary_();\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n        }\n    };\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\n                this.log_('sending ping on primary.');\n                this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n            }\n    };\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\n        var conn = this.secondaryConn_;\n        this.secondaryConn_ = null;\n        if (this.tx_ === conn || this.rx_ === conn) {\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\n            this.close();\n        }\n    };\n    /**\n     *\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\n     * we should flush the host cache\n     * @private\n     */\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\n        this.conn_ = null;\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\n                this.log_('Realtime connection failed.');\n                // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n                if (this.repoInfo_.isCacheableHost()) {\n                    _storage.PersistentStorage.remove('host:' + this.repoInfo_.host);\n                    // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n                    this.repoInfo_.internalHost = this.repoInfo_.host;\n                }\n            } else if (this.state_ === 1 /* CONNECTED */) {\n                this.log_('Realtime connection lost.');\n            }\n        this.close();\n    };\n    /**\n     *\n     * @param {string} reason\n     * @private\n     */\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\n        this.log_('Connection shutdown command received. Shutting down...');\n        if (this.onKill_) {\n            this.onKill_(reason);\n            this.onKill_ = null;\n        }\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\n        // so clear the callback.\n        this.onDisconnect_ = null;\n        this.close();\n    };\n    Connection.prototype.sendData_ = function (data) {\n        if (this.state_ !== 1 /* CONNECTED */) {\n                throw 'Connection is not connected';\n            } else {\n            this.tx_.send(data);\n        }\n    };\n    /**\n     * Cleans up this connection, calling the appropriate callbacks\n     */\n    Connection.prototype.close = function () {\n        if (this.state_ !== 2 /* DISCONNECTED */) {\n                this.log_('Closing realtime connection.');\n                this.state_ = 2 /* DISCONNECTED */;\n                this.closeConnections_();\n                if (this.onDisconnect_) {\n                    this.onDisconnect_();\n                    this.onDisconnect_ = null;\n                }\n            }\n    };\n    /**\n     *\n     * @private\n     */\n    Connection.prototype.closeConnections_ = function () {\n        this.log_('Shutting down all connections');\n        if (this.conn_) {\n            this.conn_.close();\n            this.conn_ = null;\n        }\n        if (this.secondaryConn_) {\n            this.secondaryConn_.close();\n            this.secondaryConn_ = null;\n        }\n        if (this.healthyTimeout_) {\n            clearTimeout(this.healthyTimeout_);\n            this.healthyTimeout_ = null;\n        }\n    };\n    return Connection;\n}();\nexports.Connection = Connection;\n\n\n},{\"../core/storage/storage\":53,\"../core/util/util\":65,\"./Constants\":84,\"./TransportManager\":85}],84:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar PROTOCOL_VERSION = exports.PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = exports.VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = exports.TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = exports.REFERER_PARAM = 'r';\nvar FORGE_REF = exports.FORGE_REF = 'f';\nvar FORGE_DOMAIN = exports.FORGE_DOMAIN = 'firebaseio.com';\nvar LAST_SESSION_PARAM = exports.LAST_SESSION_PARAM = 'ls';\nvar WEBSOCKET = exports.WEBSOCKET = 'websocket';\nvar LONG_POLLING = exports.LONG_POLLING = 'long_polling';\n\n\n},{}],85:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TransportManager = undefined;\n\nvar _BrowserPollConnection = require('./BrowserPollConnection');\n\nvar _WebSocketConnection = require('./WebSocketConnection');\n\nvar _util = require('../core/util/util');\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n * @constructor\n */\nvar TransportManager = function () {\n    /**\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\n     */\n    function TransportManager(repoInfo) {\n        this.initTransports_(repoInfo);\n    }\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n        /**\n         * @const\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\n         */\n        get: function get() {\n            return [_BrowserPollConnection.BrowserPollConnection, _WebSocketConnection.WebSocketConnection];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {!RepoInfo} repoInfo\n     * @private\n     */\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\n        var isWebSocketsAvailable = _WebSocketConnection.WebSocketConnection && _WebSocketConnection.WebSocketConnection['isAvailable']();\n        var isSkipPollConnection = isWebSocketsAvailable && !_WebSocketConnection.WebSocketConnection.previouslyFailed();\n        if (repoInfo.webSocketOnly) {\n            if (!isWebSocketsAvailable) (0, _util.warn)(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n            isSkipPollConnection = true;\n        }\n        if (isSkipPollConnection) {\n            this.transports_ = [_WebSocketConnection.WebSocketConnection];\n        } else {\n            var transports_1 = this.transports_ = [];\n            (0, _util.each)(TransportManager.ALL_TRANSPORTS, function (i, transport) {\n                if (transport && transport['isAvailable']()) {\n                    transports_1.push(transport);\n                }\n            });\n        }\n    };\n    /**\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\n     * initial transport to use\n     */\n    TransportManager.prototype.initialTransport = function () {\n        if (this.transports_.length > 0) {\n            return this.transports_[0];\n        } else {\n            throw new Error('No transports available');\n        }\n    };\n    /**\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\n     * transport, or null\n     */\n    TransportManager.prototype.upgradeTransport = function () {\n        if (this.transports_.length > 1) {\n            return this.transports_[1];\n        } else {\n            return null;\n        }\n    };\n    return TransportManager;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.TransportManager = TransportManager;\n\n\n},{\"../core/util/util\":65,\"./BrowserPollConnection\":82,\"./WebSocketConnection\":86}],86:[function(require,module,exports){\n(function (process){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.WebSocketConnection = undefined;\nexports.setWebSocketImpl = setWebSocketImpl;\n\nvar _app = require('../../app');\n\nvar _app2 = _interopRequireDefault(_app);\n\nvar _assert = require('../../utils/assert');\n\nvar _util = require('../core/util/util');\n\nvar _StatsManager = require('../core/stats/StatsManager');\n\nvar _Constants = require('./Constants');\n\nvar _constants = require('../../utils/constants');\n\nvar _storage = require('../core/storage/storage');\n\nvar _json = require('../../utils/json');\n\nvar _environment = require('../../utils/environment');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384; /**\n                                      * Copyright 2017 Google Inc.\n                                      *\n                                      * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                      * you may not use this file except in compliance with the License.\n                                      * You may obtain a copy of the License at\n                                      *\n                                      *   http://www.apache.org/licenses/LICENSE-2.0\n                                      *\n                                      * Unless required by applicable law or agreed to in writing, software\n                                      * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                      * See the License for the specific language governing permissions and\n                                      * limitations under the License.\n                                      */\n\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n    WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n    WebSocketImpl = WebSocket;\n}\nfunction setWebSocketImpl(impl) {\n    WebSocketImpl = impl;\n}\n/**\n * Create a new websocket connection with the given callbacks.\n * @constructor\n * @implements {Transport}\n */\nvar WebSocketConnection = function () {\n    /**\n     * @param {string} connId identifier for this transport\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n     *                                         session\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n     */\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n        this.connId = connId;\n        this.keepaliveTimer = null;\n        this.frames = null;\n        this.totalFrames = 0;\n        this.bytesSent = 0;\n        this.bytesReceived = 0;\n        this.log_ = (0, _util.logWrapper)(this.connId);\n        this.stats_ = _StatsManager.StatsManager.getCollection(repoInfo);\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    }\n    /**\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n     *                                         session\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n     * @return {string} connection url\n     * @private\n     */\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n        var urlParams = {};\n        urlParams[_Constants.VERSION_PARAM] = _Constants.PROTOCOL_VERSION;\n        if (!(0, _environment.isNodeSdk)() && typeof location !== 'undefined' && location.href && location.href.indexOf(_Constants.FORGE_DOMAIN) !== -1) {\n            urlParams[_Constants.REFERER_PARAM] = _Constants.FORGE_REF;\n        }\n        if (transportSessionId) {\n            urlParams[_Constants.TRANSPORT_SESSION_PARAM] = transportSessionId;\n        }\n        if (lastSessionId) {\n            urlParams[_Constants.LAST_SESSION_PARAM] = lastSessionId;\n        }\n        return repoInfo.connectionURL(_Constants.WEBSOCKET, urlParams);\n    };\n    /**\n     *\n     * @param onMessage Callback when messages arrive\n     * @param onDisconnect Callback with connection lost.\n     */\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n        var _this = this;\n        this.onDisconnect = onDisconnect;\n        this.onMessage = onMessage;\n        this.log_('Websocket connecting to ' + this.connURL);\n        this.everConnected_ = false;\n        // Assume failure until proven otherwise.\n        _storage.PersistentStorage.set('previous_websocket_failure', true);\n        try {\n            if ((0, _environment.isNodeSdk)()) {\n                var device = _constants.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n                var options = {\n                    headers: {\n                        'User-Agent': \"Firebase/\" + _Constants.PROTOCOL_VERSION + \"/\" + _app2.default.SDK_VERSION + \"/\" + process.platform + \"/\" + device\n                    }\n                };\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n                var env = process['env'];\n                var proxy = this.connURL.indexOf('wss://') == 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n                if (proxy) {\n                    options['proxy'] = { origin: proxy };\n                }\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\n            } else {\n                this.mySock = new WebSocketImpl(this.connURL);\n            }\n        } catch (e) {\n            this.log_('Error instantiating WebSocket.');\n            var error = e.message || e.data;\n            if (error) {\n                this.log_(error);\n            }\n            this.onClosed_();\n            return;\n        }\n        this.mySock.onopen = function () {\n            _this.log_('Websocket connected.');\n            _this.everConnected_ = true;\n        };\n        this.mySock.onclose = function () {\n            _this.log_('Websocket connection was disconnected.');\n            _this.mySock = null;\n            _this.onClosed_();\n        };\n        this.mySock.onmessage = function (m) {\n            _this.handleIncomingFrame(m);\n        };\n        this.mySock.onerror = function (e) {\n            _this.log_('WebSocket error.  Closing connection.');\n            var error = e.message || e.data;\n            if (error) {\n                _this.log_(error);\n            }\n            _this.onClosed_();\n        };\n    };\n    /**\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n     */\n    WebSocketConnection.prototype.start = function () {};\n    WebSocketConnection.forceDisallow = function () {\n        WebSocketConnection.forceDisallow_ = true;\n    };\n    WebSocketConnection.isAvailable = function () {\n        var isOldAndroid = false;\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n                    isOldAndroid = true;\n                }\n            }\n        }\n        return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n    };\n    /**\n     * Returns true if we previously failed to connect with this transport.\n     * @return {boolean}\n     */\n    WebSocketConnection.previouslyFailed = function () {\n        // If our persistent storage is actually only in-memory storage,\n        // we default to assuming that it previously failed to be safe.\n        return _storage.PersistentStorage.isInMemoryStorage || _storage.PersistentStorage.get('previous_websocket_failure') === true;\n    };\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\n        _storage.PersistentStorage.remove('previous_websocket_failure');\n    };\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\n        this.frames.push(data);\n        if (this.frames.length == this.totalFrames) {\n            var fullMess = this.frames.join('');\n            this.frames = null;\n            var jsonMess = (0, _json.jsonEval)(fullMess);\n            //handle the message\n            this.onMessage(jsonMess);\n        }\n    };\n    /**\n     * @param {number} frameCount The number of frames we are expecting from the server\n     * @private\n     */\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n        this.totalFrames = frameCount;\n        this.frames = [];\n    };\n    /**\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n     * @param {!String} data\n     * @return {?String} Any remaining data to be process, or null if there is none\n     * @private\n     */\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n        (0, _assert.assert)(this.frames === null, 'We already have a frame buffer');\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n        if (data.length <= 6) {\n            var frameCount = Number(data);\n            if (!isNaN(frameCount)) {\n                this.handleNewFrameCount_(frameCount);\n                return null;\n            }\n        }\n        this.handleNewFrameCount_(1);\n        return data;\n    };\n    /**\n     * Process a websocket frame that has arrived from the server.\n     * @param mess The frame data\n     */\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n        if (this.mySock === null) return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n        var data = mess['data'];\n        this.bytesReceived += data.length;\n        this.stats_.incrementCounter('bytes_received', data.length);\n        this.resetKeepAlive();\n        if (this.frames !== null) {\n            // we're buffering\n            this.appendFrame_(data);\n        } else {\n            // try to parse out a frame count, otherwise, assume 1 and process it\n            var remainingData = this.extractFrameCount_(data);\n            if (remainingData !== null) {\n                this.appendFrame_(remainingData);\n            }\n        }\n    };\n    /**\n     * Send a message to the server\n     * @param {Object} data The JSON object to transmit\n     */\n    WebSocketConnection.prototype.send = function (data) {\n        this.resetKeepAlive();\n        var dataStr = (0, _json.stringify)(data);\n        this.bytesSent += dataStr.length;\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\n        //up into multiple pieces if it doesn't fit in one request.\n        var dataSegs = (0, _util.splitStringBySize)(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n        //Send the length header\n        if (dataSegs.length > 1) {\n            this.sendString_(String(dataSegs.length));\n        }\n        //Send the actual data in segments.\n        for (var i = 0; i < dataSegs.length; i++) {\n            this.sendString_(dataSegs[i]);\n        }\n    };\n    WebSocketConnection.prototype.shutdown_ = function () {\n        this.isClosed_ = true;\n        if (this.keepaliveTimer) {\n            clearInterval(this.keepaliveTimer);\n            this.keepaliveTimer = null;\n        }\n        if (this.mySock) {\n            this.mySock.close();\n            this.mySock = null;\n        }\n    };\n    WebSocketConnection.prototype.onClosed_ = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is closing itself');\n            this.shutdown_();\n            // since this is an internal close, trigger the close listener\n            if (this.onDisconnect) {\n                this.onDisconnect(this.everConnected_);\n                this.onDisconnect = null;\n            }\n        }\n    };\n    /**\n     * External-facing close handler.\n     * Close the websocket and kill the connection.\n     */\n    WebSocketConnection.prototype.close = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is being closed');\n            this.shutdown_();\n        }\n    };\n    /**\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n     * the last activity.\n     */\n    WebSocketConnection.prototype.resetKeepAlive = function () {\n        var _this = this;\n        clearInterval(this.keepaliveTimer);\n        this.keepaliveTimer = setInterval(function () {\n            //If there has been no websocket activity for a while, send a no-op\n            if (_this.mySock) {\n                _this.sendString_('0');\n            }\n            _this.resetKeepAlive();\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n    };\n    /**\n     * Send a string over the websocket.\n     *\n     * @param {string} str String to send.\n     * @private\n     */\n    WebSocketConnection.prototype.sendString_ = function (str) {\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n        // calls for some unknown reason.  We treat these as an error and disconnect.\n        // See https://app.asana.com/0/58926111402292/68021340250410\n        try {\n            this.mySock.send(str);\n        } catch (e) {\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n            setTimeout(this.onClosed_.bind(this), 0);\n        }\n    };\n    /**\n     * Number of response before we consider the connection \"healthy.\"\n     * @type {number}\n     */\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\n    /**\n     * Time to wait for the connection te become healthy before giving up.\n     * @type {number}\n     */\n    WebSocketConnection.healthyTimeout = 30000;\n    return WebSocketConnection;\n}();\nexports.WebSocketConnection = WebSocketConnection;\n\n\n}).call(this,require('_process'))\n\n},{\"../../app\":1,\"../../utils/assert\":135,\"../../utils/constants\":136,\"../../utils/environment\":139,\"../../utils/json\":142,\"../core/stats/StatsManager\":49,\"../core/storage/storage\":53,\"../core/util/util\":65,\"./Constants\":84,\"_process\":150}],87:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PacketReceiver = undefined;\n\nvar _util = require(\"../../core/util/util\");\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n * @constructor\n */\nvar PacketReceiver = function () {\n    /**\n     * @param onMessage_\n     */\n    function PacketReceiver(onMessage_) {\n        this.onMessage_ = onMessage_;\n        this.pendingResponses = [];\n        this.currentResponseNum = 0;\n        this.closeAfterResponse = -1;\n        this.onClose = null;\n    }\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n        this.closeAfterResponse = responseNum;\n        this.onClose = callback;\n        if (this.closeAfterResponse < this.currentResponseNum) {\n            this.onClose();\n            this.onClose = null;\n        }\n    };\n    /**\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n     * browsers will respond in the same order as the requests we sent\n     * @param {number} requestNum\n     * @param {Array} data\n     */\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n        var _this = this;\n        this.pendingResponses[requestNum] = data;\n        var _loop_1 = function _loop_1() {\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n            delete this_1.pendingResponses[this_1.currentResponseNum];\n            var _loop_2 = function _loop_2(i) {\n                if (toProcess[i]) {\n                    (0, _util.exceptionGuard)(function () {\n                        _this.onMessage_(toProcess[i]);\n                    });\n                }\n            };\n            for (var i = 0; i < toProcess.length; ++i) {\n                _loop_2(i);\n            }\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n                if (this_1.onClose) {\n                    this_1.onClose();\n                    this_1.onClose = null;\n                }\n                return \"break\";\n            }\n            this_1.currentResponseNum++;\n        };\n        var this_1 = this;\n        while (this.pendingResponses[this.currentResponseNum]) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\") break;\n        }\n    };\n    return PacketReceiver;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.PacketReceiver = PacketReceiver;\n\n\n},{\"../../core/util/util\":65}],88:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _app = require('./app');\n\nvar _app2 = _interopRequireDefault(_app);\n\nrequire('./auth');\n\nrequire('./database');\n\nrequire('./storage');\n\nrequire('./messaging');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Export the single instance of firebase\nexports.default = _app2.default; /**\n                                 * Copyright 2017 Google Inc.\n                                 *\n                                 * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                 * you may not use this file except in compliance with the License.\n                                 * You may obtain a copy of the License at\n                                 *\n                                 *   http://www.apache.org/licenses/LICENSE-2.0\n                                 *\n                                 * Unless required by applicable law or agreed to in writing, software\n                                 * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                 * See the License for the specific language governing permissions and\n                                 * limitations under the License.\n                                 */\n\nmodule.exports = exports['default'];\n\n\n},{\"./app\":1,\"./auth\":5,\"./database\":6,\"./messaging\":89,\"./storage\":101}],89:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.registerMessaging = registerMessaging;\n\nvar _windowController = require('./messaging/controllers/window-controller');\n\nvar _windowController2 = _interopRequireDefault(_windowController);\n\nvar _swController = require('./messaging/controllers/sw-controller');\n\nvar _swController2 = _interopRequireDefault(_swController);\n\nvar _app = require('./app');\n\nvar _app2 = _interopRequireDefault(_app);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction registerMessaging(instance) {\n    var messagingName = 'messaging';\n    var factoryMethod = function factoryMethod(app) {\n        if (self && 'ServiceWorkerGlobalScope' in self) {\n            return new _swController2.default(app);\n        }\n        // Assume we are in the window context.\n        return new _windowController2.default(app);\n    };\n    var namespaceExports = {\n        // no-inline\n        Messaging: _windowController2.default\n    };\n    instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\n}\nregisterMessaging(_app2.default);\n\n\n},{\"./app\":1,\"./messaging/controllers/sw-controller\":91,\"./messaging/controllers/window-controller\":92}],90:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _errors = require('../../app/errors');\n\nvar _errors2 = require('../models/errors');\n\nvar _errors3 = _interopRequireDefault(_errors2);\n\nvar _tokenManager = require('../models/token-manager');\n\nvar _tokenManager2 = _interopRequireDefault(_tokenManager);\n\nvar _notificationPermission = require('../models/notification-permission');\n\nvar _notificationPermission2 = _interopRequireDefault(_notificationPermission);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SENDER_ID_OPTION_NAME = 'messagingSenderId';\nvar ControllerInterface = function () {\n    /**\n     * An interface of the Messaging Service API\n     * @param {!firebase.app.App} app\n     */\n    function ControllerInterface(app) {\n        var _this = this;\n        this.errorFactory_ = new _errors.ErrorFactory('messaging', 'Messaging', _errors3.default.map);\n        if (!app.options[SENDER_ID_OPTION_NAME] || typeof app.options[SENDER_ID_OPTION_NAME] !== 'string') {\n            throw this.errorFactory_.create(_errors3.default.codes.BAD_SENDER_ID);\n        }\n        this.messagingSenderId_ = app.options[SENDER_ID_OPTION_NAME];\n        this.tokenManager_ = new _tokenManager2.default();\n        this.app = app;\n        this.INTERNAL = {};\n        this.INTERNAL.delete = function () {\n            return _this.delete;\n        };\n    }\n    /**\n     * @export\n     * @return {Promise<string> | Promise<null>} Returns a promise that\n     * resolves to an FCM token.\n     */\n    ControllerInterface.prototype.getToken = function () {\n        var _this = this;\n        // Check with permissions\n        var currentPermission = this.getNotificationPermission_();\n        if (currentPermission !== _notificationPermission2.default.granted) {\n            if (currentPermission === _notificationPermission2.default.denied) {\n                return Promise.reject(this.errorFactory_.create(_errors3.default.codes.NOTIFICATIONS_BLOCKED));\n            }\n            // We must wait for permission to be granted\n            return Promise.resolve(null);\n        }\n        return this.getSWRegistration_().then(function (registration) {\n            return _this.tokenManager_.getSavedToken(_this.messagingSenderId_, registration).then(function (token) {\n                if (token) {\n                    return token;\n                }\n                return _this.tokenManager_.createToken(_this.messagingSenderId_, registration);\n            });\n        });\n    };\n    /**\n     * This method deletes tokens that the token manager looks after and then\n     * unregisters the push subscription if it exists.\n     * @export\n     * @param {string} token\n     * @return {Promise<void>}\n     */\n    ControllerInterface.prototype.deleteToken = function (token) {\n        var _this = this;\n        return this.tokenManager_.deleteToken(token).then(function () {\n            return _this.getSWRegistration_().then(function (registration) {\n                if (registration) {\n                    return registration.pushManager.getSubscription();\n                }\n            }).then(function (subscription) {\n                if (subscription) {\n                    return subscription.unsubscribe();\n                }\n            });\n        });\n    };\n    ControllerInterface.prototype.getSWRegistration_ = function () {\n        throw this.errorFactory_.create(_errors3.default.codes.SHOULD_BE_INHERITED);\n    };\n    //\n    // The following methods should only be available in the window.\n    //\n    ControllerInterface.prototype.requestPermission = function () {\n        throw this.errorFactory_.create(_errors3.default.codes.AVAILABLE_IN_WINDOW);\n    };\n    /**\n     * @export\n     * @param {!ServiceWorkerRegistration} registration\n     */\n    ControllerInterface.prototype.useServiceWorker = function (registration) {\n        throw this.errorFactory_.create(_errors3.default.codes.AVAILABLE_IN_WINDOW);\n    };\n    /**\n     * @export\n     * @param {!firebase.Observer|function(*)} nextOrObserver\n     * @param {function(!Error)=} optError\n     * @param {function()=} optCompleted\n     * @return {!function()}\n     */\n    ControllerInterface.prototype.onMessage = function (nextOrObserver, optError, optCompleted) {\n        throw this.errorFactory_.create(_errors3.default.codes.AVAILABLE_IN_WINDOW);\n    };\n    /**\n     * @export\n     * @param {!firebase.Observer|function()} nextOrObserver An observer object\n     * or a function triggered on token refresh.\n     * @param {function(!Error)=} optError Optional A function\n     * triggered on token refresh error.\n     * @param {function()=} optCompleted Optional function triggered when the\n     * observer is removed.\n     * @return {!function()} The unsubscribe function for the observer.\n     */\n    ControllerInterface.prototype.onTokenRefresh = function (nextOrObserver, optError, optCompleted) {\n        throw this.errorFactory_.create(_errors3.default.codes.AVAILABLE_IN_WINDOW);\n    };\n    //\n    // The following methods are used by the service worker only.\n    //\n    /**\n     * @export\n     * @param {function(Object)} callback\n     */\n    ControllerInterface.prototype.setBackgroundMessageHandler = function (callback) {\n        throw this.errorFactory_.create(_errors3.default.codes.AVAILABLE_IN_SW);\n    };\n    //\n    // The following methods are used by the service themselves and not exposed\n    // publicly or not expected to be used by developers.\n    //\n    /**\n     * This method is required to adhere to the Firebase interface.\n     * It closes any currently open indexdb database connections.\n     */\n    ControllerInterface.prototype.delete = function () {\n        this.tokenManager_.closeDatabase();\n    };\n    /**\n     * Returns the current Notification Permission state.\n     * @private\n     * @return {string} The currenct permission state.\n     */\n    ControllerInterface.prototype.getNotificationPermission_ = function () {\n        return Notification.permission;\n    };\n    /**\n     * @protected\n     * @returns {TokenManager}\n     */\n    ControllerInterface.prototype.getTokenManager = function () {\n        return this.tokenManager_;\n    };\n    return ControllerInterface;\n}();\nexports.default = ControllerInterface;\nmodule.exports = exports['default'];\n\n\n},{\"../../app/errors\":2,\"../models/errors\":95,\"../models/notification-permission\":97,\"../models/token-manager\":98}],91:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _controllerInterface = require('./controller-interface');\n\nvar _controllerInterface2 = _interopRequireDefault(_controllerInterface);\n\nvar _errors = require('../models/errors');\n\nvar _errors2 = _interopRequireDefault(_errors);\n\nvar _workerPageMessage = require('../models/worker-page-message');\n\nvar _workerPageMessage2 = _interopRequireDefault(_workerPageMessage);\n\nvar _fcmDetails = require('../models/fcm-details');\n\nvar _fcmDetails2 = _interopRequireDefault(_fcmDetails);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\nvar FCM_MSG = 'FCM_MSG';\nvar SWController = function (_super) {\n    __extends(SWController, _super);\n    function SWController(app) {\n        var _this = _super.call(this, app) || this;\n        self.addEventListener('push', function (e) {\n            return _this.onPush_(e);\n        }, false);\n        self.addEventListener('pushsubscriptionchange', function (e) {\n            return _this.onSubChange_(e);\n        }, false);\n        self.addEventListener('notificationclick', function (e) {\n            return _this.onNotificationClick_(e);\n        }, false);\n        /**\n         * @private\n         * @type {function(Object)|null}\n         */\n        _this.bgMessageHandler_ = null;\n        return _this;\n    }\n    /**\n    * A handler for push events that shows notifications based on the content of\n    * the payload.\n    *\n    * The payload must be a JSON-encoded Object with a `notification` key. The\n    * value of the `notification` property will be used as the NotificationOptions\n    * object passed to showNotification. Additionally, the `title` property of the\n    * notification object will be used as the title.\n    *\n    * If there is no notification data in the payload then no notification will be\n    * shown.\n    * @private\n    */\n    SWController.prototype.onPush_ = function (event) {\n        var _this = this;\n        var msgPayload;\n        try {\n            msgPayload = event.data.json();\n        } catch (err) {\n            // Not JSON so not an FCM message\n            return;\n        }\n        var handleMsgPromise = this.hasVisibleClients_().then(function (hasVisibleClients) {\n            if (hasVisibleClients) {\n                // Do not need to show a notification.\n                if (msgPayload.notification || _this.bgMessageHandler_) {\n                    // Send to page\n                    return _this.sendMessageToWindowClients_(msgPayload);\n                }\n                return;\n            }\n            var notificationDetails = _this.getNotificationData_(msgPayload);\n            if (notificationDetails) {\n                var notificationTitle = notificationDetails.title || '';\n                return self.registration.showNotification(notificationTitle, notificationDetails);\n            } else if (_this.bgMessageHandler_) {\n                return _this.bgMessageHandler_(msgPayload);\n            }\n        });\n        event.waitUntil(handleMsgPromise);\n    };\n    /**\n    * @private\n    */\n    SWController.prototype.onSubChange_ = function (event) {\n        var _this = this;\n        var promiseChain = this.getToken().then(function (token) {\n            if (!token) {\n                // We can't resubscribe if we don't have an FCM token for this scope.\n                throw _this.errorFactory_.create(_errors2.default.codes.NO_FCM_TOKEN_FOR_RESUBSCRIBE);\n            }\n            var tokenDetails = null;\n            var tokenManager = _this.getTokenManager();\n            return tokenManager.getTokenDetailsFromToken(token).then(function (details) {\n                tokenDetails = details;\n                if (!tokenDetails) {\n                    throw _this.errorFactory_.create(_errors2.default.codes.INVALID_SAVED_TOKEN);\n                }\n                // Attempt to get a new subscription\n                return self.registration.pushManager.subscribe(_fcmDetails2.default.SUBSCRIPTION_OPTIONS);\n            }).then(function (newSubscription) {\n                // Send new subscription to FCM.\n                return tokenManager.subscribeToFCM(tokenDetails.fcmSenderId, newSubscription, tokenDetails.fcmPushSet);\n            }).catch(function (err) {\n                // The best thing we can do is log this to the terminal so\n                // developers might notice the error.\n                return tokenManager.deleteToken(tokenDetails.fcmToken).then(function () {\n                    throw _this.errorFactory_.create(_errors2.default.codes.UNABLE_TO_RESUBSCRIBE, {\n                        message: err\n                    });\n                });\n            });\n        });\n        event.waitUntil(promiseChain);\n    };\n    /**\n    * @private\n    */\n    SWController.prototype.onNotificationClick_ = function (event) {\n        var _this = this;\n        if (!(event.notification && event.notification.data && event.notification.data[FCM_MSG])) {\n            // Not an FCM notification, do nothing.\n            return;\n        }\n        // Prevent other listeners from receiving the event\n        event.stopImmediatePropagation();\n        event.notification.close();\n        var msgPayload = event.notification.data[FCM_MSG];\n        var clickAction = msgPayload['notification']['click_action'];\n        if (!clickAction) {\n            // Nothing to do.\n            return;\n        }\n        var promiseChain = this.getWindowClient_(clickAction).then(function (windowClient) {\n            if (!windowClient) {\n                // Unable to find window client so need to open one.\n                return self.clients.openWindow(clickAction);\n            }\n            return windowClient;\n        }).then(function (windowClient) {\n            if (!windowClient) {\n                // Window Client will not be returned if it's for a third party origin.\n                return;\n            }\n            // Delete notification data from payload before sending to the page.\n            var notificationData = msgPayload['notification'];\n            delete msgPayload['notification'];\n            var internalMsg = _workerPageMessage2.default.createNewMsg(_workerPageMessage2.default.TYPES_OF_MSG.NOTIFICATION_CLICKED, msgPayload);\n            // Attempt to send a message to the client to handle the data\n            // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\n            return _this.attemptToMessageClient_(windowClient, internalMsg);\n        });\n        event.waitUntil(promiseChain);\n    };\n    /**\n     * @private\n     * @param {Object} msgPayload\n     * @return {NotificationOptions|undefined}\n     */\n    SWController.prototype.getNotificationData_ = function (msgPayload) {\n        if (!msgPayload) {\n            return;\n        }\n        if (_typeof(msgPayload.notification) !== 'object') {\n            return;\n        }\n        var notificationInformation = Object.assign({}, msgPayload.notification);\n        // Put the message payload under FCM_MSG name so we can identify the\n        // notification as being an FCM notification vs a notification from\n        // somewhere else (i.e. normal web push or developer generated\n        // notification).\n        notificationInformation['data'] = (_a = {}, _a[FCM_MSG] = msgPayload, _a);\n        return notificationInformation;\n        var _a;\n    };\n    /**\n     * Calling setBackgroundMessageHandler will opt in to some specific\n     * behaviours.\n     * 1.) If a notification doesn't need to be shown due to a window already\n     * being visible, then push messages will be sent to the page.\n     * 2.) If a notification needs to be shown, and the message contains no\n     * notification data this method will be called\n     * and the promise it returns will be passed to event.waitUntil.\n     * If you do not set this callback then all push messages will let and the\n     * developer can handle them in a their own 'push' event callback\n     * @export\n     * @param {function(Object)} callback The callback to be called when a push\n     * message is received and a notification must be shown. The callback will\n     * be given the data from the push message.\n     */\n    SWController.prototype.setBackgroundMessageHandler = function (callback) {\n        if (callback && typeof callback !== 'function') {\n            throw this.errorFactory_.create(_errors2.default.codes.BG_HANDLER_FUNCTION_EXPECTED);\n        }\n        this.bgMessageHandler_ = callback;\n    };\n    /**\n     * @private\n     * @param {string} url The URL to look for when focusing a client.\n     * @return {Object} Returns an existing window client or a newly opened\n     * WindowClient.\n     */\n    SWController.prototype.getWindowClient_ = function (url) {\n        // Use URL to normalize the URL when comparing to windowClients.\n        // This at least handles whether to include trailing slashes or not\n        var parsedURL = new URL(url).href;\n        return self.clients.matchAll({\n            type: 'window',\n            includeUncontrolled: true\n        }).then(function (clientList) {\n            var suitableClient = null;\n            for (var i = 0; i < clientList.length; i++) {\n                var parsedClientUrl = new URL(clientList[i].url).href;\n                if (parsedClientUrl === parsedURL) {\n                    suitableClient = clientList[i];\n                    break;\n                }\n            }\n            if (suitableClient) {\n                suitableClient.focus();\n                return suitableClient;\n            }\n        });\n    };\n    /**\n     * This message will attempt to send the message to a window client.\n     * @private\n     * @param {Object} client The WindowClient to send the message to.\n     * @param {Object} message The message to send to the client.\n     * @returns {Promise} Returns a promise that resolves after sending the\n     * message. This does not guarantee that the message was successfully\n     * received.\n     */\n    SWController.prototype.attemptToMessageClient_ = function (client, message) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (!client) {\n                return reject(_this.errorFactory_.create(_errors2.default.codes.NO_WINDOW_CLIENT_TO_MSG));\n            }\n            client.postMessage(message);\n            resolve();\n        });\n    };\n    /**\n     * @private\n     * @returns {Promise<boolean>} If there is currently a visible WindowClient,\n     * this method will resolve to true, otherwise false.\n     */\n    SWController.prototype.hasVisibleClients_ = function () {\n        return self.clients.matchAll({\n            type: 'window',\n            includeUncontrolled: true\n        }).then(function (clientList) {\n            return clientList.some(function (client) {\n                return client.visibilityState === 'visible';\n            });\n        });\n    };\n    /**\n     * @private\n     * @param {Object} msgPayload The data from the push event that should be sent\n     * to all available pages.\n     * @returns {Promise} Returns a promise that resolves once the message\n     * has been sent to all WindowClients.\n     */\n    SWController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\n        var _this = this;\n        return self.clients.matchAll({\n            type: 'window',\n            includeUncontrolled: true\n        }).then(function (clientList) {\n            var internalMsg = _workerPageMessage2.default.createNewMsg(_workerPageMessage2.default.TYPES_OF_MSG.PUSH_MSG_RECEIVED, msgPayload);\n            return Promise.all(clientList.map(function (client) {\n                return _this.attemptToMessageClient_(client, internalMsg);\n            }));\n        });\n    };\n    /**\n     * This will register the default service worker and return the registration.\n     * @private\n     * @return {Promise<!ServiceWorkerRegistration>} The service worker\n     * registration to be used for the push service.\n     */\n    SWController.prototype.getSWRegistration_ = function () {\n        return Promise.resolve(self.registration);\n    };\n    return SWController;\n}(_controllerInterface2.default);\nexports.default = SWController;\nmodule.exports = exports['default'];\n\n\n},{\"../models/errors\":95,\"../models/fcm-details\":96,\"../models/worker-page-message\":99,\"./controller-interface\":90}],92:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _controllerInterface = require('./controller-interface');\n\nvar _controllerInterface2 = _interopRequireDefault(_controllerInterface);\n\nvar _errors = require('../models/errors');\n\nvar _errors2 = _interopRequireDefault(_errors);\n\nvar _workerPageMessage = require('../models/worker-page-message');\n\nvar _workerPageMessage2 = _interopRequireDefault(_workerPageMessage);\n\nvar _defaultSw = require('../models/default-sw');\n\nvar _defaultSw2 = _interopRequireDefault(_defaultSw);\n\nvar _notificationPermission = require('../models/notification-permission');\n\nvar _notificationPermission2 = _interopRequireDefault(_notificationPermission);\n\nvar _subscribe = require('../../app/subscribe');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\nvar WindowController = function (_super) {\n    __extends(WindowController, _super);\n    /**\n     * A service that provides a MessagingService instance.\n     * @param {!firebase.app.App} app\n     */\n    function WindowController(app) {\n        var _this = _super.call(this, app) || this;\n        /**\n         * @private\n         * @type {ServiceWorkerRegistration}\n         */\n        _this.registrationToUse_;\n        /**\n         * @private\n         * @type {Promise}\n         */\n        _this.manifestCheckPromise_;\n        /**\n         * @private\n         * @type {firebase.Observer}\n         */\n        _this.messageObserver_ = null;\n        /**\n         * @private {!firebase.Subscribe} The subscribe function to the onMessage\n         * observer.\n         */\n        _this.onMessage_ = (0, _subscribe.createSubscribe)(function (observer) {\n            _this.messageObserver_ = observer;\n        });\n        /**\n         * @private\n         * @type {firebase.Observer}\n         */\n        _this.tokenRefreshObserver_ = null;\n        _this.onTokenRefresh_ = (0, _subscribe.createSubscribe)(function (observer) {\n            _this.tokenRefreshObserver_ = observer;\n        });\n        _this.setupSWMessageListener_();\n        return _this;\n    }\n    /**\n     * This method returns an FCM token if it can be generated.\n     * The return promise will reject if the browser doesn't support\n     * FCM, if permission is denied for notifications or it's not\n     * possible to generate a token.\n     * @export\n     * @return {Promise<string> | Promise<null>} Returns a promise the\n     * resolves to an FCM token or null if permission isn't granted.\n     */\n    WindowController.prototype.getToken = function () {\n        var _this = this;\n        // Check that the required API's are available\n        if (!this.isSupported_()) {\n            return Promise.reject(this.errorFactory_.create(_errors2.default.codes.UNSUPPORTED_BROWSER));\n        }\n        return this.manifestCheck_().then(function () {\n            return _super.prototype.getToken.call(_this);\n        });\n    };\n    /**\n     * The method checks that a manifest is defined and has the correct GCM\n     * sender ID.\n     * @private\n     * @return {Promise} Returns a promise that resolves if the manifest matches\n     * our required sender ID\n     */\n    WindowController.prototype.manifestCheck_ = function () {\n        var _this = this;\n        if (this.manifestCheckPromise_) {\n            return this.manifestCheckPromise_;\n        }\n        var manifestTag = document.querySelector('link[rel=\"manifest\"]');\n        if (!manifestTag) {\n            this.manifestCheckPromise_ = Promise.resolve();\n        } else {\n            this.manifestCheckPromise_ = fetch(manifestTag.href).then(function (response) {\n                return response.json();\n            }).catch(function () {\n                // If the download or parsing fails allow check.\n                // We only want to error if we KNOW that the gcm_sender_id is incorrect.\n                return Promise.resolve();\n            }).then(function (manifestContent) {\n                if (!manifestContent) {\n                    return;\n                }\n                if (!manifestContent['gcm_sender_id']) {\n                    return;\n                }\n                if (manifestContent['gcm_sender_id'] !== '103953800507') {\n                    throw _this.errorFactory_.create(_errors2.default.codes.INCORRECT_GCM_SENDER_ID);\n                }\n            });\n        }\n        return this.manifestCheckPromise_;\n    };\n    /**\n     * Request permission if it is not currently granted\n     * @export\n     * @returns {Promise} Resolves if the permission was granted, otherwise\n     * rejects\n     */\n    WindowController.prototype.requestPermission = function () {\n        var _this = this;\n        if (Notification.permission === _notificationPermission2.default.granted) {\n            return Promise.resolve();\n        }\n        return new Promise(function (resolve, reject) {\n            var managePermissionResult = function managePermissionResult(result) {\n                if (result === _notificationPermission2.default.granted) {\n                    return resolve();\n                } else if (result === _notificationPermission2.default.denied) {\n                    return reject(_this.errorFactory_.create(_errors2.default.codes.PERMISSION_BLOCKED));\n                } else {\n                    return reject(_this.errorFactory_.create(_errors2.default.codes.PERMISSION_DEFAULT));\n                }\n            };\n            // The Notification.requestPermission API was changed to\n            // return a promise so now have to handle both in case\n            // browsers stop support callbacks for promised version\n            var permissionPromise = Notification.requestPermission(function (result) {\n                if (permissionPromise) {\n                    // Let the promise manage this\n                    return;\n                }\n                managePermissionResult(result);\n            });\n            if (permissionPromise) {\n                // Prefer the promise version as it's the future API.\n                permissionPromise.then(managePermissionResult);\n            }\n        });\n    };\n    /**\n     * This method allows a developer to override the default service worker and\n     * instead use a custom service worker.\n     * @export\n     * @param {!ServiceWorkerRegistration} registration The service worker\n     * registration that should be used to receive the push messages.\n     */\n    WindowController.prototype.useServiceWorker = function (registration) {\n        if (!(registration instanceof ServiceWorkerRegistration)) {\n            throw this.errorFactory_.create(_errors2.default.codes.SW_REGISTRATION_EXPECTED);\n        }\n        if (typeof this.registrationToUse_ !== 'undefined') {\n            throw this.errorFactory_.create(_errors2.default.codes.USE_SW_BEFORE_GET_TOKEN);\n        }\n        this.registrationToUse_ = registration;\n    };\n    /**\n     * @export\n     * @param {!firebase.Observer|function(*)} nextOrObserver An observer object\n     * or a function triggered on message.\n     * @param {function(!Error)=} optError Optional A function triggered on\n     * message error.\n     * @param {function()=} optCompleted Optional function triggered when the\n     * observer is removed.\n     * @return {!function()} The unsubscribe function for the observer.\n     */\n    WindowController.prototype.onMessage = function (nextOrObserver, optError, optCompleted) {\n        return this.onMessage_(nextOrObserver, optError, optCompleted);\n    };\n    /**\n     * @export\n     * @param {!firebase.Observer|function()} nextOrObserver An observer object\n     * or a function triggered on token refresh.\n     * @param {function(!Error)=} optError Optional A function\n     * triggered on token refresh error.\n     * @param {function()=} optCompleted Optional function triggered when the\n     * observer is removed.\n     * @return {!function()} The unsubscribe function for the observer.\n     */\n    WindowController.prototype.onTokenRefresh = function (nextOrObserver, optError, optCompleted) {\n        return this.onTokenRefresh_(nextOrObserver, optError, optCompleted);\n    };\n    /**\n     * Given a registration, wait for the service worker it relates to\n     * become activer\n     * @private\n     * @param  {ServiceWorkerRegistration} registration Registration to wait\n     * for service worker to become active\n     * @return {Promise<!ServiceWorkerRegistration>} Wait for service worker\n     * registration to become active\n     */\n    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\n        var _this = this;\n        var serviceWorker = registration.installing || registration.waiting || registration.active;\n        return new Promise(function (resolve, reject) {\n            if (!serviceWorker) {\n                // This is a rare scenario but has occured in firefox\n                reject(_this.errorFactory_.create(_errors2.default.codes.NO_SW_IN_REG));\n                return;\n            }\n            // Because the Promise function is called on next tick there is a\n            // small chance that the worker became active or redundant already.\n            if (serviceWorker.state === 'activated') {\n                resolve(registration);\n                return;\n            }\n            if (serviceWorker.state === 'redundant') {\n                reject(_this.errorFactory_.create(_errors2.default.codes.SW_REG_REDUNDANT));\n                return;\n            }\n            var stateChangeListener = function stateChangeListener() {\n                if (serviceWorker.state === 'activated') {\n                    resolve(registration);\n                } else if (serviceWorker.state === 'redundant') {\n                    reject(_this.errorFactory_.create(_errors2.default.codes.SW_REG_REDUNDANT));\n                } else {\n                    // Return early and wait to next state change\n                    return;\n                }\n                serviceWorker.removeEventListener('statechange', stateChangeListener);\n            };\n            serviceWorker.addEventListener('statechange', stateChangeListener);\n        });\n    };\n    /**\n     * This will regiater the default service worker and return the registration\n     * @private\n     * @return {Promise<!ServiceWorkerRegistration>} The service worker\n     * registration to be used for the push service.\n     */\n    WindowController.prototype.getSWRegistration_ = function () {\n        var _this = this;\n        if (this.registrationToUse_) {\n            return this.waitForRegistrationToActivate_(this.registrationToUse_);\n        }\n        // Make the registration null so we know useServiceWorker will not\n        // use a new service worker as registrationToUse_ is no longer undefined\n        this.registrationToUse_ = null;\n        return navigator.serviceWorker.register(_defaultSw2.default.path, {\n            scope: _defaultSw2.default.scope\n        }).catch(function (err) {\n            throw _this.errorFactory_.create(_errors2.default.codes.FAILED_DEFAULT_REGISTRATION, {\n                browserErrorMessage: err.message\n            });\n        }).then(function (registration) {\n            return _this.waitForRegistrationToActivate_(registration).then(function () {\n                _this.registrationToUse_ = registration;\n                // We update after activation due to an issue with Firefox v49 where\n                // a race condition occassionally causes the service work to not\n                // install\n                registration.update();\n                return registration;\n            });\n        });\n    };\n    /**\n     * This method will set up a message listener to handle\n     * events from the service worker that should trigger\n     * events in the page.\n     *\n     * @private\n     */\n    WindowController.prototype.setupSWMessageListener_ = function () {\n        var _this = this;\n        if (!('serviceWorker' in navigator)) {\n            return;\n        }\n        navigator.serviceWorker.addEventListener('message', function (event) {\n            if (!event.data || !event.data[_workerPageMessage2.default.PARAMS.TYPE_OF_MSG]) {\n                // Not a message from FCM\n                return;\n            }\n            var workerPageMessage = event.data;\n            switch (workerPageMessage[_workerPageMessage2.default.PARAMS.TYPE_OF_MSG]) {\n                case _workerPageMessage2.default.TYPES_OF_MSG.PUSH_MSG_RECEIVED:\n                case _workerPageMessage2.default.TYPES_OF_MSG.NOTIFICATION_CLICKED:\n                    var pushMessage = workerPageMessage[_workerPageMessage2.default.PARAMS.DATA];\n                    _this.messageObserver_.next(pushMessage);\n                    break;\n                default:\n                    // Noop.\n                    break;\n            }\n        }, false);\n    };\n    /**\n     * Checks to see if the required API's are valid or not.\n     * @private\n     * @return {boolean} Returns true if the desired APIs are available.\n     */\n    WindowController.prototype.isSupported_ = function () {\n        return 'serviceWorker' in navigator && 'PushManager' in window && 'Notification' in window && 'fetch' in window && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey');\n    };\n    return WindowController;\n}(_controllerInterface2.default);\nexports.default = WindowController;\nmodule.exports = exports['default'];\n\n\n},{\"../../app/subscribe\":4,\"../models/default-sw\":94,\"../models/errors\":95,\"../models/notification-permission\":97,\"../models/worker-page-message\":99,\"./controller-interface\":90}],93:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (arrayBuffer) {\n    var base64String = toBase64(arrayBuffer);\n    return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nfunction toBase64(arrayBuffer) {\n    var uint8Version = new Uint8Array(arrayBuffer);\n    return window.btoa(String.fromCharCode.apply(null, uint8Version));\n}\n;\nmodule.exports = exports['default'];\n\n\n},{}],94:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    path: '/firebase-messaging-sw.js',\n    scope: '/firebase-cloud-messaging-push-scope'\n};\nmodule.exports = exports['default'];\n\n\n},{}],95:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar CODES = {\n    AVAILABLE_IN_WINDOW: 'only-available-in-window',\n    AVAILABLE_IN_SW: 'only-available-in-sw',\n    SHOULD_BE_INHERITED: 'should-be-overriden',\n    BAD_SENDER_ID: 'bad-sender-id',\n    INCORRECT_GCM_SENDER_ID: 'incorrect-gcm-sender-id',\n    PERMISSION_DEFAULT: 'permission-default',\n    PERMISSION_BLOCKED: 'permission-blocked',\n    UNSUPPORTED_BROWSER: 'unsupported-browser',\n    NOTIFICATIONS_BLOCKED: 'notifications-blocked',\n    FAILED_DEFAULT_REGISTRATION: 'failed-serviceworker-registration',\n    SW_REGISTRATION_EXPECTED: 'sw-registration-expected',\n    GET_SUBSCRIPTION_FAILED: 'get-subscription-failed',\n    INVALID_SAVED_TOKEN: 'invalid-saved-token',\n    SW_REG_REDUNDANT: 'sw-reg-redundant',\n    TOKEN_SUBSCRIBE_FAILED: 'token-subscribe-failed',\n    TOKEN_SUBSCRIBE_NO_TOKEN: 'token-subscribe-no-token',\n    TOKEN_SUBSCRIBE_NO_PUSH_SET: 'token-subscribe-no-push-set',\n    USE_SW_BEFORE_GET_TOKEN: 'use-sw-before-get-token',\n    INVALID_DELETE_TOKEN: 'invalid-delete-token',\n    DELETE_TOKEN_NOT_FOUND: 'delete-token-not-found',\n    DELETE_SCOPE_NOT_FOUND: 'delete-scope-not-found',\n    BG_HANDLER_FUNCTION_EXPECTED: 'bg-handler-function-expected',\n    NO_WINDOW_CLIENT_TO_MSG: 'no-window-client-to-msg',\n    UNABLE_TO_RESUBSCRIBE: 'unable-to-resubscribe',\n    NO_FCM_TOKEN_FOR_RESUBSCRIBE: 'no-fcm-token-for-resubscribe',\n    FAILED_TO_DELETE_TOKEN: 'failed-to-delete-token',\n    NO_SW_IN_REG: 'no-sw-in-reg',\n    BAD_SCOPE: 'bad-scope',\n    BAD_VAPID_KEY: 'bad-vapid-key',\n    BAD_SUBSCRIPTION: 'bad-subscription',\n    BAD_TOKEN: 'bad-token',\n    BAD_PUSH_SET: 'bad-push-set',\n    FAILED_DELETE_VAPID_KEY: 'failed-delete-vapid-key'\n};\nvar ERROR_MAP = (_a = {}, _a[CODES.AVAILABLE_IN_WINDOW] = 'This method is available in a Window context.', _a[CODES.AVAILABLE_IN_SW] = 'This method is available in a service worker ' + 'context.', _a[CODES.SHOULD_BE_INHERITED] = 'This method should be overriden by ' + 'extended classes.', _a[CODES.BAD_SENDER_ID] = \"Please ensure that 'messagingSenderId' is set \" + 'correctly in the options passed into firebase.initializeApp().', _a[CODES.PERMISSION_DEFAULT] = 'The required permissions were not granted and ' + 'dismissed instead.', _a[CODES.PERMISSION_BLOCKED] = 'The required permissions were not granted and ' + 'blocked instead.', _a[CODES.UNSUPPORTED_BROWSER] = \"This browser doesn't support the API's \" + 'required to use the firebase SDK.', _a[CODES.NOTIFICATIONS_BLOCKED] = 'Notifications have been blocked.', _a[CODES.FAILED_DEFAULT_REGISTRATION] = 'We are unable to register the ' + 'default service worker. {$browserErrorMessage}', _a[CODES.SW_REGISTRATION_EXPECTED] = 'A service worker registration was the ' + 'expected input.', _a[CODES.GET_SUBSCRIPTION_FAILED] = 'There was an error when trying to get ' + 'any existing Push Subscriptions.', _a[CODES.INVALID_SAVED_TOKEN] = 'Unable to access details of the saved token.', _a[CODES.SW_REG_REDUNDANT] = 'The service worker being used for push was made ' + 'redundant.', _a[CODES.TOKEN_SUBSCRIBE_FAILED] = 'A problem occured while subscribing the ' + 'user to FCM: {$message}', _a[CODES.TOKEN_SUBSCRIBE_NO_TOKEN] = 'FCM returned no token when subscribing ' + 'the user to push.', _a[CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET] = 'FCM returned an invalid response ' + 'when getting an FCM token.', _a[CODES.USE_SW_BEFORE_GET_TOKEN] = 'You must call useServiceWorker() before ' + 'calling getToken() to ensure your service worker is used.', _a[CODES.INVALID_DELETE_TOKEN] = 'You must pass a valid token into ' + 'deleteToken(), i.e. the token from getToken().', _a[CODES.DELETE_TOKEN_NOT_FOUND] = 'The deletion attempt for token could not ' + 'be performed as the token was not found.', _a[CODES.DELETE_SCOPE_NOT_FOUND] = 'The deletion attempt for service worker ' + 'scope could not be performed as the scope was not found.', _a[CODES.BG_HANDLER_FUNCTION_EXPECTED] = 'The input to ' + 'setBackgroundMessageHandler() must be a function.', _a[CODES.NO_WINDOW_CLIENT_TO_MSG] = 'An attempt was made to message a ' + 'non-existant window client.', _a[CODES.UNABLE_TO_RESUBSCRIBE] = 'There was an error while re-subscribing ' + 'the FCM token for push messaging. Will have to resubscribe the ' + 'user on next visit. {$message}', _a[CODES.NO_FCM_TOKEN_FOR_RESUBSCRIBE] = 'Could not find an FCM token ' + 'and as a result, unable to resubscribe. Will have to resubscribe the ' + 'user on next visit.', _a[CODES.FAILED_TO_DELETE_TOKEN] = 'Unable to delete the currently saved token.', _a[CODES.NO_SW_IN_REG] = 'Even though the service worker registration was ' + 'successful, there was a problem accessing the service worker itself.', _a[CODES.INCORRECT_GCM_SENDER_ID] = \"Please change your web app manifest's \" + \"'gcm_sender_id' value to '103953800507' to use Firebase messaging.\", _a[CODES.BAD_SCOPE] = 'The service worker scope must be a string with at ' + 'least one character.', _a[CODES.BAD_VAPID_KEY] = 'The public VAPID key must be a string with at ' + 'least one character.', _a[CODES.BAD_SUBSCRIPTION] = 'The subscription must be a valid ' + 'PushSubscription.', _a[CODES.BAD_TOKEN] = 'The FCM Token used for storage / lookup was not ' + 'a valid token string.', _a[CODES.BAD_PUSH_SET] = 'The FCM push set used for storage / lookup was not ' + 'not a valid push set string.', _a[CODES.FAILED_DELETE_VAPID_KEY] = 'The VAPID key could not be deleted.', _a);\nexports.default = {\n    codes: CODES,\n    map: ERROR_MAP\n};\n\nvar _a;\nmodule.exports = exports['default'];\n\n\n},{}],96:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar FCM_APPLICATION_SERVER_KEY = [0x04, 0x33, 0x94, 0xf7, 0xdf, 0xa1, 0xeb, 0xb1, 0xdc, 0x03, 0xa2, 0x5e, 0x15, 0x71, 0xdb, 0x48, 0xd3, 0x2e, 0xed, 0xed, 0xb2, 0x34, 0xdb, 0xb7, 0x47, 0x3a, 0x0c, 0x8f, 0xc4, 0xcc, 0xe1, 0x6f, 0x3c, 0x8c, 0x84, 0xdf, 0xab, 0xb6, 0x66, 0x3e, 0xf2, 0x0c, 0xd4, 0x8b, 0xfe, 0xe3, 0xf9, 0x76, 0x2f, 0x14, 0x1c, 0x63, 0x08, 0x6a, 0x6f, 0x2d, 0xb1, 0x1a, 0x95, 0xb0, 0xce, 0x37, 0xc0, 0x9c, 0x6e];\nvar SUBSCRIPTION_DETAILS = {\n    userVisibleOnly: true,\n    applicationServerKey: new Uint8Array(FCM_APPLICATION_SERVER_KEY)\n};\nexports.default = {\n    ENDPOINT: 'https://fcm.googleapis.com',\n    APPLICATION_SERVER_KEY: FCM_APPLICATION_SERVER_KEY,\n    SUBSCRIPTION_OPTIONS: SUBSCRIPTION_DETAILS\n};\nmodule.exports = exports['default'];\n\n\n},{}],97:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    granted: 'granted',\n    default: 'default',\n    denied: 'denied'\n};\nmodule.exports = exports['default'];\n\n\n},{}],98:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _errors = require('../../app/errors');\n\nvar _errors2 = require('./errors');\n\nvar _errors3 = _interopRequireDefault(_errors2);\n\nvar _arrayBufferToBase = require('../helpers/array-buffer-to-base64');\n\nvar _arrayBufferToBase2 = _interopRequireDefault(_arrayBufferToBase);\n\nvar _fcmDetails = require('./fcm-details');\n\nvar _fcmDetails2 = _interopRequireDefault(_fcmDetails);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FCM_TOKEN_DETAILS_DB = 'fcm_token_details_db';\nvar FCM_TOKEN_OBJ_STORE = 'fcm_token_object_Store';\nvar FCM_TOKEN_DETAILS_DB_VERSION = 1;\nvar TokenManager = function () {\n    function TokenManager() {\n        this.errorFactory_ = new _errors.ErrorFactory('messaging', 'Messaging', _errors3.default.map);\n        this.openDbPromise_ = null;\n    }\n    /**\n     * Get the indexedDB as a promsie.\n     * @private\n     * @return {Promise<IDBDatabase>} The IndexedDB database\n     */\n    TokenManager.prototype.openDatabase_ = function () {\n        if (this.openDbPromise_) {\n            return this.openDbPromise_;\n        }\n        this.openDbPromise_ = new Promise(function (resolve, reject) {\n            var request = indexedDB.open(FCM_TOKEN_DETAILS_DB, FCM_TOKEN_DETAILS_DB_VERSION);\n            request.onerror = function (event) {\n                reject(event.target.error);\n            };\n            request.onsuccess = function (event) {\n                resolve(event.target.result);\n            };\n            request.onupgradeneeded = function (event) {\n                var db = event.target.result;\n                var objectStore = db.createObjectStore(FCM_TOKEN_OBJ_STORE, {\n                    keyPath: 'swScope'\n                });\n                // Make sure the sender ID can be searched\n                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\n                    unique: false\n                });\n                objectStore.createIndex('fcmToken', 'fcmToken', {\n                    unique: true\n                });\n            };\n        });\n        return this.openDbPromise_;\n    };\n    /**\n     * Close the currently open database.\n     * @return {Promise<?>} Returns the result of the promise chain.\n     */\n    TokenManager.prototype.closeDatabase = function () {\n        var _this = this;\n        if (this.openDbPromise_) {\n            return this.openDbPromise_.then(function (db) {\n                db.close();\n                _this.openDbPromise_ = null;\n            });\n        }\n        return Promise.resolve();\n    };\n    /**\n     * Given a token, this method will look up the details in indexedDB.\n     * @public\n     * @param {string} fcmToken\n     * @return {Promise<Object>} The details associated with that token.\n     */\n    TokenManager.prototype.getTokenDetailsFromToken = function (fcmToken) {\n        return this.openDatabase_().then(function (db) {\n            return new Promise(function (resolve, reject) {\n                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);\n                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n                var index = objectStore.index('fcmToken');\n                var request = index.get(fcmToken);\n                request.onerror = function (event) {\n                    reject(event.target.error);\n                };\n                request.onsuccess = function (event) {\n                    resolve(event.target.result);\n                };\n            });\n        });\n    };\n    TokenManager.prototype.getTokenDetailsFromSWScope_ = function (swScope) {\n        return this.openDatabase_().then(function (db) {\n            return new Promise(function (resolve, reject) {\n                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);\n                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n                var scopeRequest = objectStore.get(swScope);\n                scopeRequest.onerror = function (event) {\n                    reject(event.target.error);\n                };\n                scopeRequest.onsuccess = function (event) {\n                    resolve(event.target.result);\n                };\n            });\n        });\n    };\n    TokenManager.prototype.getAllTokenDetailsForSenderId_ = function (senderId) {\n        return this.openDatabase_().then(function (db) {\n            return new Promise(function (resolve, reject) {\n                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);\n                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n                var senderIdTokens = [];\n                var cursorRequest = objectStore.openCursor();\n                cursorRequest.onerror = function (event) {\n                    reject(event.target.error);\n                };\n                cursorRequest.onsuccess = function (event) {\n                    var cursor = event.target.result;\n                    if (cursor) {\n                        if (cursor.value['fcmSenderId'] === senderId) {\n                            senderIdTokens.push(cursor.value);\n                        }\n                        cursor.continue();\n                    } else {\n                        resolve(senderIdTokens);\n                    }\n                };\n            });\n        });\n    };\n    /**\n     * Given a PushSubscription and messagingSenderId, get an FCM token.\n     * @public\n     * @param  {string} senderId The 'messagingSenderId' to tie the token to.\n     * @param  {PushSubscription} subscription The PushSusbcription to \"federate\".\n     * @param  {string=} pushSet If defined this will swap the subscription for\n     * matching FCM token.\n     * @return {Promise<!Object>} Returns the FCM token to be used in place\n     * of the PushSubscription.\n     */\n    TokenManager.prototype.subscribeToFCM = function (senderId, subscription, pushSet) {\n        var _this = this;\n        var p256dh = (0, _arrayBufferToBase2.default)(subscription['getKey']('p256dh'));\n        var auth = (0, _arrayBufferToBase2.default)(subscription['getKey']('auth'));\n        var fcmSubscribeBody = \"authorized_entity=\" + senderId + \"&\" + (\"endpoint=\" + subscription.endpoint + \"&\") + (\"encryption_key=\" + p256dh + \"&\") + (\"encryption_auth=\" + auth);\n        if (pushSet) {\n            fcmSubscribeBody += \"&pushSet=\" + pushSet;\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var subscribeOptions = {\n            method: 'POST',\n            headers: headers,\n            body: fcmSubscribeBody\n        };\n        return fetch(_fcmDetails2.default.ENDPOINT + '/fcm/connect/subscribe', subscribeOptions).then(function (response) {\n            return response.json();\n        }).then(function (response) {\n            var fcmTokenResponse = response;\n            if (fcmTokenResponse['error']) {\n                var message = fcmTokenResponse['error']['message'];\n                throw _this.errorFactory_.create(_errors3.default.codes.TOKEN_SUBSCRIBE_FAILED, {\n                    message: message\n                });\n            }\n            if (!fcmTokenResponse['token']) {\n                throw _this.errorFactory_.create(_errors3.default.codes.TOKEN_SUBSCRIBE_NO_TOKEN);\n            }\n            if (!fcmTokenResponse['pushSet']) {\n                throw _this.errorFactory_.create(_errors3.default.codes.TOKEN_SUBSCRIBE_NO_PUSH_SET);\n            }\n            return {\n                token: fcmTokenResponse['token'],\n                pushSet: fcmTokenResponse['pushSet']\n            };\n        });\n    };\n    /**\n     * Checks the that fields in the PushSubscription are equivalent to the\n     * details stores in the masterTokenDetails.\n     * @private\n     * @param  {PushSubscription} subscription The push subscription we expect\n     * the master token to match.\n     * @param  {Object}  masterTokenDetails The saved details we wish to compare\n     * with the PushSubscription\n     * @return {boolean} true if the subscription and token details are\n     * equivalent.\n     */\n    TokenManager.prototype.isSameSubscription_ = function (subscription, masterTokenDetails) {\n        // getKey() isn't defined in the PushSubscription externs file, hence\n        // subscription['getKey']('<key name>').\n        return subscription.endpoint === masterTokenDetails['endpoint'] && (0, _arrayBufferToBase2.default)(subscription['getKey']('auth')) === masterTokenDetails['auth'] && (0, _arrayBufferToBase2.default)(subscription['getKey']('p256dh')) === masterTokenDetails['p256dh'];\n    };\n    /**\n     * Save the details for the fcm token for re-use at a later date.\n     * @private\n     * @param  {string} senderId The 'messagingSenderId' used for this project\n     * @param  {ServiceWorkerRegistration} swRegistration The service worker\n     * used to subscribe the user for web push\n     * @param  {PushSubscription} subscription The push subscription passed to\n     * FCM for the current token.\n     * @param  {string} fcmToken The FCM token currently used on this\n     * device.\n     * @param  {string} fcmPushSet The FCM push tied to the fcm token.\n     * @return {Promise<void>}\n     */\n    TokenManager.prototype.saveTokenDetails_ = function (senderId, swRegistration, subscription, fcmToken, fcmPushSet) {\n        var details = {\n            swScope: swRegistration.scope,\n            endpoint: subscription.endpoint,\n            auth: (0, _arrayBufferToBase2.default)(subscription['getKey']('auth')),\n            p256dh: (0, _arrayBufferToBase2.default)(subscription['getKey']('p256dh')),\n            fcmToken: fcmToken,\n            fcmPushSet: fcmPushSet,\n            fcmSenderId: senderId\n        };\n        return this.openDatabase_().then(function (db) {\n            return new Promise(function (resolve, reject) {\n                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE], 'readwrite');\n                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n                var request = objectStore.put(details);\n                request.onerror = function (event) {\n                    reject(event.target.error);\n                };\n                request.onsuccess = function (event) {\n                    resolve();\n                };\n            });\n        });\n    };\n    /**\n     * Returns the saved FCM Token if one is available and still valid,\n     * otherwise `null` is returned.\n     * @param {string} senderId This should be the sender ID associated with the\n     * FCM Token being retrieved.\n     * @param {ServiceWorkerRegistration} swRegistration Registration to be used\n     * to subscribe the user to push.\n     * @return {Promise<string> | Promise} Returns the saved FCM Token if\n     * avilable and valid.\n     * @export\n     */\n    TokenManager.prototype.getSavedToken = function (senderId, swRegistration) {\n        var _this = this;\n        if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n            return Promise.reject(this.errorFactory_.create(_errors3.default.codes.SW_REGISTRATION_EXPECTED));\n        }\n        if (typeof senderId !== 'string' || senderId.length === 0) {\n            return Promise.reject(this.errorFactory_.create(_errors3.default.codes.BAD_SENDER_ID));\n        }\n        return this.getAllTokenDetailsForSenderId_(senderId).then(function (allTokenDetails) {\n            if (allTokenDetails.length === 0) {\n                return;\n            }\n            var index = allTokenDetails.findIndex(function (tokenDetails) {\n                return swRegistration.scope === tokenDetails['swScope'] && senderId === tokenDetails['fcmSenderId'];\n            });\n            if (index === -1) {\n                return;\n            }\n            return allTokenDetails[index];\n        }).then(function (tokenDetails) {\n            if (!tokenDetails) {\n                return;\n            }\n            return swRegistration.pushManager.getSubscription().catch(function (err) {\n                throw _this.errorFactory_.create(_errors3.default.codes.GET_SUBSCRIPTION_FAILED);\n            }).then(function (subscription) {\n                if (subscription && _this.isSameSubscription_(subscription, tokenDetails)) {\n                    return tokenDetails['fcmToken'];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new FCM token.\n     */\n    TokenManager.prototype.createToken = function (senderId, swRegistration) {\n        var _this = this;\n        if (typeof senderId !== 'string' || senderId.length === 0) {\n            return Promise.reject(this.errorFactory_.create(_errors3.default.codes.BAD_SENDER_ID));\n        }\n        if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n            return Promise.reject(this.errorFactory_.create(_errors3.default.codes.SW_REGISTRATION_EXPECTED));\n        }\n        // Check for existing subscription first\n        var subscription;\n        var fcmTokenDetails;\n        return swRegistration.pushManager.getSubscription().then(function (subscription) {\n            if (subscription) {\n                return subscription;\n            }\n            return swRegistration.pushManager.subscribe(_fcmDetails2.default.SUBSCRIPTION_OPTIONS);\n        }).then(function (sub) {\n            subscription = sub;\n            return _this.subscribeToFCM(senderId, subscription);\n        }).then(function (tokenDetails) {\n            fcmTokenDetails = tokenDetails;\n            return _this.saveTokenDetails_(senderId, swRegistration, subscription, fcmTokenDetails['token'], fcmTokenDetails['pushSet']);\n        }).then(function () {\n            return fcmTokenDetails['token'];\n        });\n    };\n    /**\n     * This method deletes details of the current FCM token.\n     * It's returning a promise in case we need to move to an async\n     * method for deleting at a later date.\n     * @param {string} token Token to be deleted\n     * @return {Promise<Object>} Resolves once the FCM token details have been\n     * deleted and returns the deleted details.\n     */\n    TokenManager.prototype.deleteToken = function (token) {\n        var _this = this;\n        if (typeof token !== 'string' || token.length === 0) {\n            return Promise.reject(this.errorFactory_.create(_errors3.default.codes.INVALID_DELETE_TOKEN));\n        }\n        return this.getTokenDetailsFromToken(token).then(function (details) {\n            if (!details) {\n                throw _this.errorFactory_.create(_errors3.default.codes.DELETE_TOKEN_NOT_FOUND);\n            }\n            return _this.openDatabase_().then(function (db) {\n                return new Promise(function (resolve, reject) {\n                    var transaction = db.transaction([FCM_TOKEN_OBJ_STORE], 'readwrite');\n                    var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n                    var request = objectStore.delete(details['swScope']);\n                    request.onerror = function (event) {\n                        reject(event.target.error);\n                    };\n                    request.onsuccess = function (event) {\n                        if (event.target.result === 0) {\n                            reject(_this.errorFactory_.create(_errors3.default.codes.FAILED_TO_DELETE_TOKEN));\n                            return;\n                        }\n                        resolve(details);\n                    };\n                });\n            });\n        });\n    };\n    return TokenManager;\n}();\nexports.default = TokenManager;\nmodule.exports = exports['default'];\n\n\n},{\"../../app/errors\":2,\"../helpers/array-buffer-to-base64\":93,\"./errors\":95,\"./fcm-details\":96}],99:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n// These fields are strings to prevent closure from thinking goog.getMsg\n// should be used to initialise the values\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar PARAMS = {\n    TYPE_OF_MSG: 'firebase-messaging-msg-type',\n    DATA: 'firebase-messaging-msg-data'\n};\n// This value isn't using the TYPE_OF_MSG short hand as closure\n// expects the variable to be defined via goog.getMsg\nvar msgType = {\n    PUSH_MSG_RECEIVED: 'push-msg-received',\n    NOTIFICATION_CLICKED: 'notification-clicked'\n};\nvar createNewMsg = function createNewMsg(msgType, msgData) {\n    var message = (_a = {}, _a[PARAMS.TYPE_OF_MSG] = msgType, _a[PARAMS.DATA] = msgData, _a);\n    return message;\n    var _a;\n};\nexports.default = {\n    PARAMS: PARAMS,\n    TYPES_OF_MSG: msgType,\n    createNewMsg: createNewMsg\n};\nmodule.exports = exports['default'];\n\n\n},{}],100:[function(require,module,exports){\n(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n\n},{}],101:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.registerStorage = registerStorage;\n\nvar _string = require('./storage/implementation/string');\n\nvar _taskenums = require('./storage/implementation/taskenums');\n\nvar _xhriopool = require('./storage/implementation/xhriopool');\n\nvar _reference = require('./storage/reference');\n\nvar _service = require('./storage/service');\n\nvar _app = require('./app');\n\nvar _app2 = _interopRequireDefault(_app);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Type constant for Firebase Storage.\n */\nvar STORAGE_TYPE = 'storage'; /**\n                              * Copyright 2017 Google Inc.\n                              *\n                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                              * you may not use this file except in compliance with the License.\n                              * You may obtain a copy of the License at\n                              *\n                              *   http://www.apache.org/licenses/LICENSE-2.0\n                              *\n                              * Unless required by applicable law or agreed to in writing, software\n                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                              * See the License for the specific language governing permissions and\n                              * limitations under the License.\n                              */\n\nfunction factory(app, unused, opt_url) {\n    return new _service.Service(app, new _xhriopool.XhrIoPool(), opt_url);\n}\nfunction registerStorage(instance) {\n    var namespaceExports = {\n        // no-inline\n        TaskState: _taskenums.TaskState,\n        TaskEvent: _taskenums.TaskEvent,\n        StringFormat: _string.StringFormat,\n        Storage: _service.Service,\n        Reference: _reference.Reference\n    };\n    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined,\n    // Allow multiple storage instances per app.\n    true);\n}\nregisterStorage(_app2.default);\n\n\n},{\"./app\":1,\"./storage/implementation/string\":123,\"./storage/implementation/taskenums\":124,\"./storage/implementation/xhriopool\":129,\"./storage/reference\":130,\"./storage/service\":131}],102:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ArgSpec = undefined;\nexports.validate = validate;\nexports.and_ = and_;\nexports.stringSpec = stringSpec;\nexports.uploadDataSpec = uploadDataSpec;\nexports.metadataSpec = metadataSpec;\nexports.nonNegativeNumberSpec = nonNegativeNumberSpec;\nexports.looseObjectSpec = looseObjectSpec;\nexports.nullFunctionSpec = nullFunctionSpec;\n\nvar _error = require('./error');\n\nvar errorsExports = _interopRequireWildcard(_error);\n\nvar _metadata = require('./metadata');\n\nvar MetadataUtils = _interopRequireWildcard(_metadata);\n\nvar _type = require('./type');\n\nvar type = _interopRequireWildcard(_type);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * @param name Name of the function.\n * @param specs Argument specs.\n * @param passed The actual arguments passed to the function.\n * @throws {fbs.Error} If the arguments are invalid.\n */\nfunction validate(name, specs, passed) {\n    var minArgs = specs.length;\n    var maxArgs = specs.length;\n    for (var i = 0; i < specs.length; i++) {\n        if (specs[i].optional) {\n            minArgs = i;\n            break;\n        }\n    }\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n    if (!validLength) {\n        throw errorsExports.invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n    }\n    for (var i = 0; i < passed.length; i++) {\n        try {\n            specs[i].validator(passed[i]);\n        } catch (e) {\n            if (e instanceof Error) {\n                throw errorsExports.invalidArgument(i, name, e.message);\n            } else {\n                throw errorsExports.invalidArgument(i, name, e);\n            }\n        }\n    }\n}\n/**\n * @struct\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar ArgSpec = function () {\n    function ArgSpec(validator, opt_optional) {\n        var self = this;\n        this.validator = function (p) {\n            if (self.optional && !type.isJustDef(p)) {\n                return;\n            }\n            validator(p);\n        };\n        this.optional = !!opt_optional;\n    }\n    return ArgSpec;\n}();\nexports.ArgSpec = ArgSpec;\nfunction and_(v1, v2) {\n    return function (p) {\n        v1(p);\n        v2(p);\n    };\n}\nfunction stringSpec(opt_validator, opt_optional) {\n    function stringValidator(p) {\n        if (!type.isString(p)) {\n            throw 'Expected string.';\n        }\n    }\n    var validator;\n    if (opt_validator) {\n        validator = and_(stringValidator, opt_validator);\n    } else {\n        validator = stringValidator;\n    }\n    return new ArgSpec(validator, opt_optional);\n}\nfunction uploadDataSpec() {\n    function validator(p) {\n        var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || type.isNativeBlobDefined() && p instanceof Blob;\n        if (!valid) {\n            throw 'Expected Blob or File.';\n        }\n    }\n    return new ArgSpec(validator);\n}\nfunction metadataSpec(opt_optional) {\n    return new ArgSpec(MetadataUtils.metadataValidator, opt_optional);\n}\nfunction nonNegativeNumberSpec() {\n    function validator(p) {\n        var valid = type.isNumber(p) && p >= 0;\n        if (!valid) {\n            throw 'Expected a number 0 or greater.';\n        }\n    }\n    return new ArgSpec(validator);\n}\nfunction looseObjectSpec(opt_validator, opt_optional) {\n    function validator(p) {\n        var isLooseObject = p === null || type.isDef(p) && p instanceof Object;\n        if (!isLooseObject) {\n            throw 'Expected an Object.';\n        }\n        if (opt_validator !== undefined && opt_validator !== null) {\n            opt_validator(p);\n        }\n    }\n    return new ArgSpec(validator, opt_optional);\n}\nfunction nullFunctionSpec(opt_optional) {\n    function validator(p) {\n        var valid = p === null || type.isFunction(p);\n        if (!valid) {\n            throw 'Expected a Function.';\n        }\n    }\n    return new ArgSpec(validator, opt_optional);\n}\n\n\n},{\"./error\":109,\"./metadata\":114,\"./type\":125}],103:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.contains = contains;\nexports.clone = clone;\nexports.remove = remove;\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * Returns true if the object is contained in the array (compared with ===).\n * @template T\n */\nfunction contains(array, elem) {\n    return array.indexOf(elem) !== -1;\n}\n/**\n * Returns a shallow copy of the array or array-like object (e.g. arguments).\n * @template T\n */\nfunction clone(arraylike) {\n    return Array.prototype.slice.call(arraylike);\n}\n/**\n * Removes the given element from the given array, if it is contained.\n * Directly modifies the passed-in array.\n * @template T\n */\nfunction remove(array, elem) {\n    var i = array.indexOf(elem);\n    if (i !== -1) {\n        array.splice(i, 1);\n    }\n}\n\n\n},{}],104:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.async = async;\n\nvar _promise_external = require('./promise_external');\n\nvar promiseimpl = _interopRequireWildcard(_promise_external);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\nfunction async(f) {\n    return function () {\n        var argsToForward = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            argsToForward[_i] = arguments[_i];\n        }\n        promiseimpl.resolve(true).then(function () {\n            f.apply(null, argsToForward);\n        });\n    };\n} /**\n  * Copyright 2017 Google Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n/**\n * @fileoverview Method for invoking a callback asynchronously.\n */\n\n\n},{\"./promise_external\":118}],105:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.AuthWrapper = undefined;\n\nvar _constants = require('./constants');\n\nvar constants = _interopRequireWildcard(_constants);\n\nvar _error2 = require('./error');\n\nvar errorsExports = _interopRequireWildcard(_error2);\n\nvar _failrequest = require('./failrequest');\n\nvar _location = require('./location');\n\nvar _promise_external = require('./promise_external');\n\nvar promiseimpl = _interopRequireWildcard(_promise_external);\n\nvar _requestmap = require('./requestmap');\n\nvar _type = require('./type');\n\nvar type = _interopRequireWildcard(_type);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * @param app If null, getAuthToken always resolves with null.\n * @param service The storage service associated with this auth wrapper.\n *     Untyped to avoid circular type dependencies.\n * @struct\n */\nvar AuthWrapper = function () {\n    function AuthWrapper(app, maker, requestMaker, service, pool) {\n        this.bucket_ = null;\n        this.deleted_ = false;\n        this.app_ = app;\n        if (this.app_ !== null) {\n            var options = this.app_.options;\n            if (type.isDef(options)) {\n                this.bucket_ = AuthWrapper.extractBucket_(options);\n            }\n        }\n        this.storageRefMaker_ = maker;\n        this.requestMaker_ = requestMaker;\n        this.pool_ = pool;\n        this.service_ = service;\n        this.maxOperationRetryTime_ = constants.defaultMaxOperationRetryTime;\n        this.maxUploadRetryTime_ = constants.defaultMaxUploadRetryTime;\n        this.requestMap_ = new _requestmap.RequestMap();\n    }\n    AuthWrapper.extractBucket_ = function (config) {\n        var bucketString = config[constants.configOption] || null;\n        if (bucketString == null) {\n            return null;\n        }\n        var loc = _location.Location.makeFromBucketSpec(bucketString);\n        return loc.bucket;\n    };\n    AuthWrapper.prototype.getAuthToken = function () {\n        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\n        // (b/28673818).\n        if (this.app_ !== null && type.isDef(this.app_.INTERNAL) && type.isDef(this.app_.INTERNAL.getToken)) {\n            return this.app_.INTERNAL.getToken().then(function (response) {\n                if (response !== null) {\n                    return response.accessToken;\n                } else {\n                    return null;\n                }\n            }, function (_error) {\n                return null;\n            });\n        } else {\n            return promiseimpl.resolve(null);\n        }\n    };\n    AuthWrapper.prototype.bucket = function () {\n        if (this.deleted_) {\n            throw errorsExports.appDeleted();\n        } else {\n            return this.bucket_;\n        }\n    };\n    /**\n     * The service associated with this auth wrapper. Untyped to avoid circular\n     * type dependencies.\n     */\n    AuthWrapper.prototype.service = function () {\n        return this.service_;\n    };\n    /**\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\n     * at the given Location.\n     * @param loc The Location.\n     * @return Actually a firebaseStorage.Reference, typing not allowed\n     *     because of circular dependency problems.\n     */\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\n        return this.storageRefMaker_(this, loc);\n    };\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\n        if (!this.deleted_) {\n            var request = this.requestMaker_(requestInfo, authToken, this.pool_);\n            this.requestMap_.addRequest(request);\n            return request;\n        } else {\n            return new _failrequest.FailRequest(errorsExports.appDeleted());\n        }\n    };\n    /**\n     * Stop running requests and prevent more from being created.\n     */\n    AuthWrapper.prototype.deleteApp = function () {\n        this.deleted_ = true;\n        this.app_ = null;\n        this.requestMap_.clear();\n    };\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\n        return this.maxUploadRetryTime_;\n    };\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\n        this.maxUploadRetryTime_ = time;\n    };\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\n        return this.maxOperationRetryTime_;\n    };\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\n        this.maxOperationRetryTime_ = time;\n    };\n    return AuthWrapper;\n}();\nexports.AuthWrapper = AuthWrapper;\n\n\n},{\"./constants\":108,\"./error\":109,\"./failrequest\":110,\"./location\":113,\"./promise_external\":118,\"./requestmap\":121,\"./type\":125}],106:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.start = start;\nexports.stop = stop;\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nfunction start(f, callback, timeout) {\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\n    // type instead of a bunch of functions with state shared in the closure)\n    var waitSeconds = 1;\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n    var timeoutId = null;\n    var hitTimeout = false;\n    var cancelState = 0;\n    function canceled() {\n        return cancelState === 2;\n    }\n    var triggeredCallback = false;\n    function triggerCallback() {\n        if (!triggeredCallback) {\n            triggeredCallback = true;\n            callback.apply(null, arguments);\n        }\n    }\n    function callWithDelay(millis) {\n        timeoutId = setTimeout(function () {\n            timeoutId = null;\n            f(handler, canceled());\n        }, millis);\n    }\n    function handler(success) {\n        var var_args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            var_args[_i - 1] = arguments[_i];\n        }\n        if (triggeredCallback) {\n            return;\n        }\n        if (success) {\n            triggerCallback.apply(null, arguments);\n            return;\n        }\n        var mustStop = canceled() || hitTimeout;\n        if (mustStop) {\n            triggerCallback.apply(null, arguments);\n            return;\n        }\n        if (waitSeconds < 64) {\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n            waitSeconds *= 2;\n        }\n        var waitMillis;\n        if (cancelState === 1) {\n            cancelState = 2;\n            waitMillis = 0;\n        } else {\n            waitMillis = (waitSeconds + Math.random()) * 1000;\n        }\n        callWithDelay(waitMillis);\n    }\n    var stopped = false;\n    function stop(wasTimeout) {\n        if (stopped) {\n            return;\n        }\n        stopped = true;\n        if (triggeredCallback) {\n            return;\n        }\n        if (timeoutId !== null) {\n            if (!wasTimeout) {\n                cancelState = 2;\n            }\n            clearTimeout(timeoutId);\n            callWithDelay(0);\n        } else {\n            if (!wasTimeout) {\n                cancelState = 1;\n            }\n        }\n    }\n    callWithDelay(0);\n    setTimeout(function () {\n        hitTimeout = true;\n        stop(true);\n    }, timeout);\n    return stop;\n}\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nfunction stop(id) {\n    id(false);\n}\n\n\n},{}],107:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FbsBlob = undefined;\n\nvar _fs = require('./fs');\n\nvar fs = _interopRequireWildcard(_fs);\n\nvar _string = require('./string');\n\nvar string = _interopRequireWildcard(_string);\n\nvar _type = require('./type');\n\nvar type = _interopRequireWildcard(_type);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * @param opt_elideCopy If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nvar FbsBlob = function () {\n    function FbsBlob(data, opt_elideCopy) {\n        var size = 0;\n        var blobType = '';\n        if (type.isNativeBlob(data)) {\n            this.data_ = data;\n            size = data.size;\n            blobType = data.type;\n        } else if (data instanceof ArrayBuffer) {\n            if (opt_elideCopy) {\n                this.data_ = new Uint8Array(data);\n            } else {\n                this.data_ = new Uint8Array(data.byteLength);\n                this.data_.set(new Uint8Array(data));\n            }\n            size = this.data_.length;\n        } else if (data instanceof Uint8Array) {\n            if (opt_elideCopy) {\n                this.data_ = data;\n            } else {\n                this.data_ = new Uint8Array(data.length);\n                this.data_.set(data);\n            }\n            size = data.length;\n        }\n        this.size_ = size;\n        this.type_ = blobType;\n    }\n    FbsBlob.prototype.size = function () {\n        return this.size_;\n    };\n    FbsBlob.prototype.type = function () {\n        return this.type_;\n    };\n    FbsBlob.prototype.slice = function (startByte, endByte) {\n        if (type.isNativeBlob(this.data_)) {\n            var realBlob = this.data_;\n            var sliced = fs.sliceBlob(realBlob, startByte, endByte);\n            if (sliced === null) {\n                return null;\n            }\n            return new FbsBlob(sliced);\n        } else {\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n            return new FbsBlob(slice, true);\n        }\n    };\n    FbsBlob.getBlob = function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        if (type.isNativeBlobDefined()) {\n            var blobby = var_args.map(function (val) {\n                if (val instanceof FbsBlob) {\n                    return val.data_;\n                } else {\n                    return val;\n                }\n            });\n            return new FbsBlob(fs.getBlob.apply(null, blobby));\n        } else {\n            var uint8Arrays = var_args.map(function (val) {\n                if (type.isString(val)) {\n                    return string.dataFromString(_string.StringFormat.RAW, val).data;\n                } else {\n                    // Blobs don't exist, so this has to be a Uint8Array.\n                    return val.data_;\n                }\n            });\n            var finalLength_1 = 0;\n            uint8Arrays.forEach(function (array) {\n                finalLength_1 += array.byteLength;\n            });\n            var merged_1 = new Uint8Array(finalLength_1);\n            var index_1 = 0;\n            uint8Arrays.forEach(function (array) {\n                for (var i = 0; i < array.length; i++) {\n                    merged_1[index_1++] = array[i];\n                }\n            });\n            return new FbsBlob(merged_1, true);\n        }\n    };\n    FbsBlob.prototype.uploadData = function () {\n        return this.data_;\n    };\n    return FbsBlob;\n}();\nexports.FbsBlob = FbsBlob;\n\n\n},{\"./fs\":111,\"./string\":123,\"./type\":125}],108:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setDomainBase = setDomainBase;\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n/**\n * Domain and scheme for API calls.\n */\nvar domainBase = exports.domainBase = 'https://firebasestorage.googleapis.com';\n/**\n * Domain and scheme for object downloads.\n */\nvar downloadBase = exports.downloadBase = 'https://firebasestorage.googleapis.com';\n/**\n * Base URL for non-upload calls to the API.\n */\nvar apiBaseUrl = exports.apiBaseUrl = '/v0';\n/**\n * Base URL for upload calls to the API.\n */\nvar apiUploadBaseUrl = exports.apiUploadBaseUrl = '/v0';\nfunction setDomainBase(domainBase) {\n  domainBase = domainBase;\n}\nvar configOption = exports.configOption = 'storageBucket';\n/**\n * 1 minute\n */\nvar shortMaxOperationRetryTime = exports.shortMaxOperationRetryTime = 1 * 60 * 1000;\n/**\n * 2 minutes\n */\nvar defaultMaxOperationRetryTime = exports.defaultMaxOperationRetryTime = 2 * 60 * 1000;\n/**\n * 10 minutes\n */\nvar defaultMaxUploadRetryTime = exports.defaultMaxUploadRetryTime = 10 * 60 * 100;\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nvar minSafeInteger = exports.minSafeInteger = -9007199254740991;\n\n\n},{}],109:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Code = exports.errors = exports.FirebaseStorageError = undefined;\nexports.prependCode = prependCode;\nexports.unknown = unknown;\nexports.objectNotFound = objectNotFound;\nexports.bucketNotFound = bucketNotFound;\nexports.projectNotFound = projectNotFound;\nexports.quotaExceeded = quotaExceeded;\nexports.unauthenticated = unauthenticated;\nexports.unauthorized = unauthorized;\nexports.retryLimitExceeded = retryLimitExceeded;\nexports.invalidChecksum = invalidChecksum;\nexports.canceled = canceled;\nexports.invalidEventName = invalidEventName;\nexports.invalidUrl = invalidUrl;\nexports.invalidDefaultBucket = invalidDefaultBucket;\nexports.noDefaultBucket = noDefaultBucket;\nexports.cannotSliceBlob = cannotSliceBlob;\nexports.serverFileWrongSize = serverFileWrongSize;\nexports.noDownloadURL = noDownloadURL;\nexports.invalidArgument = invalidArgument;\nexports.invalidArgumentCount = invalidArgumentCount;\nexports.appDeleted = appDeleted;\nexports.invalidRootOperation = invalidRootOperation;\nexports.invalidFormat = invalidFormat;\nexports.internalError = internalError;\n\nvar _constants = require('./constants');\n\nvar FirebaseStorageError = function () {\n    function FirebaseStorageError(code, message) {\n        this.code_ = prependCode(code);\n        this.message_ = 'Firebase Storage: ' + message;\n        this.serverResponse_ = null;\n        this.name_ = 'FirebaseError';\n    }\n    FirebaseStorageError.prototype.codeProp = function () {\n        return this.code;\n    };\n    FirebaseStorageError.prototype.codeEquals = function (code) {\n        return prependCode(code) === this.codeProp();\n    };\n    FirebaseStorageError.prototype.serverResponseProp = function () {\n        return this.serverResponse_;\n    };\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n        this.serverResponse_ = serverResponse;\n    };\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n        get: function get() {\n            return this.name_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n        get: function get() {\n            return this.code_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n        get: function get() {\n            return this.message_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n        get: function get() {\n            return this.serverResponse_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FirebaseStorageError;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.FirebaseStorageError = FirebaseStorageError;\nvar errors = exports.errors = {};\nvar Code = exports.Code = {\n    // Shared between all platforms\n    UNKNOWN: 'unknown',\n    OBJECT_NOT_FOUND: 'object-not-found',\n    BUCKET_NOT_FOUND: 'bucket-not-found',\n    PROJECT_NOT_FOUND: 'project-not-found',\n    QUOTA_EXCEEDED: 'quota-exceeded',\n    UNAUTHENTICATED: 'unauthenticated',\n    UNAUTHORIZED: 'unauthorized',\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n    INVALID_CHECKSUM: 'invalid-checksum',\n    CANCELED: 'canceled',\n    // JS specific\n    INVALID_EVENT_NAME: 'invalid-event-name',\n    INVALID_URL: 'invalid-url',\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n    NO_DOWNLOAD_URL: 'no-download-url',\n    INVALID_ARGUMENT: 'invalid-argument',\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n    APP_DELETED: 'app-deleted',\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\n    INVALID_FORMAT: 'invalid-format',\n    INTERNAL_ERROR: 'internal-error'\n};\nfunction prependCode(code) {\n    return 'storage/' + code;\n}\nfunction unknown() {\n    var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n    return new FirebaseStorageError(Code.UNKNOWN, message);\n}\nfunction objectNotFound(path) {\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\nfunction bucketNotFound(bucket) {\n    return new FirebaseStorageError(Code.BUCKET_NOT_FOUND, \"Bucket '\" + bucket + \"' does not exist.\");\n}\nfunction projectNotFound(project) {\n    return new FirebaseStorageError(Code.PROJECT_NOT_FOUND, \"Project '\" + project + \"' does not exist.\");\n}\nfunction quotaExceeded(bucket) {\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\nfunction unauthenticated() {\n    var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\nfunction unauthorized(path) {\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\nfunction retryLimitExceeded() {\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\nfunction invalidChecksum(path, checksum, calculated) {\n    return new FirebaseStorageError(Code.INVALID_CHECKSUM, \"Uploaded/downloaded object '\" + path + \"' has checksum '\" + checksum + \"' which does not match '\" + calculated + \"'. Please retry the upload/download.\");\n}\nfunction canceled() {\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\nfunction invalidEventName(name) {\n    return new FirebaseStorageError(Code.INVALID_EVENT_NAME, \"Invalid event name '\" + name + \"'.\");\n}\nfunction invalidUrl(url) {\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\nfunction invalidDefaultBucket(bucket) {\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\nfunction noDefaultBucket() {\n    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' + \"found. Did you set the '\" + _constants.configOption + \"' property when initializing the app?\");\n}\nfunction cannotSliceBlob() {\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\nfunction serverFileWrongSize() {\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\nfunction noDownloadURL() {\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\nfunction invalidArgument(index, fnName, message) {\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n    var countPart;\n    var plural;\n    if (argMin === argMax) {\n        countPart = argMin;\n        plural = argMin === 1 ? 'argument' : 'arguments';\n    } else {\n        countPart = 'between ' + argMin + ' and ' + argMax;\n        plural = 'arguments';\n    }\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\nfunction appDeleted() {\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\n * @param name The name of the operation that was invalid.\n */\nfunction invalidRootOperation(name) {\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\n * @param format The format that was not valid.\n * @param message A message describing the format violation.\n */\nfunction invalidFormat(format, message) {\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\n * @param message A message describing the internal error.\n */\nfunction internalError(message) {\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n\n\n},{\"./constants\":108}],110:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FailRequest = undefined;\n\nvar _promise_external = require('./promise_external');\n\nvar promiseimpl = _interopRequireWildcard(_promise_external);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * A request whose promise always fails.\n * @struct\n * @template T\n */\nvar FailRequest = function () {\n    function FailRequest(error) {\n        this.promise_ = promiseimpl.reject(error);\n    }\n    /** @inheritDoc */\n    FailRequest.prototype.getPromise = function () {\n        return this.promise_;\n    };\n    /** @inheritDoc */\n    FailRequest.prototype.cancel = function (appDelete) {\n        if (appDelete === void 0) {\n            appDelete = false;\n        }\n    };\n    return FailRequest;\n}();\nexports.FailRequest = FailRequest;\n\n\n},{\"./promise_external\":118}],111:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getBlob = getBlob;\nexports.sliceBlob = sliceBlob;\n\nvar _type = require('./type');\n\nvar type = _interopRequireWildcard(_type);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction getBlobBuilder() {\n    if (typeof BlobBuilder !== 'undefined') {\n        return BlobBuilder;\n    } else if (typeof WebKitBlobBuilder !== 'undefined') {\n        return WebKitBlobBuilder;\n    } else {\n        return undefined;\n    }\n}\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param var_args The values that will make up the resulting blob.\n * @return The blob.\n */\nfunction getBlob() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var BlobBuilder = getBlobBuilder();\n    if (BlobBuilder !== undefined) {\n        var bb = new BlobBuilder();\n        for (var i = 0; i < var_args.length; i++) {\n            bb.append(var_args[i]);\n        }\n        return bb.getBlob();\n    } else {\n        if (type.isNativeBlobDefined()) {\n            return new Blob(var_args);\n        } else {\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\n        }\n    }\n}\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nfunction sliceBlob(blob, start, end) {\n    if (blob.webkitSlice) {\n        return blob.webkitSlice(start, end);\n    } else if (blob.mozSlice) {\n        return blob.mozSlice(start, end);\n    } else if (blob.slice) {\n        return blob.slice(start, end);\n    }\n    return null;\n}\n\n\n},{\"./type\":125}],112:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.jsonObjectOrNull = jsonObjectOrNull;\n\nvar _type = require('./type');\n\nvar type = _interopRequireWildcard(_type);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nfunction jsonObjectOrNull(s) {\n    var obj;\n    try {\n        obj = JSON.parse(s);\n    } catch (e) {\n        return null;\n    }\n    if (type.isNonArrayObject(obj)) {\n        return obj;\n    } else {\n        return null;\n    }\n} /**\n  * Copyright 2017 Google Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n\n},{\"./type\":125}],113:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Location = undefined;\n\nvar _error = require('./error');\n\nvar errorsExports = _interopRequireWildcard(_error);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * @struct\n */\nvar Location = function () {\n    function Location(bucket, path) {\n        this.bucket = bucket;\n        this.path_ = path;\n    }\n    Object.defineProperty(Location.prototype, \"path\", {\n        get: function get() {\n            return this.path_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Location.prototype.fullServerUrl = function () {\n        var encode = encodeURIComponent;\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n    };\n    Location.prototype.bucketOnlyServerUrl = function () {\n        var encode = encodeURIComponent;\n        return '/b/' + encode(this.bucket) + '/o';\n    };\n    Location.makeFromBucketSpec = function (bucketString) {\n        var bucketLocation;\n        try {\n            bucketLocation = Location.makeFromUrl(bucketString);\n        } catch (e) {\n            // Not valid URL, use as-is. This lets you put bare bucket names in\n            // config.\n            return new Location(bucketString, '');\n        }\n        if (bucketLocation.path === '') {\n            return bucketLocation;\n        } else {\n            throw errorsExports.invalidDefaultBucket(bucketString);\n        }\n    };\n    Location.makeFromUrl = function (url) {\n        var location = null;\n        var bucketDomain = '([A-Za-z0-9.\\\\-]+)';\n        function gsModify(loc) {\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\n                loc.path_ = loc.path_.slice(0, -1);\n            }\n        }\n        var gsPath = '(/(.*))?$';\n        var path = '(/([^?#]*).*)?$';\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n        var gsIndices = { bucket: 1, path: 3 };\n        function httpModify(loc) {\n            loc.path_ = decodeURIComponent(loc.path);\n        }\n        var version = 'v[A-Za-z0-9_]+';\n        var httpRegex = new RegExp('^https?://firebasestorage\\\\.googleapis\\\\.com/' + version + '/b/' + bucketDomain + '/o' + path, 'i');\n        var httpIndices = { bucket: 1, path: 3 };\n        var groups = [{ regex: gsRegex, indices: gsIndices, postModify: gsModify }, { regex: httpRegex, indices: httpIndices, postModify: httpModify }];\n        for (var i = 0; i < groups.length; i++) {\n            var group = groups[i];\n            var captures = group.regex.exec(url);\n            if (captures) {\n                var bucketValue = captures[group.indices.bucket];\n                var pathValue = captures[group.indices.path];\n                if (!pathValue) {\n                    pathValue = '';\n                }\n                location = new Location(bucketValue, pathValue);\n                group.postModify(location);\n                break;\n            }\n        }\n        if (location == null) {\n            throw errorsExports.invalidUrl(url);\n        }\n        return location;\n    };\n    return Location;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\nexports.Location = Location;\n\n\n},{\"./error\":109}],114:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Mapping = undefined;\nexports.noXform_ = noXform_;\nexports.xformPath = xformPath;\nexports.getMappings = getMappings;\nexports.addRef = addRef;\nexports.fromResource = fromResource;\nexports.fromResourceString = fromResourceString;\nexports.toResourceString = toResourceString;\nexports.metadataValidator = metadataValidator;\n\nvar _json = require('./json');\n\nvar json = _interopRequireWildcard(_json);\n\nvar _location = require('./location');\n\nvar _path = require('./path');\n\nvar path = _interopRequireWildcard(_path);\n\nvar _type = require('./type');\n\nvar type = _interopRequireWildcard(_type);\n\nvar _url = require('./url');\n\nvar UrlUtils = _interopRequireWildcard(_url);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction noXform_(metadata, value) {\n    return value;\n}\n/**\n * @struct\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar Mapping = function () {\n    function Mapping(server, opt_local, opt_writable, opt_xform) {\n        this.server = server;\n        this.local = opt_local || server;\n        this.writable = !!opt_writable;\n        this.xform = opt_xform || noXform_;\n    }\n    return Mapping;\n}();\nexports.Mapping = Mapping;\n\nvar mappings_ = null;\nfunction xformPath(fullPath) {\n    var valid = type.isString(fullPath);\n    if (!valid || fullPath.length < 2) {\n        return fullPath;\n    } else {\n        fullPath = fullPath;\n        return path.lastComponent(fullPath);\n    }\n}\nfunction getMappings() {\n    if (mappings_) {\n        return mappings_;\n    }\n    var mappings = [];\n    mappings.push(new Mapping('bucket'));\n    mappings.push(new Mapping('generation'));\n    mappings.push(new Mapping('metageneration'));\n    mappings.push(new Mapping('name', 'fullPath', true));\n    function mappingsXformPath(metadata, fullPath) {\n        return xformPath(fullPath);\n    }\n    var nameMapping = new Mapping('name');\n    nameMapping.xform = mappingsXformPath;\n    mappings.push(nameMapping);\n    /**\n     * Coerces the second param to a number, if it is defined.\n     */\n    function xformSize(metadata, size) {\n        if (type.isDef(size)) {\n            return +size;\n        } else {\n            return size;\n        }\n    }\n    var sizeMapping = new Mapping('size');\n    sizeMapping.xform = xformSize;\n    mappings.push(sizeMapping);\n    mappings.push(new Mapping('timeCreated'));\n    mappings.push(new Mapping('updated'));\n    mappings.push(new Mapping('md5Hash', null, true));\n    mappings.push(new Mapping('cacheControl', null, true));\n    mappings.push(new Mapping('contentDisposition', null, true));\n    mappings.push(new Mapping('contentEncoding', null, true));\n    mappings.push(new Mapping('contentLanguage', null, true));\n    mappings.push(new Mapping('contentType', null, true));\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\n    /**\n     * Transforms a comma-separated string of tokens into a list of download\n     * URLs.\n     */\n    function xformTokens(metadata, tokens) {\n        var valid = type.isString(tokens) && tokens.length > 0;\n        if (!valid) {\n            // This can happen if objects are uploaded through GCS and retrieved\n            // through list, so we don't want to throw an Error.\n            return [];\n        }\n        var encode = encodeURIComponent;\n        var tokensList = tokens.split(',');\n        var urls = tokensList.map(function (token) {\n            var bucket = metadata['bucket'];\n            var path = metadata['fullPath'];\n            var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n            var base = UrlUtils.makeDownloadUrl(urlPart);\n            var queryString = UrlUtils.makeQueryString({\n                alt: 'media',\n                token: token\n            });\n            return base + queryString;\n        });\n        return urls;\n    }\n    mappings.push(new Mapping('downloadTokens', 'downloadURLs', false, xformTokens));\n    mappings_ = mappings;\n    return mappings_;\n}\nfunction addRef(metadata, authWrapper) {\n    function generateRef() {\n        var bucket = metadata['bucket'];\n        var path = metadata['fullPath'];\n        var loc = new _location.Location(bucket, path);\n        return authWrapper.makeStorageReference(loc);\n    }\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\nfunction fromResource(authWrapper, resource, mappings) {\n    var metadata = {};\n    metadata['type'] = 'file';\n    var len = mappings.length;\n    for (var i = 0; i < len; i++) {\n        var mapping = mappings[i];\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n    }\n    addRef(metadata, authWrapper);\n    return metadata;\n}\nfunction fromResourceString(authWrapper, resourceString, mappings) {\n    var obj = json.jsonObjectOrNull(resourceString);\n    if (obj === null) {\n        return null;\n    }\n    var resource = obj;\n    return fromResource(authWrapper, resource, mappings);\n}\nfunction toResourceString(metadata, mappings) {\n    var resource = {};\n    var len = mappings.length;\n    for (var i = 0; i < len; i++) {\n        var mapping = mappings[i];\n        if (mapping.writable) {\n            resource[mapping.server] = metadata[mapping.local];\n        }\n    }\n    return JSON.stringify(resource);\n}\nfunction metadataValidator(p) {\n    var validType = p && type.isObject(p);\n    if (!validType) {\n        throw 'Expected Metadata object.';\n    }\n    for (var key in p) {\n        var val = p[key];\n        if (key === 'customMetadata') {\n            if (!type.isObject(val)) {\n                throw 'Expected object for \\'customMetadata\\' mapping.';\n            }\n        } else {\n            if (type.isNonNullObject(val)) {\n                throw \"Mapping for '\" + key + \"' cannot be an object.\";\n            }\n        }\n    }\n}\n\n\n},{\"./json\":112,\"./location\":113,\"./path\":117,\"./type\":125,\"./url\":126}],115:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.contains = contains;\nexports.forEach = forEach;\nexports.clone = clone;\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @fileoverview Contains methods for working with objects.\n */\nfunction contains(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nfunction forEach(obj, f) {\n    for (var key in obj) {\n        if (contains(obj, key)) {\n            f(key, obj[key]);\n        }\n    }\n}\nfunction clone(obj) {\n    if (obj == null) {\n        return {};\n    }\n    var c = {};\n    forEach(obj, function (key, val) {\n        c[key] = val;\n    });\n    return c;\n}\n\n\n},{}],116:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Observer = undefined;\n\nvar _type = require('./type');\n\nvar type = _interopRequireWildcard(_type);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * @struct\n */\nvar Observer = function () {\n    function Observer(nextOrObserver, opt_error, opt_complete) {\n        var asFunctions = type.isFunction(nextOrObserver) || type.isDef(opt_error) || type.isDef(opt_complete);\n        if (asFunctions) {\n            this.next = nextOrObserver;\n            this.error = opt_error || null;\n            this.complete = opt_complete || null;\n        } else {\n            var observer = nextOrObserver;\n            this.next = observer.next || null;\n            this.error = observer.error || null;\n            this.complete = observer.complete || null;\n        }\n    }\n    return Observer;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.Observer = Observer;\n\n\n},{\"./type\":125}],117:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parent = parent;\nexports.child = child;\nexports.lastComponent = lastComponent;\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n/**\n * @return Null if the path is already at the root.\n */\nfunction parent(path) {\n    if (path.length == 0) {\n        return null;\n    }\n    var index = path.lastIndexOf('/');\n    if (index === -1) {\n        return '';\n    }\n    var newPath = path.slice(0, index);\n    return newPath;\n}\nfunction child(path, childPath) {\n    var canonicalChildPath = childPath.split('/').filter(function (component) {\n        return component.length > 0;\n    }).join('/');\n    if (path.length === 0) {\n        return canonicalChildPath;\n    } else {\n        return path + '/' + canonicalChildPath;\n    }\n}\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nfunction lastComponent(path) {\n    var index = path.lastIndexOf('/', path.length - 2);\n    if (index === -1) {\n        return path;\n    } else {\n        return path.slice(index + 1);\n    }\n}\n\n\n},{}],118:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.make = make;\nexports.resolve = resolve;\nexports.reject = reject;\n\nvar _promise = require('../../utils/promise');\n\nfunction make(resolver) {\n  return new _promise.PromiseImpl(resolver);\n}\n/**\n * @template T\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @fileoverview Implements the promise abstraction interface for external\n * (public SDK) packaging, which just passes through to the firebase-app impl.\n */\n/**\n * @template T\n * @param {function((function(T): void),\n *                  (function(!Error): void))} resolver\n */\nfunction resolve(value) {\n  return _promise.PromiseImpl.resolve(value);\n}\nfunction reject(error) {\n  return _promise.PromiseImpl.reject(error);\n}\n\n\n},{\"../../utils/promise\":145}],119:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RequestEndStatus = undefined;\nexports.addAuthHeader_ = addAuthHeader_;\nexports.addVersionHeader_ = addVersionHeader_;\nexports.makeRequest = makeRequest;\n\nvar _array = require('./array');\n\nvar array = _interopRequireWildcard(_array);\n\nvar _backoff = require('./backoff');\n\nvar backoff = _interopRequireWildcard(_backoff);\n\nvar _error = require('./error');\n\nvar errorsExports = _interopRequireWildcard(_error);\n\nvar _object = require('./object');\n\nvar object = _interopRequireWildcard(_object);\n\nvar _promise_external = require('./promise_external');\n\nvar promiseimpl = _interopRequireWildcard(_promise_external);\n\nvar _type = require('./type');\n\nvar type = _interopRequireWildcard(_type);\n\nvar _url = require('./url');\n\nvar UrlUtils = _interopRequireWildcard(_url);\n\nvar _xhrio = require('./xhrio');\n\nvar XhrIoExports = _interopRequireWildcard(_xhrio);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * @struct\n * @template T\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\nvar NetworkRequest = function () {\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n        this.pendingXhr_ = null;\n        this.backoffId_ = null;\n        this.resolve_ = null;\n        this.reject_ = null;\n        this.canceled_ = false;\n        this.appDelete_ = false;\n        this.url_ = url;\n        this.method_ = method;\n        this.headers_ = headers;\n        this.body_ = body;\n        this.successCodes_ = successCodes.slice();\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\n        this.callback_ = callback;\n        this.errorCallback_ = errorCallback;\n        this.progressCallback_ = progressCallback;\n        this.timeout_ = timeout;\n        this.pool_ = pool;\n        var self = this;\n        this.promise_ = promiseimpl.make(function (resolve, reject) {\n            self.resolve_ = resolve;\n            self.reject_ = reject;\n            self.start_();\n        });\n    }\n    /**\n     * Actually starts the retry loop.\n     */\n    NetworkRequest.prototype.start_ = function () {\n        var self = this;\n        function doTheRequest(backoffCallback, canceled) {\n            if (canceled) {\n                backoffCallback(false, new RequestEndStatus(false, null, true));\n                return;\n            }\n            var xhr = self.pool_.createXhrIo();\n            self.pendingXhr_ = xhr;\n            function progressListener(progressEvent) {\n                var loaded = progressEvent.loaded;\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n                if (self.progressCallback_ !== null) {\n                    self.progressCallback_(loaded, total);\n                }\n            }\n            if (self.progressCallback_ !== null) {\n                xhr.addUploadProgressListener(progressListener);\n            }\n            xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n                if (self.progressCallback_ !== null) {\n                    xhr.removeUploadProgressListener(progressListener);\n                }\n                self.pendingXhr_ = null;\n                xhr = xhr;\n                var hitServer = xhr.getErrorCode() === XhrIoExports.ErrorCode.NO_ERROR;\n                var status = xhr.getStatus();\n                if (!hitServer || self.isRetryStatusCode_(status)) {\n                    var wasCanceled = xhr.getErrorCode() === XhrIoExports.ErrorCode.ABORT;\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n                    return;\n                }\n                var successCode = array.contains(self.successCodes_, status);\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\n            });\n        }\n        /**\n         * @param requestWentThrough True if the request eventually went\n         *     through, false if it hit the retry limit or was canceled.\n         */\n        function backoffDone(requestWentThrough, status) {\n            var resolve = self.resolve_;\n            var reject = self.reject_;\n            var xhr = status.xhr;\n            if (status.wasSuccessCode) {\n                try {\n                    var result = self.callback_(xhr, xhr.getResponseText());\n                    if (type.isJustDef(result)) {\n                        resolve(result);\n                    } else {\n                        resolve();\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            } else {\n                if (xhr !== null) {\n                    var err = errorsExports.unknown();\n                    err.setServerResponseProp(xhr.getResponseText());\n                    if (self.errorCallback_) {\n                        reject(self.errorCallback_(xhr, err));\n                    } else {\n                        reject(err);\n                    }\n                } else {\n                    if (status.canceled) {\n                        var err = self.appDelete_ ? errorsExports.appDeleted() : errorsExports.canceled();\n                        reject(err);\n                    } else {\n                        var err = errorsExports.retryLimitExceeded();\n                        reject(err);\n                    }\n                }\n            }\n        }\n        if (this.canceled_) {\n            backoffDone(false, new RequestEndStatus(false, null, true));\n        } else {\n            this.backoffId_ = backoff.start(doTheRequest, backoffDone, this.timeout_);\n        }\n    };\n    /** @inheritDoc */\n    NetworkRequest.prototype.getPromise = function () {\n        return this.promise_;\n    };\n    /** @inheritDoc */\n    NetworkRequest.prototype.cancel = function (appDelete) {\n        this.canceled_ = true;\n        this.appDelete_ = appDelete || false;\n        if (this.backoffId_ !== null) {\n            backoff.stop(this.backoffId_);\n        }\n        if (this.pendingXhr_ !== null) {\n            this.pendingXhr_.abort();\n        }\n    };\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n        // The codes for which to retry came from this page:\n        // https://cloud.google.com/storage/docs/exponential-backoff\n        var isFiveHundredCode = status >= 500 && status < 600;\n        var extraRetryCodes = [\n        // Request Timeout: web server didn't receive full request in time.\n        408,\n        // Too Many Requests: you're getting rate-limited, basically.\n        429];\n        var isExtraRetryCode = array.contains(extraRetryCodes, status);\n        var isRequestSpecificRetryCode = array.contains(this.additionalRetryCodes_, status);\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n    };\n    return NetworkRequest;\n}();\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled Defaults to false.\n * @struct\n */\nvar RequestEndStatus = function () {\n    function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {\n        this.wasSuccessCode = wasSuccessCode;\n        this.xhr = xhr;\n        this.canceled = !!opt_canceled;\n    }\n    return RequestEndStatus;\n}();\nexports.RequestEndStatus = RequestEndStatus;\nfunction addAuthHeader_(headers, authToken) {\n    if (authToken !== null && authToken.length > 0) {\n        headers['Authorization'] = 'Firebase ' + authToken;\n    }\n}\nfunction addVersionHeader_(headers) {\n    var number = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + number;\n}\n/**\n * @template T\n */\nfunction makeRequest(requestInfo, authToken, pool) {\n    var queryPart = UrlUtils.makeQueryString(requestInfo.urlParams);\n    var url = requestInfo.url + queryPart;\n    var headers = object.clone(requestInfo.headers);\n    addAuthHeader_(headers, authToken);\n    addVersionHeader_(headers);\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n\n\n},{\"./array\":103,\"./backoff\":106,\"./error\":109,\"./object\":115,\"./promise_external\":118,\"./type\":125,\"./url\":126,\"./xhrio\":127}],120:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar RequestInfo = function () {\n    function RequestInfo(url, method,\n    /**\n       * Returns the value with which to resolve the request's promise. Only called\n       * if the request is successful. Throw from this function to reject the\n       * returned Request's promise with the thrown error.\n       * Note: The XhrIo passed to this function may be reused after this callback\n       * returns. Do not keep a reference to it in any way.\n       */\n    handler, timeout) {\n        this.url = url;\n        this.method = method;\n        this.handler = handler;\n        this.timeout = timeout;\n        this.urlParams = {};\n        this.headers = {};\n        this.body = null;\n        this.errorHandler = null;\n        /**\n         * Called with the current number of bytes uploaded and total size (-1 if not\n         * computable) of the request body (i.e. used to report upload progress).\n         */\n        this.progressCallback = null;\n        this.successCodes = [200];\n        this.additionalRetryCodes = [];\n    }\n    return RequestInfo;\n}();\nexports.RequestInfo = RequestInfo;\n\n\n},{}],121:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RequestMap = undefined;\n\nvar _object = require('./object');\n\nvar object = _interopRequireWildcard(_object);\n\nvar _constants = require('./constants');\n\nvar constants = _interopRequireWildcard(_constants);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * @struct\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar RequestMap = function () {\n    function RequestMap() {\n        this.map_ = {};\n        this.id_ = constants.minSafeInteger;\n    }\n    /**\n     * Registers the given request with this map.\n     * The request is unregistered when it completes.\n     * @param r The request to register.\n     */\n    RequestMap.prototype.addRequest = function (r) {\n        var id = this.id_;\n        this.id_++;\n        this.map_[id] = r;\n        var self = this;\n        function unmap() {\n            delete self.map_[id];\n        }\n        r.getPromise().then(unmap, unmap);\n    };\n    /**\n     * Cancels all registered requests.\n     */\n    RequestMap.prototype.clear = function () {\n        object.forEach(this.map_, function (key, val) {\n            if (val) {\n                val.cancel(true);\n            }\n        });\n        this.map_ = {};\n    };\n    return RequestMap;\n}();\nexports.RequestMap = RequestMap;\n\n\n},{\"./constants\":108,\"./object\":115}],122:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.resumableUploadChunkSize = exports.ResumableUploadStatus = undefined;\nexports.handlerCheck = handlerCheck;\nexports.metadataHandler = metadataHandler;\nexports.sharedErrorHandler = sharedErrorHandler;\nexports.objectErrorHandler = objectErrorHandler;\nexports.getMetadata = getMetadata;\nexports.updateMetadata = updateMetadata;\nexports.deleteObject = deleteObject;\nexports.determineContentType_ = determineContentType_;\nexports.metadataForUpload_ = metadataForUpload_;\nexports.multipartUpload = multipartUpload;\nexports.checkResumeHeader_ = checkResumeHeader_;\nexports.createResumableUpload = createResumableUpload;\nexports.getResumableUploadStatus = getResumableUploadStatus;\nexports.continueResumableUpload = continueResumableUpload;\n\nvar _array = require('./array');\n\nvar array = _interopRequireWildcard(_array);\n\nvar _blob = require('./blob');\n\nvar _error = require('./error');\n\nvar errorsExports = _interopRequireWildcard(_error);\n\nvar _metadata = require('./metadata');\n\nvar MetadataUtils = _interopRequireWildcard(_metadata);\n\nvar _object = require('./object');\n\nvar object = _interopRequireWildcard(_object);\n\nvar _requestinfo = require('./requestinfo');\n\nvar _type = require('./type');\n\nvar type = _interopRequireWildcard(_type);\n\nvar _url = require('./url');\n\nvar UrlUtils = _interopRequireWildcard(_url);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nfunction handlerCheck(cndn) {\n    if (!cndn) {\n        throw errorsExports.unknown();\n    }\n}\nfunction metadataHandler(authWrapper, mappings) {\n    function handler(xhr, text) {\n        var metadata = MetadataUtils.fromResourceString(authWrapper, text, mappings);\n        handlerCheck(metadata !== null);\n        return metadata;\n    }\n    return handler;\n}\nfunction sharedErrorHandler(location) {\n    function errorHandler(xhr, err) {\n        var newErr;\n        if (xhr.getStatus() === 401) {\n            newErr = errorsExports.unauthenticated();\n        } else {\n            if (xhr.getStatus() === 402) {\n                newErr = errorsExports.quotaExceeded(location.bucket);\n            } else {\n                if (xhr.getStatus() === 403) {\n                    newErr = errorsExports.unauthorized(location.path);\n                } else {\n                    newErr = err;\n                }\n            }\n        }\n        newErr.setServerResponseProp(err.serverResponseProp());\n        return newErr;\n    }\n    return errorHandler;\n}\nfunction objectErrorHandler(location) {\n    var shared = sharedErrorHandler(location);\n    function errorHandler(xhr, err) {\n        var newErr = shared(xhr, err);\n        if (xhr.getStatus() === 404) {\n            newErr = errorsExports.objectNotFound(location.path);\n        }\n        newErr.setServerResponseProp(err.serverResponseProp());\n        return newErr;\n    }\n    return errorHandler;\n}\nfunction getMetadata(authWrapper, location, mappings) {\n    var urlPart = location.fullServerUrl();\n    var url = UrlUtils.makeNormalUrl(urlPart);\n    var method = 'GET';\n    var timeout = authWrapper.maxOperationRetryTime();\n    var requestInfo = new _requestinfo.RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n    requestInfo.errorHandler = objectErrorHandler(location);\n    return requestInfo;\n}\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\n    var urlPart = location.fullServerUrl();\n    var url = UrlUtils.makeNormalUrl(urlPart);\n    var method = 'PATCH';\n    var body = MetadataUtils.toResourceString(metadata, mappings);\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\n    var timeout = authWrapper.maxOperationRetryTime();\n    var requestInfo = new _requestinfo.RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n    requestInfo.headers = headers;\n    requestInfo.body = body;\n    requestInfo.errorHandler = objectErrorHandler(location);\n    return requestInfo;\n}\nfunction deleteObject(authWrapper, location) {\n    var urlPart = location.fullServerUrl();\n    var url = UrlUtils.makeNormalUrl(urlPart);\n    var method = 'DELETE';\n    var timeout = authWrapper.maxOperationRetryTime();\n    function handler(xhr, text) {}\n    var requestInfo = new _requestinfo.RequestInfo(url, method, handler, timeout);\n    requestInfo.successCodes = [200, 204];\n    requestInfo.errorHandler = objectErrorHandler(location);\n    return requestInfo;\n}\nfunction determineContentType_(metadata, blob) {\n    return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\nfunction metadataForUpload_(location, blob, opt_metadata) {\n    var metadata = object.clone(opt_metadata);\n    metadata['fullPath'] = location.path;\n    metadata['size'] = blob.size();\n    if (!metadata['contentType']) {\n        metadata['contentType'] = determineContentType_(null, blob);\n    }\n    return metadata;\n}\nfunction multipartUpload(authWrapper, location, mappings, blob, opt_metadata) {\n    var urlPart = location.bucketOnlyServerUrl();\n    var headers = {\n        'X-Goog-Upload-Protocol': 'multipart'\n    };\n    function genBoundary() {\n        var str = '';\n        for (var i = 0; i < 2; i++) {\n            str = str + Math.random().toString().slice(2);\n        }\n        return str;\n    }\n    var boundary = genBoundary();\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\n    var metadataString = MetadataUtils.toResourceString(metadata, mappings);\n    var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata['contentType'] + '\\r\\n\\r\\n';\n    var postBlobPart = '\\r\\n--' + boundary + '--';\n    var body = _blob.FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n    if (body === null) {\n        throw errorsExports.cannotSliceBlob();\n    }\n    var urlParams = { name: metadata['fullPath'] };\n    var url = UrlUtils.makeUploadUrl(urlPart);\n    var method = 'POST';\n    var timeout = authWrapper.maxUploadRetryTime();\n    var requestInfo = new _requestinfo.RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n    requestInfo.urlParams = urlParams;\n    requestInfo.headers = headers;\n    requestInfo.body = body.uploadData();\n    requestInfo.errorHandler = sharedErrorHandler(location);\n    return requestInfo;\n}\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n * @struct\n */\nvar ResumableUploadStatus = function () {\n    function ResumableUploadStatus(current, total, finalized, metadata) {\n        this.current = current;\n        this.total = total;\n        this.finalized = !!finalized;\n        this.metadata = metadata || null;\n    }\n    return ResumableUploadStatus;\n}();\nexports.ResumableUploadStatus = ResumableUploadStatus;\nfunction checkResumeHeader_(xhr, opt_allowed) {\n    var status;\n    try {\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\n    } catch (e) {\n        handlerCheck(false);\n    }\n    var allowed = opt_allowed || ['active'];\n    handlerCheck(array.contains(allowed, status));\n    return status;\n}\nfunction createResumableUpload(authWrapper, location, mappings, blob, opt_metadata) {\n    var urlPart = location.bucketOnlyServerUrl();\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\n    var urlParams = { name: metadata['fullPath'] };\n    var url = UrlUtils.makeUploadUrl(urlPart);\n    var method = 'POST';\n    var headers = {\n        'X-Goog-Upload-Protocol': 'resumable',\n        'X-Goog-Upload-Command': 'start',\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\n        'X-Goog-Upload-Header-Content-Type': metadata['contentType'],\n        'Content-Type': 'application/json; charset=utf-8'\n    };\n    var body = MetadataUtils.toResourceString(metadata, mappings);\n    var timeout = authWrapper.maxUploadRetryTime();\n    function handler(xhr, text) {\n        checkResumeHeader_(xhr);\n        var url;\n        try {\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\n        } catch (e) {\n            handlerCheck(false);\n        }\n        handlerCheck(type.isString(url));\n        return url;\n    }\n    var requestInfo = new _requestinfo.RequestInfo(url, method, handler, timeout);\n    requestInfo.urlParams = urlParams;\n    requestInfo.headers = headers;\n    requestInfo.body = body;\n    requestInfo.errorHandler = sharedErrorHandler(location);\n    return requestInfo;\n}\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\n    var headers = { 'X-Goog-Upload-Command': 'query' };\n    function handler(xhr, text) {\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\n        var sizeString;\n        try {\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n        } catch (e) {\n            handlerCheck(false);\n        }\n        var size = parseInt(sizeString, 10);\n        handlerCheck(!isNaN(size));\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\n    }\n    var method = 'POST';\n    var timeout = authWrapper.maxUploadRetryTime();\n    var requestInfo = new _requestinfo.RequestInfo(url, method, handler, timeout);\n    requestInfo.headers = headers;\n    requestInfo.errorHandler = sharedErrorHandler(location);\n    return requestInfo;\n}\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nvar resumableUploadChunkSize = exports.resumableUploadChunkSize = 256 * 1024;\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param opt_status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, opt_status, opt_progressCallback) {\n    // TODO(andysoto): standardize on internal asserts\n    // assert(!(opt_status && opt_status.finalized));\n    var status = new ResumableUploadStatus(0, 0);\n    if (opt_status) {\n        status.current = opt_status.current;\n        status.total = opt_status.total;\n    } else {\n        status.current = 0;\n        status.total = blob.size();\n    }\n    if (blob.size() !== status.total) {\n        throw errorsExports.serverFileWrongSize();\n    }\n    var bytesLeft = status.total - status.current;\n    var bytesToUpload = bytesLeft;\n    if (chunkSize > 0) {\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\n    }\n    var startByte = status.current;\n    var endByte = startByte + bytesToUpload;\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n    var headers = {\n        'X-Goog-Upload-Command': uploadCommand,\n        'X-Goog-Upload-Offset': status.current\n    };\n    var body = blob.slice(startByte, endByte);\n    if (body === null) {\n        throw errorsExports.cannotSliceBlob();\n    }\n    function handler(xhr, text) {\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\n        // the 'x-range-md5' header comes back with status code 308 responses.\n        // We'll only be able to bail out though, because you can't re-upload a\n        // range that you previously uploaded.\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n        var newCurrent = status.current + bytesToUpload;\n        var size = blob.size();\n        var metadata;\n        if (uploadStatus === 'final') {\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\n        } else {\n            metadata = null;\n        }\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n    }\n    var method = 'POST';\n    var timeout = authWrapper.maxUploadRetryTime();\n    var requestInfo = new _requestinfo.RequestInfo(url, method, handler, timeout);\n    requestInfo.headers = headers;\n    requestInfo.body = body.uploadData();\n    requestInfo.progressCallback = opt_progressCallback || null;\n    requestInfo.errorHandler = sharedErrorHandler(location);\n    return requestInfo;\n}\n\n\n},{\"./array\":103,\"./blob\":107,\"./error\":109,\"./metadata\":114,\"./object\":115,\"./requestinfo\":120,\"./type\":125,\"./url\":126}],123:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StringData = exports.StringFormat = undefined;\nexports.formatValidator = formatValidator;\nexports.dataFromString = dataFromString;\nexports.utf8Bytes_ = utf8Bytes_;\nexports.percentEncodedBytes_ = percentEncodedBytes_;\nexports.base64Bytes_ = base64Bytes_;\nexports.dataURLBytes_ = dataURLBytes_;\nexports.dataURLContentType_ = dataURLContentType_;\n\nvar _error = require('./error');\n\nvar errorsExports = _interopRequireWildcard(_error);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar StringFormat = exports.StringFormat = {\n    RAW: 'raw',\n    BASE64: 'base64',\n    BASE64URL: 'base64url',\n    DATA_URL: 'data_url'\n}; /**\n   * Copyright 2017 Google Inc.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\nfunction formatValidator(stringFormat) {\n    switch (stringFormat) {\n        case StringFormat.RAW:\n        case StringFormat.BASE64:\n        case StringFormat.BASE64URL:\n        case StringFormat.DATA_URL:\n            return;\n        default:\n            throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n    }\n}\n/**\n * @struct\n */\nvar StringData = function () {\n    function StringData(data, opt_contentType) {\n        this.data = data;\n        this.contentType = opt_contentType || null;\n    }\n    return StringData;\n}();\nexports.StringData = StringData;\nfunction dataFromString(format, string) {\n    switch (format) {\n        case StringFormat.RAW:\n            return new StringData(utf8Bytes_(string));\n        case StringFormat.BASE64:\n        case StringFormat.BASE64URL:\n            return new StringData(base64Bytes_(format, string));\n        case StringFormat.DATA_URL:\n            return new StringData(dataURLBytes_(string), dataURLContentType_(string));\n    }\n    // assert(false);\n    throw errorsExports.unknown();\n}\nfunction utf8Bytes_(string) {\n    var b = [];\n    for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n        if (c <= 127) {\n            b.push(c);\n        } else {\n            if (c <= 2047) {\n                b.push(192 | c >> 6, 128 | c & 63);\n            } else {\n                if ((c & 64512) == 55296) {\n                    // The start of a surrogate pair.\n                    var valid = i < string.length - 1 && (string.charCodeAt(i + 1) & 64512) == 56320;\n                    if (!valid) {\n                        // The second surrogate wasn't there.\n                        b.push(239, 191, 189);\n                    } else {\n                        var hi = c;\n                        var lo = string.charCodeAt(++i);\n                        c = 65536 | (hi & 1023) << 10 | lo & 1023;\n                        b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n                    }\n                } else {\n                    if ((c & 64512) == 56320) {\n                        // Invalid low surrogate.\n                        b.push(239, 191, 189);\n                    } else {\n                        b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n                    }\n                }\n            }\n        }\n    }\n    return new Uint8Array(b);\n}\nfunction percentEncodedBytes_(string) {\n    var decoded;\n    try {\n        decoded = decodeURIComponent(string);\n    } catch (e) {\n        throw errorsExports.invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n    }\n    return utf8Bytes_(decoded);\n}\nfunction base64Bytes_(format, string) {\n    switch (format) {\n        case StringFormat.BASE64:\n            {\n                var hasMinus = string.indexOf('-') !== -1;\n                var hasUnder = string.indexOf('_') !== -1;\n                if (hasMinus || hasUnder) {\n                    var invalidChar = hasMinus ? '-' : '_';\n                    throw errorsExports.invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n                }\n                break;\n            }\n        case StringFormat.BASE64URL:\n            {\n                var hasPlus = string.indexOf('+') !== -1;\n                var hasSlash = string.indexOf('/') !== -1;\n                if (hasPlus || hasSlash) {\n                    var invalidChar = hasPlus ? '+' : '/';\n                    throw errorsExports.invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n                }\n                string = string.replace(/-/g, '+').replace(/_/g, '/');\n                break;\n            }\n    }\n    var bytes;\n    try {\n        bytes = atob(string);\n    } catch (e) {\n        throw errorsExports.invalidFormat(format, 'Invalid character found');\n    }\n    var array = new Uint8Array(bytes.length);\n    for (var i = 0; i < bytes.length; i++) {\n        array[i] = bytes.charCodeAt(i);\n    }\n    return array;\n}\n/**\n * @struct\n */\nvar DataURLParts = function () {\n    function DataURLParts(dataURL) {\n        this.base64 = false;\n        this.contentType = null;\n        var matches = dataURL.match(/^data:([^,]+)?,/);\n        if (matches === null) {\n            throw errorsExports.invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n        }\n        var middle = matches[1] || null;\n        if (middle != null) {\n            this.base64 = endsWith(middle, ';base64');\n            this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n        }\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n    }\n    return DataURLParts;\n}();\nfunction dataURLBytes_(string) {\n    var parts = new DataURLParts(string);\n    if (parts.base64) {\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\n    } else {\n        return percentEncodedBytes_(parts.rest);\n    }\n}\nfunction dataURLContentType_(string) {\n    var parts = new DataURLParts(string);\n    return parts.contentType;\n}\nfunction endsWith(s, end) {\n    var longEnough = s.length >= end.length;\n    if (!longEnough) {\n        return false;\n    }\n    return s.substring(s.length - end.length) === end;\n}\n\n\n},{\"./error\":109}],124:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.taskStateFromInternalTaskState = taskStateFromInternalTaskState;\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar TaskEvent = exports.TaskEvent = {\n    /** Triggered whenever the task changes or progress is updated. */\n    STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = exports.InternalTaskState = {\n    RUNNING: 'running',\n    PAUSING: 'pausing',\n    PAUSED: 'paused',\n    SUCCESS: 'success',\n    CANCELING: 'canceling',\n    CANCELED: 'canceled',\n    ERROR: 'error'\n};\nvar TaskState = exports.TaskState = {\n    /** The task is currently transferring data. */\n    RUNNING: 'running',\n    /** The task was paused by the user. */\n    PAUSED: 'paused',\n    /** The task completed successfully. */\n    SUCCESS: 'success',\n    /** The task was canceled. */\n    CANCELED: 'canceled',\n    /** The task failed with an error. */\n    ERROR: 'error'\n};\nfunction taskStateFromInternalTaskState(state) {\n    switch (state) {\n        case InternalTaskState.RUNNING:\n        case InternalTaskState.PAUSING:\n        case InternalTaskState.CANCELING:\n            return TaskState.RUNNING;\n        case InternalTaskState.PAUSED:\n            return TaskState.PAUSED;\n        case InternalTaskState.SUCCESS:\n            return TaskState.SUCCESS;\n        case InternalTaskState.CANCELED:\n            return TaskState.CANCELED;\n        case InternalTaskState.ERROR:\n            return TaskState.ERROR;\n        default:\n            // TODO(andysoto): assert(false);\n            return TaskState.ERROR;\n    }\n}\n\n\n},{}],125:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.isDef = isDef;\nexports.isJustDef = isJustDef;\nexports.isFunction = isFunction;\nexports.isObject = isObject;\nexports.isNonNullObject = isNonNullObject;\nexports.isNonArrayObject = isNonArrayObject;\nexports.isString = isString;\nexports.isNumber = isNumber;\nexports.isNativeBlob = isNativeBlob;\nexports.isNativeBlobDefined = isNativeBlobDefined;\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @return False if the object is undefined or null, true otherwise.\n */\nfunction isDef(p) {\n    return p != null;\n}\nfunction isJustDef(p) {\n    return p !== void 0;\n}\nfunction isFunction(p) {\n    return typeof p === 'function';\n}\nfunction isObject(p) {\n    return (typeof p === 'undefined' ? 'undefined' : _typeof(p)) === 'object';\n}\nfunction isNonNullObject(p) {\n    return isObject(p) && p !== null;\n}\nfunction isNonArrayObject(p) {\n    return isObject(p) && !Array.isArray(p);\n}\nfunction isString(p) {\n    return typeof p === 'string' || p instanceof String;\n}\nfunction isNumber(p) {\n    return typeof p === 'number' || p instanceof Number;\n}\nfunction isNativeBlob(p) {\n    return isNativeBlobDefined() && p instanceof Blob;\n}\nfunction isNativeBlobDefined() {\n    return typeof Blob !== 'undefined';\n}\n\n\n},{}],126:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.makeNormalUrl = makeNormalUrl;\nexports.makeDownloadUrl = makeDownloadUrl;\nexports.makeUploadUrl = makeUploadUrl;\nexports.makeQueryString = makeQueryString;\n\nvar _constants = require('./constants');\n\nvar constants = _interopRequireWildcard(_constants);\n\nvar _object = require('./object');\n\nvar object = _interopRequireWildcard(_object);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nfunction makeNormalUrl(urlPart) {\n    return constants.domainBase + constants.apiBaseUrl + urlPart;\n}\nfunction makeDownloadUrl(urlPart) {\n    return constants.downloadBase + constants.apiBaseUrl + urlPart;\n}\nfunction makeUploadUrl(urlPart) {\n    return constants.domainBase + constants.apiUploadBaseUrl + urlPart;\n}\nfunction makeQueryString(params) {\n    var encode = encodeURIComponent;\n    var queryPart = '?';\n    object.forEach(params, function (key, val) {\n        var nextPart = encode(key) + '=' + encode(val);\n        queryPart = queryPart + nextPart + '&';\n    });\n    // Chop off the extra '&' or '?' on the end\n    queryPart = queryPart.slice(0, -1);\n    return queryPart;\n}\n\n\n},{\"./constants\":108,\"./object\":115}],127:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @enum{number}\n */\nvar ErrorCode = exports.ErrorCode = undefined;\n(function (ErrorCode) {\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (exports.ErrorCode = ErrorCode = {}));\n\n\n},{}],128:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.NetworkXhrIo = undefined;\n\nvar _error = require('./error');\n\nvar errorsExports = _interopRequireWildcard(_error);\n\nvar _object = require('./object');\n\nvar object = _interopRequireWildcard(_object);\n\nvar _promise_external = require('./promise_external');\n\nvar promiseimpl = _interopRequireWildcard(_promise_external);\n\nvar _type = require('./type');\n\nvar type = _interopRequireWildcard(_type);\n\nvar _xhrio = require('./xhrio');\n\nvar XhrIoExports = _interopRequireWildcard(_xhrio);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\n * doesn't work in React Native on Android.\n */\nvar NetworkXhrIo = function () {\n    function NetworkXhrIo() {\n        var _this = this;\n        this.sent_ = false;\n        this.xhr_ = new XMLHttpRequest();\n        this.errorCode_ = XhrIoExports.ErrorCode.NO_ERROR;\n        this.sendPromise_ = promiseimpl.make(function (resolve, reject) {\n            _this.xhr_.addEventListener('abort', function (event) {\n                _this.errorCode_ = XhrIoExports.ErrorCode.ABORT;\n                resolve(_this);\n            });\n            _this.xhr_.addEventListener('error', function (event) {\n                _this.errorCode_ = XhrIoExports.ErrorCode.NETWORK_ERROR;\n                resolve(_this);\n            });\n            _this.xhr_.addEventListener('load', function (event) {\n                resolve(_this);\n            });\n        });\n    }\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.send = function (url, method, opt_body, opt_headers) {\n        var _this = this;\n        if (this.sent_) {\n            throw errorsExports.internalError('cannot .send() more than once');\n        }\n        this.sent_ = true;\n        this.xhr_.open(method, url, true);\n        if (type.isDef(opt_headers)) {\n            var headers = opt_headers;\n            object.forEach(headers, function (key, val) {\n                _this.xhr_.setRequestHeader(key, val.toString());\n            });\n        }\n        if (type.isDef(opt_body)) {\n            this.xhr_.send(opt_body);\n        } else {\n            this.xhr_.send();\n        }\n        return this.sendPromise_;\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.getErrorCode = function () {\n        if (!this.sent_) {\n            throw errorsExports.internalError('cannot .getErrorCode() before sending');\n        }\n        return this.errorCode_;\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.getStatus = function () {\n        if (!this.sent_) {\n            throw errorsExports.internalError('cannot .getStatus() before sending');\n        }\n        try {\n            return this.xhr_.status;\n        } catch (e) {\n            return -1;\n        }\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.getResponseText = function () {\n        if (!this.sent_) {\n            throw errorsExports.internalError('cannot .getResponseText() before sending');\n        }\n        return this.xhr_.responseText;\n    };\n    /**\n     * Aborts the request.\n     * @override\n     */\n    NetworkXhrIo.prototype.abort = function () {\n        this.xhr_.abort();\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\n        return this.xhr_.getResponseHeader(header);\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n        if (type.isDef(this.xhr_.upload)) {\n            this.xhr_.upload.addEventListener('progress', listener);\n        }\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n        if (type.isDef(this.xhr_.upload)) {\n            this.xhr_.upload.removeEventListener('progress', listener);\n        }\n    };\n    return NetworkXhrIo;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.NetworkXhrIo = NetworkXhrIo;\n\n\n},{\"./error\":109,\"./object\":115,\"./promise_external\":118,\"./type\":125,\"./xhrio\":127}],129:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.XhrIoPool = undefined;\n\nvar _xhrio_network = require('./xhrio_network');\n\n/**\n * Factory-like class for creating XhrIo instances.\n */\nvar XhrIoPool = function () {\n    function XhrIoPool() {}\n    XhrIoPool.prototype.createXhrIo = function () {\n        return new _xhrio_network.NetworkXhrIo();\n    };\n    return XhrIoPool;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.XhrIoPool = XhrIoPool;\n\n\n},{\"./xhrio_network\":128}],130:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Reference = undefined;\n\nvar _args = require('./implementation/args');\n\nvar args = _interopRequireWildcard(_args);\n\nvar _blob = require('./implementation/blob');\n\nvar _error = require('./implementation/error');\n\nvar errorsExports = _interopRequireWildcard(_error);\n\nvar _location = require('./implementation/location');\n\nvar _metadata = require('./implementation/metadata');\n\nvar metadata = _interopRequireWildcard(_metadata);\n\nvar _object = require('./implementation/object');\n\nvar object = _interopRequireWildcard(_object);\n\nvar _path = require('./implementation/path');\n\nvar path = _interopRequireWildcard(_path);\n\nvar _requests = require('./implementation/requests');\n\nvar requests = _interopRequireWildcard(_requests);\n\nvar _string = require('./implementation/string');\n\nvar fbsString = _interopRequireWildcard(_string);\n\nvar _type = require('./implementation/type');\n\nvar type = _interopRequireWildcard(_type);\n\nvar _task = require('./task');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @param location An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @fileoverview Defines the Firebase Storage Reference class.\n */\nvar Reference = function () {\n    function Reference(authWrapper, location) {\n        this.authWrapper = authWrapper;\n        if (location instanceof _location.Location) {\n            this.location = location;\n        } else {\n            this.location = _location.Location.makeFromUrl(location);\n        }\n    }\n    /**\n     * @return The URL for the bucket and path this object references,\n     *     in the form gs://<bucket>/<object-path>\n     * @override\n     */\n    Reference.prototype.toString = function () {\n        args.validate('toString', [], arguments);\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\n    };\n    Reference.prototype.newRef = function (authWrapper, location) {\n        return new Reference(authWrapper, location);\n    };\n    Reference.prototype.mappings = function () {\n        return metadata.getMappings();\n    };\n    /**\n     * @return A reference to the object obtained by\n     *     appending childPath, removing any duplicate, beginning, or trailing\n     *     slashes.\n     */\n    Reference.prototype.child = function (childPath) {\n        args.validate('child', [args.stringSpec()], arguments);\n        var newPath = path.child(this.location.path, childPath);\n        var location = new _location.Location(this.location.bucket, newPath);\n        return this.newRef(this.authWrapper, location);\n    };\n    Object.defineProperty(Reference.prototype, \"parent\", {\n        /**\n         * @return A reference to the parent of the\n         *     current object, or null if the current object is the root.\n         */\n        get: function get() {\n            var newPath = path.parent(this.location.path);\n            if (newPath === null) {\n                return null;\n            }\n            var location = new _location.Location(this.location.bucket, newPath);\n            return this.newRef(this.authWrapper, location);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"root\", {\n        /**\n         * @return An reference to the root of this\n         *     object's bucket.\n         */\n        get: function get() {\n            var location = new _location.Location(this.location.bucket, '');\n            return this.newRef(this.authWrapper, location);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"bucket\", {\n        get: function get() {\n            return this.location.bucket;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\n        get: function get() {\n            return this.location.path;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"name\", {\n        get: function get() {\n            return path.lastComponent(this.location.path);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"storage\", {\n        get: function get() {\n            return this.authWrapper.service();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Uploads a blob to this object's location.\n     * @param data The blob to upload.\n     * @return An UploadTask that lets you control and\n     *     observe the upload.\n     */\n    Reference.prototype.put = function (data, metadata) {\n        if (metadata === void 0) {\n            metadata = null;\n        }\n        args.validate('put', [args.uploadDataSpec(), args.metadataSpec(true)], arguments);\n        this.throwIfRoot_('put');\n        return new _task.UploadTask(this, this.authWrapper, this.location, this.mappings(), new _blob.FbsBlob(data), metadata);\n    };\n    /**\n     * Uploads a string to this object's location.\n     * @param string The string to upload.\n     * @param opt_format The format of the string to upload.\n     * @return An UploadTask that lets you control and\n     *     observe the upload.\n     */\n    Reference.prototype.putString = function (string, format, opt_metadata) {\n        if (format === void 0) {\n            format = _string.StringFormat.RAW;\n        }\n        args.validate('putString', [args.stringSpec(), args.stringSpec(fbsString.formatValidator, true), args.metadataSpec(true)], arguments);\n        this.throwIfRoot_('putString');\n        var data = fbsString.dataFromString(format, string);\n        var metadata = object.clone(opt_metadata);\n        if (!type.isDef(metadata['contentType']) && type.isDef(data.contentType)) {\n            metadata['contentType'] = data.contentType;\n        }\n        return new _task.UploadTask(this, this.authWrapper, this.location, this.mappings(), new _blob.FbsBlob(data.data, true), metadata);\n    };\n    /**\n     * Deletes the object at this location.\n     * @return A promise that resolves if the deletion succeeds.\n     */\n    Reference.prototype.delete = function () {\n        args.validate('delete', [], arguments);\n        this.throwIfRoot_('delete');\n        var self = this;\n        return this.authWrapper.getAuthToken().then(function (authToken) {\n            var requestInfo = requests.deleteObject(self.authWrapper, self.location);\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n        });\n    };\n    /**\n     *     A promise that resolves with the metadata for this object. If this\n     *     object doesn't exist or metadata cannot be retreived, the promise is\n     *     rejected.\n     */\n    Reference.prototype.getMetadata = function () {\n        args.validate('getMetadata', [], arguments);\n        this.throwIfRoot_('getMetadata');\n        var self = this;\n        return this.authWrapper.getAuthToken().then(function (authToken) {\n            var requestInfo = requests.getMetadata(self.authWrapper, self.location, self.mappings());\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n        });\n    };\n    /**\n     * Updates the metadata for this object.\n     * @param metadata The new metadata for the object.\n     *     Only values that have been explicitly set will be changed. Explicitly\n     *     setting a value to null will remove the metadata.\n     * @return A promise that resolves\n     *     with the new metadata for this object.\n     *     @see firebaseStorage.Reference.prototype.getMetadata\n     */\n    Reference.prototype.updateMetadata = function (metadata) {\n        args.validate('updateMetadata', [args.metadataSpec()], arguments);\n        this.throwIfRoot_('updateMetadata');\n        var self = this;\n        return this.authWrapper.getAuthToken().then(function (authToken) {\n            var requestInfo = requests.updateMetadata(self.authWrapper, self.location, metadata, self.mappings());\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n        });\n    };\n    /**\n     * @return A promise that resolves with the download\n     *     URL for this object.\n     */\n    Reference.prototype.getDownloadURL = function () {\n        args.validate('getDownloadURL', [], arguments);\n        this.throwIfRoot_('getDownloadURL');\n        return this.getMetadata().then(function (metadata) {\n            var url = metadata['downloadURLs'][0];\n            if (type.isDef(url)) {\n                return url;\n            } else {\n                throw errorsExports.noDownloadURL();\n            }\n        });\n    };\n    Reference.prototype.throwIfRoot_ = function (name) {\n        if (this.location.path === '') {\n            throw errorsExports.invalidRootOperation(name);\n        }\n    };\n    return Reference;\n}();\nexports.Reference = Reference;\n\n\n},{\"./implementation/args\":102,\"./implementation/blob\":107,\"./implementation/error\":109,\"./implementation/location\":113,\"./implementation/metadata\":114,\"./implementation/object\":115,\"./implementation/path\":117,\"./implementation/requests\":122,\"./implementation/string\":123,\"./implementation/type\":125,\"./task\":132}],131:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ServiceInternals = exports.Service = undefined;\n\nvar _args = require('./implementation/args');\n\nvar args = _interopRequireWildcard(_args);\n\nvar _authwrapper = require('./implementation/authwrapper');\n\nvar _location = require('./implementation/location');\n\nvar _promise_external = require('./implementation/promise_external');\n\nvar fbsPromiseImpl = _interopRequireWildcard(_promise_external);\n\nvar _request = require('./implementation/request');\n\nvar RequestExports = _interopRequireWildcard(_request);\n\nvar _reference = require('./reference');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n *\n * @struct\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar Service = function () {\n    function Service(app, pool, url) {\n        this.bucket_ = null;\n        function maker(authWrapper, loc) {\n            return new _reference.Reference(authWrapper, loc);\n        }\n        this.authWrapper_ = new _authwrapper.AuthWrapper(app, maker, RequestExports.makeRequest, this, pool);\n        this.app_ = app;\n        if (url != null) {\n            this.bucket_ = _location.Location.makeFromBucketSpec(url);\n        } else {\n            var authWrapperBucket = this.authWrapper_.bucket();\n            if (authWrapperBucket != null) {\n                this.bucket_ = new _location.Location(authWrapperBucket, '');\n            }\n        }\n        this.internals_ = new ServiceInternals(this);\n    }\n    /**\n     * Returns a firebaseStorage.Reference for the given path in the default\n     * bucket.\n     */\n    Service.prototype.ref = function (path) {\n        function validator(path) {\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\n                throw 'Expected child path but got a URL, use refFromURL instead.';\n            }\n        }\n        args.validate('ref', [args.stringSpec(validator, true)], arguments);\n        if (this.bucket_ == null) {\n            throw new Error('No Storage Bucket defined in Firebase Options.');\n        }\n        var ref = new _reference.Reference(this.authWrapper_, this.bucket_);\n        if (path != null) {\n            return ref.child(path);\n        } else {\n            return ref;\n        }\n    };\n    /**\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\n     * which must be a gs:// or http[s]:// URL.\n     */\n    Service.prototype.refFromURL = function (url) {\n        function validator(p) {\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n                throw 'Expected full URL but got a child path, use ref instead.';\n            }\n            try {\n                _location.Location.makeFromUrl(p);\n            } catch (e) {\n                throw 'Expected valid full URL but got an invalid one.';\n            }\n        }\n        args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);\n        return new _reference.Reference(this.authWrapper_, url);\n    };\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\n        get: function get() {\n            return this.authWrapper_.maxUploadRetryTime();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Service.prototype.setMaxUploadRetryTime = function (time) {\n        args.validate('setMaxUploadRetryTime', [args.nonNegativeNumberSpec()], arguments);\n        this.authWrapper_.setMaxUploadRetryTime(time);\n    };\n    Object.defineProperty(Service.prototype, \"maxOperationRetryTime\", {\n        get: function get() {\n            return this.authWrapper_.maxOperationRetryTime();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Service.prototype.setMaxOperationRetryTime = function (time) {\n        args.validate('setMaxOperationRetryTime', [args.nonNegativeNumberSpec()], arguments);\n        this.authWrapper_.setMaxOperationRetryTime(time);\n    };\n    Object.defineProperty(Service.prototype, \"app\", {\n        get: function get() {\n            return this.app_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\n        get: function get() {\n            return this.internals_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Service;\n}();\nexports.Service = Service;\n/**\n * @struct\n */\n\nvar ServiceInternals = function () {\n    function ServiceInternals(service) {\n        this.service_ = service;\n    }\n    /**\n     * Called when the associated app is deleted.\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\n     */\n    ServiceInternals.prototype.delete = function () {\n        this.service_.authWrapper_.deleteApp();\n        return fbsPromiseImpl.resolve(undefined);\n    };\n    return ServiceInternals;\n}();\nexports.ServiceInternals = ServiceInternals;\n\n\n},{\"./implementation/args\":102,\"./implementation/authwrapper\":105,\"./implementation/location\":113,\"./implementation/promise_external\":118,\"./implementation/request\":119,\"./reference\":130}],132:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.UploadTask = undefined;\n\nvar _taskenums = require('./implementation/taskenums');\n\nvar fbsTaskEnums = _interopRequireWildcard(_taskenums);\n\nvar _observer = require('./implementation/observer');\n\nvar _tasksnapshot = require('./tasksnapshot');\n\nvar _args = require('./implementation/args');\n\nvar fbsArgs = _interopRequireWildcard(_args);\n\nvar _array = require('./implementation/array');\n\nvar fbsArray = _interopRequireWildcard(_array);\n\nvar _async = require('./implementation/async');\n\nvar _error = require('./implementation/error');\n\nvar errors = _interopRequireWildcard(_error);\n\nvar _promise_external = require('./implementation/promise_external');\n\nvar fbsPromiseimpl = _interopRequireWildcard(_promise_external);\n\nvar _requests = require('./implementation/requests');\n\nvar fbsRequests = _interopRequireWildcard(_requests);\n\nvar _type = require('./implementation/type');\n\nvar typeUtils = _interopRequireWildcard(_type);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\nvar UploadTask = function () {\n    /**\n     * @param ref The firebaseStorage.Reference object this task came\n     *     from, untyped to avoid cyclic dependencies.\n     * @param blob The blob to upload.\n     */\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\n        if (metadata === void 0) {\n            metadata = null;\n        }\n        var _this = this;\n        this.transferred_ = 0;\n        this.needToFetchStatus_ = false;\n        this.needToFetchMetadata_ = false;\n        this.observers_ = [];\n        this.error_ = null;\n        this.uploadUrl_ = null;\n        this.request_ = null;\n        this.chunkMultiplier_ = 1;\n        this.resolve_ = null;\n        this.reject_ = null;\n        this.ref_ = ref;\n        this.authWrapper_ = authWrapper;\n        this.location_ = location;\n        this.blob_ = blob;\n        this.metadata_ = metadata;\n        this.mappings_ = mappings;\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\n        this.state_ = _taskenums.InternalTaskState.RUNNING;\n        this.errorHandler_ = function (error) {\n            _this.request_ = null;\n            _this.chunkMultiplier_ = 1;\n            if (error.codeEquals(errors.Code.CANCELED)) {\n                _this.needToFetchStatus_ = true;\n                _this.completeTransitions_();\n            } else {\n                _this.error_ = error;\n                _this.transition_(_taskenums.InternalTaskState.ERROR);\n            }\n        };\n        this.metadataErrorHandler_ = function (error) {\n            _this.request_ = null;\n            if (error.codeEquals(errors.Code.CANCELED)) {\n                _this.completeTransitions_();\n            } else {\n                _this.error_ = error;\n                _this.transition_(_taskenums.InternalTaskState.ERROR);\n            }\n        };\n        this.promise_ = fbsPromiseimpl.make(function (resolve, reject) {\n            _this.resolve_ = resolve;\n            _this.reject_ = reject;\n            _this.start_();\n        });\n        // Prevent uncaught rejections on the internal promise from bubbling out\n        // to the top level with a dummy handler.\n        this.promise_.then(null, function () {});\n    }\n    UploadTask.prototype.makeProgressCallback_ = function () {\n        var _this = this;\n        var sizeBefore = this.transferred_;\n        return function (loaded, total) {\n            _this.updateProgress_(sizeBefore + loaded);\n        };\n    };\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\n        return blob.size() > 256 * 1024;\n    };\n    UploadTask.prototype.start_ = function () {\n        if (this.state_ !== _taskenums.InternalTaskState.RUNNING) {\n            // This can happen if someone pauses us in a resume callback, for example.\n            return;\n        }\n        if (this.request_ !== null) {\n            return;\n        }\n        if (this.resumable_) {\n            if (this.uploadUrl_ === null) {\n                this.createResumable_();\n            } else {\n                if (this.needToFetchStatus_) {\n                    this.fetchStatus_();\n                } else {\n                    if (this.needToFetchMetadata_) {\n                        // Happens if we miss the metadata on upload completion.\n                        this.fetchMetadata_();\n                    } else {\n                        this.continueUpload_();\n                    }\n                }\n            }\n        } else {\n            this.oneShotUpload_();\n        }\n    };\n    UploadTask.prototype.resolveToken_ = function (callback) {\n        var _this = this;\n        this.authWrapper_.getAuthToken().then(function (authToken) {\n            switch (_this.state_) {\n                case _taskenums.InternalTaskState.RUNNING:\n                    callback(authToken);\n                    break;\n                case _taskenums.InternalTaskState.CANCELING:\n                    _this.transition_(_taskenums.InternalTaskState.CANCELED);\n                    break;\n                case _taskenums.InternalTaskState.PAUSING:\n                    _this.transition_(_taskenums.InternalTaskState.PAUSED);\n                    break;\n                default:\n            }\n        });\n    };\n    // TODO(andysoto): assert false\n    UploadTask.prototype.createResumable_ = function () {\n        var _this = this;\n        this.resolveToken_(function (authToken) {\n            var requestInfo = fbsRequests.createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n            _this.request_ = createRequest;\n            createRequest.getPromise().then(function (url) {\n                _this.request_ = null;\n                _this.uploadUrl_ = url;\n                _this.needToFetchStatus_ = false;\n                _this.completeTransitions_();\n            }, _this.errorHandler_);\n        });\n    };\n    UploadTask.prototype.fetchStatus_ = function () {\n        var _this = this;\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\n        var url = this.uploadUrl_;\n        this.resolveToken_(function (authToken) {\n            var requestInfo = fbsRequests.getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n            _this.request_ = statusRequest;\n            statusRequest.getPromise().then(function (status) {\n                status = status;\n                _this.request_ = null;\n                _this.updateProgress_(status.current);\n                _this.needToFetchStatus_ = false;\n                if (status.finalized) {\n                    _this.needToFetchMetadata_ = true;\n                }\n                _this.completeTransitions_();\n            }, _this.errorHandler_);\n        });\n    };\n    UploadTask.prototype.continueUpload_ = function () {\n        var _this = this;\n        var chunkSize = fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n        var status = new fbsRequests.ResumableUploadStatus(this.transferred_, this.blob_.size());\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\n        var url = this.uploadUrl_;\n        this.resolveToken_(function (authToken) {\n            var requestInfo;\n            try {\n                requestInfo = fbsRequests.continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n            } catch (e) {\n                _this.error_ = e;\n                _this.transition_(_taskenums.InternalTaskState.ERROR);\n                return;\n            }\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n            _this.request_ = uploadRequest;\n            uploadRequest.getPromise().then(function (newStatus) {\n                _this.increaseMultiplier_();\n                _this.request_ = null;\n                _this.updateProgress_(newStatus.current);\n                if (newStatus.finalized) {\n                    _this.metadata_ = newStatus.metadata;\n                    _this.transition_(_taskenums.InternalTaskState.SUCCESS);\n                } else {\n                    _this.completeTransitions_();\n                }\n            }, _this.errorHandler_);\n        });\n    };\n    UploadTask.prototype.increaseMultiplier_ = function () {\n        var currentSize = fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n        // Max chunk size is 32M.\n        if (currentSize < 32 * 1024 * 1024) {\n            this.chunkMultiplier_ *= 2;\n        }\n    };\n    UploadTask.prototype.fetchMetadata_ = function () {\n        var _this = this;\n        this.resolveToken_(function (authToken) {\n            var requestInfo = fbsRequests.getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n            _this.request_ = metadataRequest;\n            metadataRequest.getPromise().then(function (metadata) {\n                _this.request_ = null;\n                _this.metadata_ = metadata;\n                _this.transition_(_taskenums.InternalTaskState.SUCCESS);\n            }, _this.metadataErrorHandler_);\n        });\n    };\n    UploadTask.prototype.oneShotUpload_ = function () {\n        var _this = this;\n        this.resolveToken_(function (authToken) {\n            var requestInfo = fbsRequests.multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n            _this.request_ = multipartRequest;\n            multipartRequest.getPromise().then(function (metadata) {\n                _this.request_ = null;\n                _this.metadata_ = metadata;\n                _this.updateProgress_(_this.blob_.size());\n                _this.transition_(_taskenums.InternalTaskState.SUCCESS);\n            }, _this.errorHandler_);\n        });\n    };\n    UploadTask.prototype.updateProgress_ = function (transferred) {\n        var old = this.transferred_;\n        this.transferred_ = transferred;\n        // A progress update can make the \"transferred\" value smaller (e.g. a\n        // partial upload not completed by server, after which the \"transferred\"\n        // value may reset to the value at the beginning of the request).\n        if (this.transferred_ !== old) {\n            this.notifyObservers_();\n        }\n    };\n    UploadTask.prototype.transition_ = function (state) {\n        if (this.state_ === state) {\n            return;\n        }\n        switch (state) {\n            case _taskenums.InternalTaskState.CANCELING:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.RUNNING ||\n                //        this.state_ === InternalTaskState.PAUSING);\n                this.state_ = state;\n                if (this.request_ !== null) {\n                    this.request_.cancel();\n                }\n                break;\n            case _taskenums.InternalTaskState.PAUSING:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.RUNNING);\n                this.state_ = state;\n                if (this.request_ !== null) {\n                    this.request_.cancel();\n                }\n                break;\n            case _taskenums.InternalTaskState.RUNNING:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.PAUSED ||\n                //        this.state_ === InternalTaskState.PAUSING);\n                var wasPaused = this.state_ === _taskenums.InternalTaskState.PAUSED;\n                this.state_ = state;\n                if (wasPaused) {\n                    this.notifyObservers_();\n                    this.start_();\n                }\n                break;\n            case _taskenums.InternalTaskState.PAUSED:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.PAUSING);\n                this.state_ = state;\n                this.notifyObservers_();\n                break;\n            case _taskenums.InternalTaskState.CANCELED:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.PAUSED ||\n                //        this.state_ === InternalTaskState.CANCELING);\n                this.error_ = errors.canceled();\n                this.state_ = state;\n                this.notifyObservers_();\n                break;\n            case _taskenums.InternalTaskState.ERROR:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.RUNNING ||\n                //        this.state_ === InternalTaskState.PAUSING ||\n                //        this.state_ === InternalTaskState.CANCELING);\n                this.state_ = state;\n                this.notifyObservers_();\n                break;\n            case _taskenums.InternalTaskState.SUCCESS:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.RUNNING ||\n                //        this.state_ === InternalTaskState.PAUSING ||\n                //        this.state_ === InternalTaskState.CANCELING);\n                this.state_ = state;\n                this.notifyObservers_();\n                break;\n        }\n    };\n    UploadTask.prototype.completeTransitions_ = function () {\n        switch (this.state_) {\n            case _taskenums.InternalTaskState.PAUSING:\n                this.transition_(_taskenums.InternalTaskState.PAUSED);\n                break;\n            case _taskenums.InternalTaskState.CANCELING:\n                this.transition_(_taskenums.InternalTaskState.CANCELED);\n                break;\n            case _taskenums.InternalTaskState.RUNNING:\n                this.start_();\n                break;\n            default:\n                // TODO(andysoto): assert(false);\n                break;\n        }\n    };\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n        get: function get() {\n            var externalState = fbsTaskEnums.taskStateFromInternalTaskState(this.state_);\n            return new _tasksnapshot.UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a callback for an event.\n     * @param type The type of event to listen for.\n     */\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n        if (nextOrObserver === void 0) {\n            nextOrObserver = undefined;\n        }\n        if (error === void 0) {\n            error = undefined;\n        }\n        if (completed === void 0) {\n            completed = undefined;\n        }\n        function typeValidator(_p) {\n            if (type !== _taskenums.TaskEvent.STATE_CHANGED) {\n                throw \"Expected one of the event types: [\" + _taskenums.TaskEvent.STATE_CHANGED + \"].\";\n            }\n        }\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n        var nextValidator = fbsArgs.nullFunctionSpec(true).validator;\n        var observerValidator = fbsArgs.looseObjectSpec(null, true).validator;\n        function nextOrObserverValidator(p) {\n            try {\n                nextValidator(p);\n                return;\n            } catch (e) {}\n            try {\n                observerValidator(p);\n                var anyDefined = typeUtils.isJustDef(p['next']) || typeUtils.isJustDef(p['error']) || typeUtils.isJustDef(p['complete']);\n                if (!anyDefined) {\n                    throw '';\n                }\n                return;\n            } catch (e) {\n                throw nextOrObserverMessage;\n            }\n        }\n        var specs = [fbsArgs.stringSpec(typeValidator), fbsArgs.looseObjectSpec(nextOrObserverValidator, true), fbsArgs.nullFunctionSpec(true), fbsArgs.nullFunctionSpec(true)];\n        fbsArgs.validate('on', specs, arguments);\n        var self = this;\n        function makeBinder(specs) {\n            function binder(nextOrObserver, error, opt_complete) {\n                if (specs !== null) {\n                    fbsArgs.validate('on', specs, arguments);\n                }\n                var observer = new _observer.Observer(nextOrObserver, error, completed);\n                self.addObserver_(observer);\n                return function () {\n                    self.removeObserver_(observer);\n                };\n            }\n            return binder;\n        }\n        function binderNextOrObserverValidator(p) {\n            if (p === null) {\n                throw nextOrObserverMessage;\n            }\n            nextOrObserverValidator(p);\n        }\n        var binderSpecs = [fbsArgs.looseObjectSpec(binderNextOrObserverValidator), fbsArgs.nullFunctionSpec(true), fbsArgs.nullFunctionSpec(true)];\n        var typeOnly = !(typeUtils.isJustDef(nextOrObserver) || typeUtils.isJustDef(error) || typeUtils.isJustDef(completed));\n        if (typeOnly) {\n            return makeBinder(binderSpecs);\n        } else {\n            return makeBinder(null)(nextOrObserver, error, completed);\n        }\n    };\n    /**\n     * This object behaves like a Promise, and resolves with its snapshot data\n     * when the upload completes.\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\n     * @param onRejected The rejection callback.\n     */\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\n        // These casts are needed so that TypeScript can infer the types of the\n        // resulting Promise.\n        return this.promise_.then(onFulfilled, onRejected);\n    };\n    /**\n     * Equivalent to calling `then(null, onRejected)`.\n     */\n    UploadTask.prototype.catch = function (onRejected) {\n        return this.then(null, onRejected);\n    };\n    /**\n     * Adds the given observer.\n     */\n    UploadTask.prototype.addObserver_ = function (observer) {\n        this.observers_.push(observer);\n        this.notifyObserver_(observer);\n    };\n    /**\n     * Removes the given observer.\n     */\n    UploadTask.prototype.removeObserver_ = function (observer) {\n        fbsArray.remove(this.observers_, observer);\n    };\n    UploadTask.prototype.notifyObservers_ = function () {\n        var _this = this;\n        this.finishPromise_();\n        var observers = fbsArray.clone(this.observers_);\n        observers.forEach(function (observer) {\n            _this.notifyObserver_(observer);\n        });\n    };\n    UploadTask.prototype.finishPromise_ = function () {\n        if (this.resolve_ !== null) {\n            var triggered = true;\n            switch (fbsTaskEnums.taskStateFromInternalTaskState(this.state_)) {\n                case _taskenums.TaskState.SUCCESS:\n                    (0, _async.async)(this.resolve_.bind(null, this.snapshot))();\n                    break;\n                case _taskenums.TaskState.CANCELED:\n                case _taskenums.TaskState.ERROR:\n                    var toCall = this.reject_;\n                    (0, _async.async)(toCall.bind(null, this.error_))();\n                    break;\n                default:\n                    triggered = false;\n                    break;\n            }\n            if (triggered) {\n                this.resolve_ = null;\n                this.reject_ = null;\n            }\n        }\n    };\n    UploadTask.prototype.notifyObserver_ = function (observer) {\n        var externalState = fbsTaskEnums.taskStateFromInternalTaskState(this.state_);\n        switch (externalState) {\n            case _taskenums.TaskState.RUNNING:\n            case _taskenums.TaskState.PAUSED:\n                if (observer.next !== null) {\n                    (0, _async.async)(observer.next.bind(observer, this.snapshot))();\n                }\n                break;\n            case _taskenums.TaskState.SUCCESS:\n                if (observer.complete !== null) {\n                    (0, _async.async)(observer.complete.bind(observer))();\n                }\n                break;\n            case _taskenums.TaskState.CANCELED:\n            case _taskenums.TaskState.ERROR:\n                if (observer.error !== null) {\n                    (0, _async.async)(observer.error.bind(observer, this.error_))();\n                }\n                break;\n            default:\n                // TODO(andysoto): assert(false);\n                if (observer.error !== null) {\n                    (0, _async.async)(observer.error.bind(observer, this.error_))();\n                }\n        }\n    };\n    /**\n     * Resumes a paused task. Has no effect on a currently running or failed task.\n     * @return True if the operation took effect, false if ignored.\n     */\n    UploadTask.prototype.resume = function () {\n        fbsArgs.validate('resume', [], arguments);\n        var valid = this.state_ === _taskenums.InternalTaskState.PAUSED || this.state_ === _taskenums.InternalTaskState.PAUSING;\n        if (valid) {\n            this.transition_(_taskenums.InternalTaskState.RUNNING);\n        }\n        return valid;\n    };\n    /**\n     * Pauses a currently running task. Has no effect on a paused or failed task.\n     * @return True if the operation took effect, false if ignored.\n     */\n    UploadTask.prototype.pause = function () {\n        fbsArgs.validate('pause', [], arguments);\n        var valid = this.state_ === _taskenums.InternalTaskState.RUNNING;\n        if (valid) {\n            this.transition_(_taskenums.InternalTaskState.PAUSING);\n        }\n        return valid;\n    };\n    /**\n     * Cancels a currently running or paused task. Has no effect on a complete or\n     * failed task.\n     * @return True if the operation took effect, false if ignored.\n     */\n    UploadTask.prototype.cancel = function () {\n        fbsArgs.validate('cancel', [], arguments);\n        var valid = this.state_ === _taskenums.InternalTaskState.RUNNING || this.state_ === _taskenums.InternalTaskState.PAUSING;\n        if (valid) {\n            this.transition_(_taskenums.InternalTaskState.CANCELING);\n        }\n        return valid;\n    };\n    return UploadTask;\n}();\nexports.UploadTask = UploadTask;\n\n\n},{\"./implementation/args\":102,\"./implementation/array\":103,\"./implementation/async\":104,\"./implementation/error\":109,\"./implementation/observer\":116,\"./implementation/promise_external\":118,\"./implementation/requests\":122,\"./implementation/taskenums\":124,\"./implementation/type\":125,\"./tasksnapshot\":133}],133:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar UploadTaskSnapshot = function () {\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n        this.bytesTransferred = bytesTransferred;\n        this.totalBytes = totalBytes;\n        this.state = state;\n        this.metadata = metadata;\n        this.task = task;\n        this.ref = ref;\n    }\n    Object.defineProperty(UploadTaskSnapshot.prototype, \"downloadURL\", {\n        get: function get() {\n            if (this.metadata !== null) {\n                var urls = this.metadata['downloadURLs'];\n                if (urls != null && urls[0] != null) {\n                    return urls[0];\n                } else {\n                    return null;\n                }\n            } else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UploadTaskSnapshot;\n}();\nexports.UploadTaskSnapshot = UploadTaskSnapshot;\n\n\n},{}],134:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Sha1 = undefined;\n\nvar _hash = require('./hash');\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @extends {Hash}\n * @final\n * @struct\n */\nvar Sha1 = function (_super) {\n    __extends(Sha1, _super);\n    function Sha1() {\n        var _this = _super.call(this) || this;\n        /**\n         * Holds the previous values of accumulated variables a-e in the compress_\n         * function.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.chain_ = [];\n        /**\n         * A buffer holding the partially computed hash result.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.buf_ = [];\n        /**\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n         * as the message schedule in the docs.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.W_ = [];\n        /**\n         * Contains data needed to pad messages less than 64 bytes.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.pad_ = [];\n        /**\n         * @private {number}\n         */\n        _this.inbuf_ = 0;\n        /**\n         * @private {number}\n         */\n        _this.total_ = 0;\n        _this.blockSize = 512 / 8;\n        _this.pad_[0] = 128;\n        for (var i = 1; i < _this.blockSize; ++i) {\n            _this.pad_[i] = 0;\n        }\n        _this.reset();\n        return _this;\n    }\n    Sha1.prototype.reset = function () {\n        this.chain_[0] = 0x67452301;\n        this.chain_[1] = 0xefcdab89;\n        this.chain_[2] = 0x98badcfe;\n        this.chain_[3] = 0x10325476;\n        this.chain_[4] = 0xc3d2e1f0;\n        this.inbuf_ = 0;\n        this.total_ = 0;\n    };\n    /**\n     * Internal compress helper function.\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\n     * @param {number=} opt_offset Offset of the block in the buffer.\n     * @private\n     */\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\n        if (!opt_offset) {\n            opt_offset = 0;\n        }\n        var W = this.W_;\n        // get 16 big endian words\n        if (typeof buf === 'string') {\n            for (var i = 0; i < 16; i++) {\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n                // have a bug that turns the post-increment ++ operator into pre-increment\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\n                // correctness and which is affected by this bug, so I've removed all uses\n                // of post-increment ++ in which the result value is used.  We can revert\n                // this change once the Safari bug\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n                // most clients have been updated.\n                W[i] = buf.charCodeAt(opt_offset) << 24 | buf.charCodeAt(opt_offset + 1) << 16 | buf.charCodeAt(opt_offset + 2) << 8 | buf.charCodeAt(opt_offset + 3);\n                opt_offset += 4;\n            }\n        } else {\n            for (var i = 0; i < 16; i++) {\n                W[i] = buf[opt_offset] << 24 | buf[opt_offset + 1] << 16 | buf[opt_offset + 2] << 8 | buf[opt_offset + 3];\n                opt_offset += 4;\n            }\n        }\n        // expand to 80 words\n        for (var i = 16; i < 80; i++) {\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = (t << 1 | t >>> 31) & 0xffffffff;\n        }\n        var a = this.chain_[0];\n        var b = this.chain_[1];\n        var c = this.chain_[2];\n        var d = this.chain_[3];\n        var e = this.chain_[4];\n        var f, k;\n        // TODO(user): Try to unroll this loop to speed up the computation.\n        for (var i = 0; i < 80; i++) {\n            if (i < 40) {\n                if (i < 20) {\n                    f = d ^ b & (c ^ d);\n                    k = 0x5a827999;\n                } else {\n                    f = b ^ c ^ d;\n                    k = 0x6ed9eba1;\n                }\n            } else {\n                if (i < 60) {\n                    f = b & c | d & (b | c);\n                    k = 0x8f1bbcdc;\n                } else {\n                    f = b ^ c ^ d;\n                    k = 0xca62c1d6;\n                }\n            }\n            var t = (a << 5 | a >>> 27) + f + e + k + W[i] & 0xffffffff;\n            e = d;\n            d = c;\n            c = (b << 30 | b >>> 2) & 0xffffffff;\n            b = a;\n            a = t;\n        }\n        this.chain_[0] = this.chain_[0] + a & 0xffffffff;\n        this.chain_[1] = this.chain_[1] + b & 0xffffffff;\n        this.chain_[2] = this.chain_[2] + c & 0xffffffff;\n        this.chain_[3] = this.chain_[3] + d & 0xffffffff;\n        this.chain_[4] = this.chain_[4] + e & 0xffffffff;\n    };\n    Sha1.prototype.update = function (bytes, opt_length) {\n        // TODO(johnlenz): tighten the function signature and remove this check\n        if (bytes == null) {\n            return;\n        }\n        if (opt_length === undefined) {\n            opt_length = bytes.length;\n        }\n        var lengthMinusBlock = opt_length - this.blockSize;\n        var n = 0;\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\n        var buf = this.buf_;\n        var inbuf = this.inbuf_;\n        // The outer while loop should execute at most twice.\n        while (n < opt_length) {\n            // When we have no data in the block to top up, we can directly process the\n            // input buffer (assuming it contains sufficient data). This gives ~25%\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n            // the data is provided in large chunks (or in multiples of 64 bytes).\n            if (inbuf == 0) {\n                while (n <= lengthMinusBlock) {\n                    this.compress_(bytes, n);\n                    n += this.blockSize;\n                }\n            }\n            if (typeof bytes === 'string') {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes.charCodeAt(n);\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            } else {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes[n];\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n        }\n        this.inbuf_ = inbuf;\n        this.total_ += opt_length;\n    };\n    /** @override */\n    Sha1.prototype.digest = function () {\n        var digest = [];\n        var totalBits = this.total_ * 8;\n        // Add pad 0x80 0x00*.\n        if (this.inbuf_ < 56) {\n            this.update(this.pad_, 56 - this.inbuf_);\n        } else {\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n        }\n        // Add # bits.\n        for (var i = this.blockSize - 1; i >= 56; i--) {\n            this.buf_[i] = totalBits & 255;\n            totalBits /= 256; // Don't use bit-shifting here!\n        }\n        this.compress_(this.buf_);\n        var n = 0;\n        for (var i = 0; i < 5; i++) {\n            for (var j = 24; j >= 0; j -= 8) {\n                digest[n] = this.chain_[i] >> j & 255;\n                ++n;\n            }\n        }\n        return digest;\n    };\n    return Sha1;\n}(_hash.Hash);\nexports.Sha1 = Sha1;\n\n\n},{\"./hash\":141}],135:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.assertionError = exports.assert = undefined;\n\nvar _constants = require('./constants');\n\n/**\n * Throws an error if the provided assertion is falsy\n * @param {*} assertion The assertion to be tested for falsiness\n * @param {!string} message The message to display if the check fails\n */\nvar assert = exports.assert = function assert(assertion, message) {\n    if (!assertion) {\n        throw assertionError(message);\n    }\n};\n/**\n * Returns an Error object suitable for throwing.\n * @param {string} message\n * @return {!Error}\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar assertionError = exports.assertionError = function assertionError(message) {\n    return new Error('Firebase Database (' + _constants.CONSTANTS.SDK_VERSION + ') INTERNAL ASSERT FAILED: ' + message);\n};\n\n\n},{\"./constants\":136}],136:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\nvar CONSTANTS = exports.CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '4.2.0'\n};\n\n\n},{}],137:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.base64 = undefined;\n\nvar _globalScope = require('./globalScope');\n\nvar stringToByteArray = function stringToByteArray(str) {\n    var output = [],\n        p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        while (c > 255) {\n            output[p++] = c & 255;\n            c >>= 8;\n        }\n        output[p++] = c;\n    }\n    return output;\n};\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param {Array<number>} bytes Array of numbers representing characters.\n * @return {string} Stringification of the array.\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar byteArrayToString = function byteArrayToString(bytes) {\n    var CHUNK_SIZE = 8192;\n    // Special-case the simple case for speed's sake.\n    if (bytes.length < CHUNK_SIZE) {\n        return String.fromCharCode.apply(null, bytes);\n    }\n    // The remaining logic splits conversion by chunks since\n    // Function#apply() has a maximum parameter count.\n    // See discussion: http://goo.gl/LrWmZ9\n    var str = '';\n    for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {\n        var chunk = bytes.slice(i, i + CHUNK_SIZE);\n        str += String.fromCharCode.apply(null, chunk);\n    }\n    return str;\n};\n// Static lookup maps, lazily populated by init_()\nvar base64 = exports.base64 = {\n    /**\n     * Maps bytes to characters.\n     * @type {Object}\n     * @private\n     */\n    byteToCharMap_: null,\n    /**\n     * Maps characters to bytes.\n     * @type {Object}\n     * @private\n     */\n    charToByteMap_: null,\n    /**\n     * Maps bytes to websafe characters.\n     * @type {Object}\n     * @private\n     */\n    byteToCharMapWebSafe_: null,\n    /**\n     * Maps websafe characters to bytes.\n     * @type {Object}\n     * @private\n     */\n    charToByteMapWebSafe_: null,\n    /**\n     * Our default alphabet, shared between\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n     * @type {string}\n     */\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n    /**\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n     * @type {string}\n     */\n    get ENCODED_VALS() {\n        return this.ENCODED_VALS_BASE + '+/=';\n    },\n    /**\n     * Our websafe alphabet.\n     * @type {string}\n     */\n    get ENCODED_VALS_WEBSAFE() {\n        return this.ENCODED_VALS_BASE + '-_.';\n    },\n    /**\n     * Whether this browser supports the atob and btoa functions. This extension\n     * started at Mozilla but is now implemented by many browsers. We use the\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\n     * but still allowing the standard per-browser compilations.\n     *\n     * @type {boolean}\n     */\n    HAS_NATIVE_SUPPORT: typeof _globalScope.globalScope.atob === 'function',\n    /**\n     * Base64-encode an array of bytes.\n     *\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\n     *     value in [0, 255]) to encode.\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\n     *     alternative alphabet.\n     * @return {string} The base64 encoded string.\n     */\n    encodeByteArray: function encodeByteArray(input, opt_webSafe) {\n        if (!Array.isArray(input)) {\n            throw Error('encodeByteArray takes an array as a parameter');\n        }\n        this.init_();\n        var byteToCharMap = opt_webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;\n        var output = [];\n        for (var i = 0; i < input.length; i += 3) {\n            var byte1 = input[i];\n            var haveByte2 = i + 1 < input.length;\n            var byte2 = haveByte2 ? input[i + 1] : 0;\n            var haveByte3 = i + 2 < input.length;\n            var byte3 = haveByte3 ? input[i + 2] : 0;\n            var outByte1 = byte1 >> 2;\n            var outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;\n            var outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;\n            var outByte4 = byte3 & 0x3f;\n            if (!haveByte3) {\n                outByte4 = 64;\n                if (!haveByte2) {\n                    outByte3 = 64;\n                }\n            }\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\n        }\n        return output.join('');\n    },\n    /**\n     * Base64-encode a string.\n     *\n     * @param {string} input A string to encode.\n     * @param {boolean=} opt_webSafe If true, we should use the\n     *     alternative alphabet.\n     * @return {string} The base64 encoded string.\n     */\n    encodeString: function encodeString(input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return btoa(input);\n        }\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * @param {string} input to decode.\n     * @param {boolean=} opt_webSafe True if we should use the\n     *     alternative alphabet.\n     * @return {string} string representing the decoded value.\n     */\n    decodeString: function decodeString(input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return atob(input);\n        }\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * In base-64 decoding, groups of four characters are converted into three\n     * bytes.  If the encoder did not apply padding, the input length may not\n     * be a multiple of 4.\n     *\n     * In this case, the last group will have fewer than 4 characters, and\n     * padding will be inferred.  If the group has one or two characters, it decodes\n     * to one byte.  If the group has three characters, it decodes to two bytes.\n     *\n     * @param {string} input Input to decode.\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\n     * @return {!Array<number>} bytes representing the decoded value.\n     */\n    decodeStringToByteArray: function decodeStringToByteArray(input, opt_webSafe) {\n        this.init_();\n        var charToByteMap = opt_webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;\n        var output = [];\n        for (var i = 0; i < input.length;) {\n            var byte1 = charToByteMap[input.charAt(i++)];\n            var haveByte2 = i < input.length;\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n            ++i;\n            var haveByte3 = i < input.length;\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            var haveByte4 = i < input.length;\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n                throw Error();\n            }\n            var outByte1 = byte1 << 2 | byte2 >> 4;\n            output.push(outByte1);\n            if (byte3 != 64) {\n                var outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;\n                output.push(outByte2);\n                if (byte4 != 64) {\n                    var outByte3 = byte3 << 6 & 0xc0 | byte4;\n                    output.push(outByte3);\n                }\n            }\n        }\n        return output;\n    },\n    /**\n     * Lazy static initialization function. Called before\n     * accessing any of the static map variables.\n     * @private\n     */\n    init_: function init_() {\n        if (!this.byteToCharMap_) {\n            this.byteToCharMap_ = {};\n            this.charToByteMap_ = {};\n            this.byteToCharMapWebSafe_ = {};\n            this.charToByteMapWebSafe_ = {};\n            // We want quick mappings back and forth, so we precompute two maps.\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n                // Be forgiving when decoding and correctly decode both encodings.\n                if (i >= this.ENCODED_VALS_BASE.length) {\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n                }\n            }\n        }\n    }\n};\n\n\n},{\"./globalScope\":140}],138:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nfunction deepCopy(value) {\n    return deepExtend(undefined, value);\n}\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n */\nfunction deepExtend(target, source) {\n    if (!(source instanceof Object)) {\n        return source;\n    }\n    switch (source.constructor) {\n        case Date:\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            var dateValue = source;\n            return new Date(dateValue.getTime());\n        case Object:\n            if (target === undefined) {\n                target = {};\n            }\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for (var prop in source) {\n        if (!source.hasOwnProperty(prop)) {\n            continue;\n        }\n        target[prop] = deepExtend(target[prop], source[prop]);\n    }\n    return target;\n}\n// TODO: Really needed (for JSCompiler type checking)?\nfunction patchProperty(obj, prop, value) {\n    obj[prop] = value;\n}\n\n\n},{}],139:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isNodeSdk = exports.isReactNative = exports.isMobileCordova = exports.getUA = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nvar _constants = require('./constants');\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return {string} user agent string\n */\nvar getUA = exports.getUA = function getUA() {\n    if (typeof navigator !== 'undefined' && typeof navigator['userAgent'] === 'string') {\n        return navigator['userAgent'];\n    } else {\n        return '';\n    }\n};\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\n * Cordova `onDeviceReady`, which would normally wait for a callback.\n *\n * @return {boolean} isMobileCordova\n */\nvar isMobileCordova = exports.isMobileCordova = function isMobileCordova() {\n    return typeof window !== 'undefined' && !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA());\n};\n/**\n * Detect React Native.\n *\n * @return {boolean} True if ReactNative environment is detected.\n */\nvar isReactNative = exports.isReactNative = function isReactNative() {\n    return (typeof navigator === 'undefined' ? 'undefined' : _typeof(navigator)) === 'object' && navigator['product'] === 'ReactNative';\n};\n/**\n * Detect Node.js.\n *\n * @return {boolean} True if Node.js environment is detected.\n */\nvar isNodeSdk = exports.isNodeSdk = function isNodeSdk() {\n    return _constants.CONSTANTS.NODE_CLIENT === true || _constants.CONSTANTS.NODE_ADMIN === true;\n};\n\n\n},{\"./constants\":136}],140:[function(require,module,exports){\n(function (global){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar scope;\nif (typeof global !== 'undefined') {\n    scope = global;\n} else if (typeof self !== 'undefined') {\n    scope = self;\n} else {\n    try {\n        scope = Function('return this')();\n    } catch (e) {\n        throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n}\nvar globalScope = exports.globalScope = scope;\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],141:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @fileoverview Abstract cryptographic hash interface.\n *\n * See Sha1 and Md5 for sample implementations.\n *\n */\n/**\n * Create a cryptographic hash instance.\n *\n * @constructor\n * @struct\n */\nvar Hash = function () {\n  function Hash() {\n    /**\n     * The block size for the hasher.\n     * @type {number}\n     */\n    this.blockSize = -1;\n  }\n  return Hash;\n}();\nexports.Hash = Hash;\n\n\n},{}],142:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nvar jsonEval = exports.jsonEval = function jsonEval(str) {\n  return JSON.parse(str);\n};\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nvar stringify = exports.stringify = function stringify(data) {\n  return JSON.stringify(data);\n};\n\n\n},{}],143:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isAdmin = exports.isValidFormat = exports.issuedAtTime = exports.isValidTimestamp = exports.decode = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                              * Copyright 2017 Google Inc.\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                              * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                              * limitations under the License.\n                                                                                                                                                                                                                                                                              */\n\n\nvar _util = require('../database/core/util/util');\n\nvar _json = require('./json');\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {{header: *, claims: *, data: *, signature: string}}\n */\nvar decode = exports.decode = function decode(token) {\n    var header = {},\n        claims = {},\n        data = {},\n        signature = '';\n    try {\n        var parts = token.split('.');\n        header = (0, _json.jsonEval)((0, _util.base64Decode)(parts[0]) || '');\n        claims = (0, _json.jsonEval)((0, _util.base64Decode)(parts[1]) || '');\n        signature = parts[2];\n        data = claims['d'] || {};\n        delete claims['d'];\n    } catch (e) {}\n    return {\n        header: header,\n        claims: claims,\n        data: data,\n        signature: signature\n    };\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nvar isValidTimestamp = exports.isValidTimestamp = function isValidTimestamp(token) {\n    var claims = decode(token).claims,\n        now = Math.floor(new Date().getTime() / 1000),\n        validSince,\n        validUntil;\n    if ((typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object') {\n        if (claims.hasOwnProperty('nbf')) {\n            validSince = claims['nbf'];\n        } else if (claims.hasOwnProperty('iat')) {\n            validSince = claims['iat'];\n        }\n        if (claims.hasOwnProperty('exp')) {\n            validUntil = claims['exp'];\n        } else {\n            // token will expire after 24h by default\n            validUntil = validSince + 86400;\n        }\n    }\n    return now && validSince && validUntil && now >= validSince && now <= validUntil;\n};\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {?number}\n */\nvar issuedAtTime = exports.issuedAtTime = function issuedAtTime(token) {\n    var claims = decode(token).claims;\n    if ((typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims.hasOwnProperty('iat')) {\n        return claims['iat'];\n    }\n    return null;\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\n * signature.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nvar isValidFormat = exports.isValidFormat = function isValidFormat(token) {\n    var decoded = decode(token),\n        claims = decoded.claims;\n    return !!decoded.signature && !!claims && (typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims.hasOwnProperty('iat');\n};\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nvar isAdmin = exports.isAdmin = function isAdmin(token) {\n    var claims = decode(token).claims;\n    return (typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims['admin'] === true;\n};\n\n\n},{\"../database/core/util/util\":65,\"./json\":142}],144:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\nvar contains = exports.contains = function contains(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar safeGet = exports.safeGet = function safeGet(obj, key) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) return obj[key];\n    // else return undefined.\n};\n/**\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\n *\n * @param {?Object.<K,V>} obj Object to enumerate.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nvar forEach = exports.forEach = function forEach(obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            fn(key, obj[key]);\n        }\n    }\n};\n/**\n * Copies all the (own) properties from one object to another.\n * @param {!Object} objTo\n * @param {!Object} objFrom\n * @return {!Object} objTo\n */\nvar extend = exports.extend = function extend(objTo, objFrom) {\n    forEach(objFrom, function (key, value) {\n        objTo[key] = value;\n    });\n    return objTo;\n};\n/**\n * Returns a clone of the specified object.\n * @param {!Object} obj\n * @return {!Object} cloned obj.\n */\nvar clone = exports.clone = function clone(obj) {\n    return extend({}, obj);\n};\n/**\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\n * for functions.\n *\n * @param obj {*} A potential object.\n * @returns {boolean} True if it's an object.\n */\nvar isNonNullObject = exports.isNonNullObject = function isNonNullObject(obj) {\n    return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null;\n};\nvar isEmpty = exports.isEmpty = function isEmpty(obj) {\n    for (var key in obj) {\n        return false;\n    }\n    return true;\n};\nvar getCount = exports.getCount = function getCount(obj) {\n    var rv = 0;\n    for (var key in obj) {\n        rv++;\n    }\n    return rv;\n};\nvar map = exports.map = function map(obj, f, opt_obj) {\n    var res = {};\n    for (var key in obj) {\n        res[key] = f.call(opt_obj, obj[key], key, obj);\n    }\n    return res;\n};\nvar findKey = exports.findKey = function findKey(obj, fn, opt_this) {\n    for (var key in obj) {\n        if (fn.call(opt_this, obj[key], key, obj)) {\n            return key;\n        }\n    }\n    return undefined;\n};\nvar findValue = exports.findValue = function findValue(obj, fn, opt_this) {\n    var key = findKey(obj, fn, opt_this);\n    return key && obj[key];\n};\nvar getAnyKey = exports.getAnyKey = function getAnyKey(obj) {\n    for (var key in obj) {\n        return key;\n    }\n};\nvar getValues = exports.getValues = function getValues(obj) {\n    var res = [];\n    var i = 0;\n    for (var key in obj) {\n        res[i++] = obj[key];\n    }\n    return res;\n};\n/**\n * Tests whether every key/value pair in an object pass the test implemented\n * by the provided function\n *\n * @param {?Object.<K,V>} obj Object to test.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nvar every = exports.every = function every(obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            if (!fn(key, obj[key])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\n\n\n},{}],145:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.attachDummyErrorHandler = exports.Deferred = exports.PromiseImpl = undefined;\n\nvar _globalScope = require('../utils/globalScope');\n\nvar PromiseImpl = exports.PromiseImpl = _globalScope.globalScope.Promise || require('promise-polyfill');\n/**\n * A deferred promise implementation.\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar Deferred = function () {\n    /** @constructor */\n    function Deferred() {\n        var self = this;\n        this.resolve = null;\n        this.reject = null;\n        this.promise = new PromiseImpl(function (resolve, reject) {\n            self.resolve = resolve;\n            self.reject = reject;\n        });\n    }\n    /**\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} opt_nodeCallback\n     * @return {!function(?(Error), ?=)}\n     */\n    Deferred.prototype.wrapCallback = function (opt_nodeCallback) {\n        var self = this;\n        /**\n           * @param {?Error} error\n           * @param {?=} opt_value\n           */\n        function meta(error, opt_value) {\n            if (error) {\n                self.reject(error);\n            } else {\n                self.resolve(opt_value);\n            }\n            if (typeof opt_nodeCallback === 'function') {\n                attachDummyErrorHandler(self.promise);\n                // Some of our callbacks don't expect a value and our own tests\n                // assert that the parameter length is 1\n                if (opt_nodeCallback.length === 1) {\n                    opt_nodeCallback(error);\n                } else {\n                    opt_nodeCallback(error, opt_value);\n                }\n            }\n        }\n        return meta;\n    };\n    return Deferred;\n}();\nexports.Deferred = Deferred;\n/**\n * Chrome (and maybe other browsers) report an Error in the console if you reject a promise\n * and nobody handles the error. This is normally a good thing, but this will confuse devs who\n * never intended to use promises in the first place. So in some cases (in particular, if the\n * developer attached a callback), we should attach a dummy resolver to the promise to suppress\n * this error.\n *\n * Note: We can't do this all the time, since it breaks the Promise spec (though in the obscure\n * 3.3.3 section related to upgrading non-compliant promises).\n * @param {!firebase.Promise} promise\n */\n\nvar attachDummyErrorHandler = exports.attachDummyErrorHandler = function attachDummyErrorHandler(promise) {\n    promise.catch(function () {});\n};\n\n\n},{\"../utils/globalScope\":140,\"promise-polyfill\":100}],146:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\n/**\n * This is the Array.prototype.findIndex polyfill from MDN\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n * https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n */\nif (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n        value: function value(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var o = Object(this);\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n            // 5. Let k be 0.\n            var k = 0;\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return k.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return k;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n            // 7. Return -1.\n            return -1;\n        }\n    });\n}\n/**\n * This is the Array.prototype.find polyfill from MDN\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * https://tc39.github.io/ecma262/#sec-array.prototype.find\n */\nif (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n        value: function value(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var o = Object(this);\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n            // 5. Let k be 0.\n            var k = 0;\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return kValue.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return kValue;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n            // 7. Return undefined.\n            return undefined;\n        }\n    });\n}\n\n\n},{}],147:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.stringLength = exports.stringToByteArray = undefined;\n\nvar _assert = require('./assert');\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\n * @param {string} str\n * @return {Array}\n */\nvar stringToByteArray = exports.stringToByteArray = function stringToByteArray(str) {\n    var out = [],\n        p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        // Is this the lead surrogate in a surrogate pair?\n        if (c >= 0xd800 && c <= 0xdbff) {\n            var high = c - 0xd800; // the high 10 bits.\n            i++;\n            (0, _assert.assert)(i < str.length, 'Surrogate pair missing trail surrogate.');\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n            c = 0x10000 + (high << 10) + low;\n        }\n        if (c < 128) {\n            out[p++] = c;\n        } else if (c < 2048) {\n            out[p++] = c >> 6 | 192;\n            out[p++] = c & 63 | 128;\n        } else if (c < 65536) {\n            out[p++] = c >> 12 | 224;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        } else {\n            out[p++] = c >> 18 | 240;\n            out[p++] = c >> 12 & 63 | 128;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        }\n    }\n    return out;\n};\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar stringLength = exports.stringLength = function stringLength(str) {\n    var p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            p++;\n        } else if (c < 2048) {\n            p += 2;\n        } else if (c >= 0xd800 && c <= 0xdbff) {\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n            p += 4;\n            i++; // skip trail surrogate.\n        } else {\n            p += 3;\n        }\n    }\n    return p;\n};\n\n\n},{\"./assert\":135}],148:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.querystringDecode = exports.querystring = undefined;\n\nvar _obj = require('./obj');\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\n * object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n *\n * @param {!Object} querystringParams\n * @return {string}\n */\nvar querystring = exports.querystring = function querystring(querystringParams) {\n    var params = [];\n    (0, _obj.forEach)(querystringParams, function (key, value) {\n        if (Array.isArray(value)) {\n            value.forEach(function (arrayVal) {\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\n            });\n        } else {\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n        }\n    });\n    return params.length ? '&' + params.join('&') : '';\n};\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\n *\n * @param {string} querystring\n * @return {!Object}\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar querystringDecode = exports.querystringDecode = function querystringDecode(querystring) {\n    var obj = {};\n    var tokens = querystring.replace(/^\\?/, '').split('&');\n    tokens.forEach(function (token) {\n        if (token) {\n            var key = token.split('=');\n            obj[key[0]] = key[1];\n        }\n    });\n    return obj;\n};\n\n\n},{\"./obj\":144}],149:[function(require,module,exports){\n/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.errorPrefix = errorPrefix;\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param {!string} fnName The function name\n * @param {!number} minCount The minimum number of arguments to allow for the function call\n * @param {!number} maxCount The maximum number of argument to allow for the function call\n * @param {!number} argCount The actual number of arguments provided.\n */\nvar validateArgCount = exports.validateArgCount = function validateArgCount(fnName, minCount, maxCount, argCount) {\n    var argError;\n    if (argCount < minCount) {\n        argError = 'at least ' + minCount;\n    } else if (argCount > maxCount) {\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n    }\n    if (argError) {\n        var error = fnName + ' failed: Was called with ' + argCount + (argCount === 1 ? ' argument.' : ' arguments.') + ' Expects ' + argError + '.';\n        throw new Error(error);\n    }\n};\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param {!string} fnName The function name\n * @param {!number} argumentNumber The index of the argument\n * @param {boolean} optional Whether or not the argument is optional\n * @return {!string} The prefix to add to the error thrown for validation.\n */\nfunction errorPrefix(fnName, argumentNumber, optional) {\n    var argName = '';\n    switch (argumentNumber) {\n        case 1:\n            argName = optional ? 'first' : 'First';\n            break;\n        case 2:\n            argName = optional ? 'second' : 'Second';\n            break;\n        case 3:\n            argName = optional ? 'third' : 'Third';\n            break;\n        case 4:\n            argName = optional ? 'fourth' : 'Fourth';\n            break;\n        default:\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\n    }\n    var error = fnName + ' failed: ';\n    error += argName + ' argument ';\n    return error;\n}\n/**\n * @param {!string} fnName\n * @param {!number} argumentNumber\n * @param {!string} namespace\n * @param {boolean} optional\n */\nvar validateNamespace = exports.validateNamespace = function validateNamespace(fnName, argumentNumber, namespace, optional) {\n    if (optional && !namespace) return;\n    if (typeof namespace !== 'string') {\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid firebase namespace.');\n    }\n};\nvar validateCallback = exports.validateCallback = function validateCallback(fnName, argumentNumber, callback, optional) {\n    if (optional && !callback) return;\n    if (typeof callback !== 'function') throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid function.');\n};\nvar validateContextObject = exports.validateContextObject = function validateContextObject(fnName, argumentNumber, context, optional) {\n    if (optional && !context) return;\n    if ((typeof context === 'undefined' ? 'undefined' : _typeof(context)) !== 'object' || context === null) throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid context object.');\n};\n\n\n},{}],150:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],151:[function(require,module,exports){\nwindow.Prometheus=function(){function f(){var a=document.createElement(\"script\");a.setAttribute(\"type\",\"text/javascript\"),a.setAttribute(\"src\",\"https://vingkan.github.io/prometheus/script/html2canvas.min.js\"),document.getElementsByTagName(\"head\")[0].appendChild(a)}function h(a){var b=firebase.database().ref(\"prometheus\"+a);return b}function j(a){var b={location:{},country:{}},c=new XMLHttpRequest;c.open(\"GET\",\"https://geoip.nekudo.com/api/\",!1);try{c.send();var d=c.responseText;b=JSON.parse(d)}catch(a){}a&&a(b)}function k(a){i.latitude=a.location.latitude,i.longitude=a.location.longitude,i.city=a.city,i.country=a.country.name,i.ip=a.ip,i.isValid=null!=i.latitude}function l(){var a=\"NO_GEOLOCATION_EXCEPTION\";return i.isValid&&(a={latitude:i.latitude,longitude:i.longitude,city:i.city,country:i.country,ip:i.ip}),a}function m(){return{timestamp:Date.now(),timezoneOffset:(new Date).getTimezoneOffset()}}function n(){function a(){var a=!1;return function(b){(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(b)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(b.substr(0,4)))&&(a=!0)}(navigator.userAgent||navigator.vendor||window.opera),a}function b(){var a=!1;return function(b){(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(b)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(b.substr(0,4)))&&(a=!0)}(navigator.userAgent||navigator.vendor||window.opera),a}var c=\"desktop\";a()?c=\"mobile\":b()&&(c=\"tablet\");var e,d=navigator.userAgent,f=d.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i)||[];if(/trident/i.test(f[1]))return e=/\\brv[ :]+(\\d+)/g.exec(d)||[],{name:\"IE\",version:e[1]||\"\"};if(\"Chrome\"===f[1]&&(e=d.match(/\\bOPR\\/(\\d+)/),null!=e))return{name:\"Opera\",version:e[1]};f=f[2]?[f[1],f[2]]:[navigator.appName,navigator.appVersion,\"-?\"],null!=(e=d.match(/version\\/(\\d+)/i))&&f.splice(1,1,e[1]);var g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;return{device:c,name:f[0],version:f[1],width:g,height:h}}function o(){return{title:document.title,url:location.href}}function p(a){var b;switch(a){case\"location\":b=l();break;case\"datetime\":b=m();break;case\"browser\":b=n();break;case\"page\":b=o();break;case\"all\":b={location:l(),datetime:m(),browser:n(),page:o()};break;default:b=\"BAD_REQUEST_EXCEPTION\"}return b}function q(a){\"Notification\"in window?\"granted\"===Notification.permission?r(a):\"denied\"!==Notification.permission?Notification.requestPermission(function(b){\"granted\"===b&&r(a)}):console.warn(\"Notification permissions rejected.\"):console.warn(\"Notifications not supported.\")}function r(a){if(a.message){a.icon||(a.icon=\"http://vingkan.github.io/prometheus/img/contrast-logo.png\");var b=new Notification(a.message,a);a.clickFn&&(b.onclick=function(b){b.preventDefault(),a.clickFn()})}else var b=new Notification(a)}var a,b,e,c=!1,g=function(d){firebase.initializeApp(d);var g=d.databaseURL.split(\"//\")[1].split(\".\")[0];e=\"prometheus_user_\"+g,b=!0,b&&j(k),d.localhost&&d.localhost===!0&&(c=!0),d.noScreenshots&&d.noScreenshots===!0?a=!1:(a=!0,f());var i={trackUser:function(a){a&&localStorage.setItem(e,a)},getUID:function(){var a=\"ANONYMOUS_USER\";return this.isTrackingUser()&&(a=localStorage.getItem(e)),a},save:function(a,b){var d=this.getUID(),e=a||{type:\"SAVED_VISIT\"},f=b||\"all\",g=this.get(f);if(c===!1&&g.page.url.indexOf(\"localhost\")>-1);else{var i=h(\"/visits/\"+d);i.push({meta:g,visit:e});var j=h(\"/users/\"+d+\"/lastVisit\");j.once(\"value\",function(a){var b=a.val();g.datetime.timestamp>b&&j.set(g.datetime.timestamp)})}},error:function(a){var b={type:\"ERROR\",message:a.message,url:a.url,line:a.line};this.capture(b)},logon:function(a,b,d){if(a){if(this.trackUser(a),c===!1&&location.hostname.indexOf(\"localhost\")>-1);else if(b){var e=h(\"/users/\"+a+\"/profile\");e.set(b)}this.loadFeatures(),this.save({type:\"USER_LOGON\"},d)}},capture:function(b){var b=b||{};b.type||(b.type=\"SCREEN_CAPTURE\");var c=this;a?html2canvas(window.parent.document.body,{onrendered:function(a){a.style.display=\"none\",document.body.appendChild(a);var d=a.toDataURL(\"image/png\");b.img=d,c.save(b)}}):(b.img_note=\"NONE_TAKEN\",this.save(b))},isTrackingUser:function(){var a=!1,b=localStorage.getItem(e);return b&&(a=!0),a},loadFeatures:function(){var a=this.getUID(),b=h(\"/features\");b.on(\"value\",function(b){var c=b.val(),d=[];for(var e in c)if(c[e]){var f=c[e];for(var g in f.access)f.access[g]&&f.access[g]===a&&d.push(e)}localStorage.setItem(\"prometheus_features\",d)})},has:function(a){var b=!1,c=localStorage.getItem(\"prometheus_features\")||\"\",d=c.split(\",\");return d.indexOf(a)>-1&&(b=!0),b},get:function(a){var b={};if(Array.isArray(a)&&a.length>0)if(a.indexOf(\"all\")>-1)b=p(\"all\");else for(var c=0;c<a.length;c++){var d=a[c];b[d]=p(d)}else b=a?p(a):\"BAD_REQUEST_EXCEPTION\";return b},can:function(a,b,c){var d=this.getUID(),e=h(\"/features/\"+a+\"/\");e.once(\"value\",function(e){if(e.exists()){var f=e.val(),g=h(\"/users/\"+d+\"/data\");g.once(\"value\",function(d){var e={};d.exists()&&(e=d.val());var g={};if(f.validate){var h=new Function(\"userData\",f.validate);g=h(e)}else c&&c({message:\"The feature could not be validated.\",featureID:a});g.allowed?b&&b(g.data):c&&c(g.data)})}else c&&c({message:\"The feature you requested does not exist.\",featureID:a})})},deliver:function(a,b,c){i.can(a,function(d){var e=i.getUID(),f=h(\"/features/\"+a+\"/\");f.once(\"value\",function(f){if(f.exists()){var g=f.val(),i=h(\"/users/\"+e+\"/data\");i.once(\"value\",function(a){var c={};a.exists()&&(c=a.val());var e={};if(g.process){var f=new Function(\"userData\",g.process);e=f(c),i.set(c)}else e.data=d;b&&b(e.data)})}else c&&c({message:\"The feature you requested does not exist.\",featureID:a})})},function(a){c&&c(a)})},redeem:function(a,b,c,d){var e=d||{},f=this.getUID(),g=h(\"/users/\"+f+\"/data/\");g.once(\"value\",function(d){var f={};d.exists()&&(f=d.val());var j=[];if(f.hasOwnProperty(\"promos\")&&(j=f.promos),j.indexOf(a)<0){var k=h(\"/promos/\"+a+\"/\");k.once(\"value\",function(d){if(d.exists()&&d.val().hasOwnProperty(\"redeem\")){var e=d.val(),h=new Function(\"userData\",e.redeem);j.push(a),f.promos=j,g.set(h(f)),i.save({type:\"PROMO_CODE_USED\",code:a}),b&&b(e.info)}else i.save({type:\"PROMO_CODE_ERROR\",code:a,error:\"NOT_FOUND\"}),c&&c({type:\"NOT_FOUND\",message:\"Promo code not found.\"})})}else e.silent||i.save({type:\"PROMO_CODE_ERROR\",code:a,error:\"ALREADY_USED\"}),c&&c({type:\"ALREADY_USED\",message:\"Promo code already used.\"})})},Note:function(a){var b=this;return{seen:function(c){var d=c||{};d.type=\"NOTIFICATION_CLICKED\",d.noteid=a,b.save(d)},terminate:function(c){var d=b.getUID(),e=h(\"/users/\"+d+\"/data/\"+a);e.once(\"value\",function(d){if(d.exists()){e.remove();var f=c||{};f.type=\"NOTIFICATION_TERMINATED\",f.noteid=a,b.save(f)}})}}},notify:function(a,b,c){var e=this;this.deliver(a,function(){q({message:b.title||\"Alert\",body:b.message||\"\",icon:b.icon||d.icon||null,clickFn:function(){var b=e.Note(a);c?c(b):b.seen()}})})},timers:{},Timer:function(a){var b=this;return{id:a,data:{},started:!1,start:function(a){this.started||(this.started=Date.now(),a&&(this.data=a))},stop:function(c){if(this.started){var d={type:\"TIMER\",timerID:this.id,start:this.started,end:Date.now()};for(var e in this.data)this.data.hasOwnProperty(e)&&(d[e]=this.data[e]);for(var f in c)c.hasOwnProperty(f)&&(d[f]=c[f]);b.save(d),b.timers[a]=null}}}},timer:function(a){return this.timers[a]||(this.timers[a]=this.Timer(a)),this.timers[a]},toString:function(){return console.log(d),\"Bringing Firebase to humanity!\"}};return window.onerror=function(a,b,c){console.warn(\"Error recorded by Prometheus.js.\"),i.error({message:a,url:b,line:c})},i.loadFeatures(),i},i={latitude:0,longitude:0,isValid:!1};return g}();\n},{}],152:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _0x7f9a = ['AIzaSyAqeXC738jjgG_oNBUGzPAnsCmp8qluqgk', 'scarlethacks.firebaseapp.com', 'https://scarlethacks.firebaseio.com'];(function (_0x47aa0e, _0x1598aa) {\n  var _0x3ee41d = function _0x3ee41d(_0x142aae) {\n    while (--_0x142aae) {\n      _0x47aa0e['push'](_0x47aa0e['shift']());\n    }\n  };_0x3ee41d(++_0x1598aa);\n})(_0x7f9a, 0x1dd);var _0xa7f9 = function _0xa7f9(_0x39bd45, _0x31c25a) {\n  _0x39bd45 = _0x39bd45 - 0x0;var _0x1b771e = _0x7f9a[_0x39bd45];return _0x1b771e;\n};var config = { 'apiKey': _0xa7f9('0x0'), 'authDomain': _0xa7f9('0x1'), 'databaseURL': _0xa7f9('0x2'), 'projectId': 'scarlethacks', 'storageBucket': '', 'messagingSenderId': '446391337951' };\nexports.config = config;\n\n},{}],153:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar Database = function Database(firebase, config) {\n\n\tvar ScarletHacksFirebase = firebase.initializeApp(config, 'ScarletHacks Database');\n\tconfig.localhost = false;\n\tvar prometheus = Prometheus(config);\n\tvar db = ScarletHacksFirebase.database();\n\tvar auth = ScarletHacksFirebase.auth();\n\n\tvar database = {\n\n\t\tinitialized: false,\n\n\t\tinit: function init(callback) {\n\t\t\tauth.signInAnonymously().then(function (done) {\n\t\t\t\tvar user = database.getCurrentUser();\n\t\t\t\tprometheus.logon(user.uid);\n\t\t\t\tcallback(user);\n\t\t\t}).catch(function (err) {\n\t\t\t\tconsole.error(err.code, err.message);\n\t\t\t\treject(err);\n\t\t\t});\n\t\t},\n\n\t\tgetPrometheus: function getPrometheus() {\n\t\t\treturn prometheus;\n\t\t},\n\n\t\tgetCurrentUser: function getCurrentUser() {\n\t\t\treturn auth.currentUser;\n\t\t},\n\n\t\tsaveSignupEmail: function saveSignupEmail(email) {\n\t\t\tvar uid = firebase.auth().currentUser.uid;\n\t\t\treturn db.ref('email-signups').push({\n\t\t\t\temail: email,\n\t\t\t\ttimestamp: Date.now(),\n\t\t\t\tuid: database.getCurrentUser().uid\n\t\t\t});\n\t\t}\n\n\t};\n\n\treturn database;\n};\n\nexports.Database = Database;\n\n},{}],154:[function(require,module,exports){\n'use strict';\n\nvar _config = require('./config');\n\nvar _database = require('./database');\n\nvar firebase = require('firebase');\nwindow.firebase = firebase;\nvar prometheusjs = require('prometheusjs');\n\nvar database = (0, _database.Database)(firebase, _config.config);\n\ndatabase.init(main);\n\nfunction main(user) {\n\n\tconsole.log('Welcome to ScarletHacks.');\n\n\tvar prometheus = database.getPrometheus();\n\n\tvar signupEmail = document.getElementById('signup-email');\n\tvar signupButton = document.getElementById('signup-submit');\n\n\tvar postSignupEmail = function postSignupEmail(email) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tconsole.log('Email: ' + email);\n\t\t\tif (email) {\n\t\t\t\tvar isEmail = email.indexOf('@') > -1;\n\t\t\t\tvar isEdu = email.indexOf('.edu') > -1;\n\t\t\t\tif (isEmail && isEdu) {\n\t\t\t\t\tdatabase.saveSignupEmail(email).then(resolve).catch(reject);\n\t\t\t\t} else {\n\t\t\t\t\treject('Please enter a valid .edu email address.');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treject('Please enter a valid .edu email address.');\n\t\t\t}\n\t\t});\n\t};\n\n\tvar signupWithEmail = function signupWithEmail() {\n\t\tsignupButton.classList.add('is-loading');\n\t\tvar email = signupEmail.value;\n\t\tpostSignupEmail(email).then(function (done) {\n\t\t\tsignupButton.classList.remove('is-loading');\n\t\t\tvex.dialog.alert('We\\'ll let you know when ScarletHacks applications are out!');\n\t\t}).catch(function (err) {\n\t\t\tsignupButton.classList.remove('is-loading');\n\t\t\tvar errMessage = err + '';\n\t\t\tvex.dialog.alert(errMessage);\n\t\t});\n\t};\n\n\tsignupEmail.addEventListener('keypress', function (e) {\n\t\tvar keyCode = e.keyCode || e.which;\n\t\tif (keyCode == 13) {\n\t\t\tsignupWithEmail();\n\t\t}\n\t});\n\n\tsignupButton.addEventListener('click', function (e) {\n\t\tsignupWithEmail();\n\t});\n}\n\n},{\"./config\":152,\"./database\":153,\"firebase\":88,\"prometheusjs\":151}]},{},[154])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}